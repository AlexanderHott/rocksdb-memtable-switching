<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1190" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1173.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1173.00"> </text><svg id="frames" x="10" width="1180" total_samples="4176726109"><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,459,936 samples, 0.11%)</title><rect x="0.0000%" y="1029" width="0.1068%" height="15" fill="rgb(227,0,7)" fg:x="1989" fg:w="4459936"/><text x="0.2500%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,459,936 samples, 0.11%)</title><rect x="0.0000%" y="1013" width="0.1068%" height="15" fill="rgb(217,0,24)" fg:x="1989" fg:w="4459936"/><text x="0.2500%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4,459,936 samples, 0.11%)</title><rect x="0.0000%" y="997" width="0.1068%" height="15" fill="rgb(221,193,54)" fg:x="1989" fg:w="4459936"/><text x="0.2500%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,459,936 samples, 0.11%)</title><rect x="0.0000%" y="981" width="0.1068%" height="15" fill="rgb(248,212,6)" fg:x="1989" fg:w="4459936"/><text x="0.2500%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,459,936 samples, 0.11%)</title><rect x="0.0000%" y="965" width="0.1068%" height="15" fill="rgb(208,68,35)" fg:x="1989" fg:w="4459936"/><text x="0.2500%" y="975.50"></text></g><g><title>alloc::alloc::alloc (4,459,936 samples, 0.11%)</title><rect x="0.0000%" y="949" width="0.1068%" height="15" fill="rgb(232,128,0)" fg:x="1989" fg:w="4459936"/><text x="0.2500%" y="959.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8,561,705 samples, 0.20%)</title><rect x="0.0000%" y="1109" width="0.2050%" height="15" fill="rgb(207,160,47)" fg:x="1989" fg:w="8561705"/><text x="0.2500%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,561,705 samples, 0.20%)</title><rect x="0.0000%" y="1093" width="0.2050%" height="15" fill="rgb(228,23,34)" fg:x="1989" fg:w="8561705"/><text x="0.2500%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,561,705 samples, 0.20%)</title><rect x="0.0000%" y="1077" width="0.2050%" height="15" fill="rgb(218,30,26)" fg:x="1989" fg:w="8561705"/><text x="0.2500%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (8,561,705 samples, 0.20%)</title><rect x="0.0000%" y="1061" width="0.2050%" height="15" fill="rgb(220,122,19)" fg:x="1989" fg:w="8561705"/><text x="0.2500%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,561,705 samples, 0.20%)</title><rect x="0.0000%" y="1045" width="0.2050%" height="15" fill="rgb(250,228,42)" fg:x="1989" fg:w="8561705"/><text x="0.2500%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4,101,769 samples, 0.10%)</title><rect x="0.1068%" y="1029" width="0.0982%" height="15" fill="rgb(240,193,28)" fg:x="4461925" fg:w="4101769"/><text x="0.3568%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,101,769 samples, 0.10%)</title><rect x="0.1068%" y="1013" width="0.0982%" height="15" fill="rgb(216,20,37)" fg:x="4461925" fg:w="4101769"/><text x="0.3568%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,901,882 samples, 0.21%)</title><rect x="0.2050%" y="1109" width="0.2131%" height="15" fill="rgb(206,188,39)" fg:x="8563694" fg:w="8901882"/><text x="0.4550%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,901,882 samples, 0.21%)</title><rect x="0.2050%" y="1093" width="0.2131%" height="15" fill="rgb(217,207,13)" fg:x="8563694" fg:w="8901882"/><text x="0.4550%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_fold (8,901,882 samples, 0.21%)</title><rect x="0.2050%" y="1077" width="0.2131%" height="15" fill="rgb(231,73,38)" fg:x="8563694" fg:w="8901882"/><text x="0.4550%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8,901,882 samples, 0.21%)</title><rect x="0.2050%" y="1061" width="0.2131%" height="15" fill="rgb(225,20,46)" fg:x="8563694" fg:w="8901882"/><text x="0.4550%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8,901,882 samples, 0.21%)</title><rect x="0.2050%" y="1045" width="0.2131%" height="15" fill="rgb(210,31,41)" fg:x="8563694" fg:w="8901882"/><text x="0.4550%" y="1055.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,901,882 samples, 0.21%)</title><rect x="0.2050%" y="1029" width="0.2131%" height="15" fill="rgb(221,200,47)" fg:x="8563694" fg:w="8901882"/><text x="0.4550%" y="1039.50"></text></g><g><title>&lt;&amp;D as rand::distributions::distribution::Distribution&lt;T&gt;&gt;::sample (8,901,882 samples, 0.21%)</title><rect x="0.2050%" y="1013" width="0.2131%" height="15" fill="rgb(226,26,5)" fg:x="8563694" fg:w="8901882"/><text x="0.4550%" y="1023.50"></text></g><g><title>&lt;rand::distributions::other::Alphanumeric as rand::distributions::distribution::Distribution&lt;u8&gt;&gt;::sample (8,901,882 samples, 0.21%)</title><rect x="0.2050%" y="997" width="0.2131%" height="15" fill="rgb(249,33,26)" fg:x="8563694" fg:w="8901882"/><text x="0.4550%" y="1007.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u32 (8,901,882 samples, 0.21%)</title><rect x="0.2050%" y="981" width="0.2131%" height="15" fill="rgb(235,183,28)" fg:x="8563694" fg:w="8901882"/><text x="0.4550%" y="991.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (8,901,882 samples, 0.21%)</title><rect x="0.2050%" y="965" width="0.2131%" height="15" fill="rgb(221,5,38)" fg:x="8563694" fg:w="8901882"/><text x="0.4550%" y="975.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (8,901,882 samples, 0.21%)</title><rect x="0.2050%" y="949" width="0.2131%" height="15" fill="rgb(247,18,42)" fg:x="8563694" fg:w="8901882"/><text x="0.4550%" y="959.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (8,901,882 samples, 0.21%)</title><rect x="0.2050%" y="933" width="0.2131%" height="15" fill="rgb(241,131,45)" fg:x="8563694" fg:w="8901882"/><text x="0.4550%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4,459,042 samples, 0.11%)</title><rect x="0.5246%" y="1045" width="0.1068%" height="15" fill="rgb(249,31,29)" fg:x="21909967" fg:w="4459042"/><text x="0.7746%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (4,459,042 samples, 0.11%)</title><rect x="0.5246%" y="1029" width="0.1068%" height="15" fill="rgb(225,111,53)" fg:x="21909967" fg:w="4459042"/><text x="0.7746%" y="1039.50"></text></g><g><title>core::ptr::write (4,459,042 samples, 0.11%)</title><rect x="0.5246%" y="1013" width="0.1068%" height="15" fill="rgb(238,160,17)" fg:x="21909967" fg:w="4459042"/><text x="0.7746%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22,055,305 samples, 0.53%)</title><rect x="0.4182%" y="1093" width="0.5281%" height="15" fill="rgb(214,148,48)" fg:x="17465576" fg:w="22055305"/><text x="0.6682%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (17,610,914 samples, 0.42%)</title><rect x="0.5246%" y="1077" width="0.4216%" height="15" fill="rgb(232,36,49)" fg:x="21909967" fg:w="17610914"/><text x="0.7746%" y="1087.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (17,610,914 samples, 0.42%)</title><rect x="0.5246%" y="1061" width="0.4216%" height="15" fill="rgb(209,103,24)" fg:x="21909967" fg:w="17610914"/><text x="0.7746%" y="1071.50"></text></g><g><title>workload_gen::spec::Inserts::generate_operations::_{{closure}} (13,151,872 samples, 0.31%)</title><rect x="0.6313%" y="1045" width="0.3149%" height="15" fill="rgb(229,88,8)" fg:x="26369009" fg:w="13151872"/><text x="0.8813%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (4,451,803 samples, 0.11%)</title><rect x="0.8396%" y="1029" width="0.1066%" height="15" fill="rgb(213,181,19)" fg:x="35069078" fg:w="4451803"/><text x="1.0896%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,451,803 samples, 0.11%)</title><rect x="0.8396%" y="1013" width="0.1066%" height="15" fill="rgb(254,191,54)" fg:x="35069078" fg:w="4451803"/><text x="1.0896%" y="1023.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (4,448,454 samples, 0.11%)</title><rect x="0.9462%" y="1093" width="0.1065%" height="15" fill="rgb(241,83,37)" fg:x="39520881" fg:w="4448454"/><text x="1.1962%" y="1103.50"></text></g><g><title>_int_malloc (4,453,894 samples, 0.11%)</title><rect x="1.0527%" y="1093" width="0.1066%" height="15" fill="rgb(233,36,39)" fg:x="43969335" fg:w="4453894"/><text x="1.3027%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8,898,688 samples, 0.21%)</title><rect x="1.1594%" y="1093" width="0.2131%" height="15" fill="rgb(226,3,54)" fg:x="48423229" fg:w="8898688"/><text x="1.4094%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (8,898,688 samples, 0.21%)</title><rect x="1.1594%" y="1077" width="0.2131%" height="15" fill="rgb(245,192,40)" fg:x="48423229" fg:w="8898688"/><text x="1.4094%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (8,898,688 samples, 0.21%)</title><rect x="1.1594%" y="1061" width="0.2131%" height="15" fill="rgb(238,167,29)" fg:x="48423229" fg:w="8898688"/><text x="1.4094%" y="1071.50"></text></g><g><title>hashbrown::raw::h2 (4,449,267 samples, 0.11%)</title><rect x="1.2659%" y="1045" width="0.1065%" height="15" fill="rgb(232,182,51)" fg:x="52872650" fg:w="4449267"/><text x="1.5159%" y="1055.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (3,859,282 samples, 0.09%)</title><rect x="1.3724%" y="1029" width="0.0924%" height="15" fill="rgb(231,60,39)" fg:x="57321917" fg:w="3859282"/><text x="1.6224%" y="1039.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (3,859,282 samples, 0.09%)</title><rect x="1.3724%" y="1013" width="0.0924%" height="15" fill="rgb(208,69,12)" fg:x="57321917" fg:w="3859282"/><text x="1.6224%" y="1023.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (3,859,282 samples, 0.09%)</title><rect x="1.3724%" y="997" width="0.0924%" height="15" fill="rgb(235,93,37)" fg:x="57321917" fg:w="3859282"/><text x="1.6224%" y="1007.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (8,311,151 samples, 0.20%)</title><rect x="1.3724%" y="1093" width="0.1990%" height="15" fill="rgb(213,116,39)" fg:x="57321917" fg:w="8311151"/><text x="1.6224%" y="1103.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (8,311,151 samples, 0.20%)</title><rect x="1.3724%" y="1077" width="0.1990%" height="15" fill="rgb(222,207,29)" fg:x="57321917" fg:w="8311151"/><text x="1.6224%" y="1087.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (8,311,151 samples, 0.20%)</title><rect x="1.3724%" y="1061" width="0.1990%" height="15" fill="rgb(206,96,30)" fg:x="57321917" fg:w="8311151"/><text x="1.6224%" y="1071.50"></text></g><g><title>rand_chacha::guts::round (8,311,151 samples, 0.20%)</title><rect x="1.3724%" y="1045" width="0.1990%" height="15" fill="rgb(218,138,4)" fg:x="57321917" fg:w="8311151"/><text x="1.6224%" y="1055.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (4,451,869 samples, 0.11%)</title><rect x="1.4648%" y="1029" width="0.1066%" height="15" fill="rgb(250,191,14)" fg:x="61181199" fg:w="4451869"/><text x="1.7148%" y="1039.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (4,451,869 samples, 0.11%)</title><rect x="1.4648%" y="1013" width="0.1066%" height="15" fill="rgb(239,60,40)" fg:x="61181199" fg:w="4451869"/><text x="1.7148%" y="1023.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (4,451,869 samples, 0.11%)</title><rect x="1.4648%" y="997" width="0.1066%" height="15" fill="rgb(206,27,48)" fg:x="61181199" fg:w="4451869"/><text x="1.7148%" y="1007.50"></text></g><g><title>[[heap]] (52,275,697 samples, 1.25%)</title><rect x="0.4182%" y="1109" width="1.2516%" height="15" fill="rgb(225,35,8)" fg:x="17465576" fg:w="52275697"/><text x="0.6682%" y="1119.50"></text></g><g><title>unlink_chunk (4,108,205 samples, 0.10%)</title><rect x="1.5714%" y="1093" width="0.0984%" height="15" fill="rgb(250,213,24)" fg:x="65633068" fg:w="4108205"/><text x="1.8214%" y="1103.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,450,411 samples, 0.11%)</title><rect x="1.6698%" y="1093" width="0.1066%" height="15" fill="rgb(247,123,22)" fg:x="69741273" fg:w="4450411"/><text x="1.9198%" y="1103.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4,448,897 samples, 0.11%)</title><rect x="1.7763%" y="1093" width="0.1065%" height="15" fill="rgb(231,138,38)" fg:x="74191684" fg:w="4448897"/><text x="2.0263%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,776,890 samples, 0.43%)</title><rect x="1.8828%" y="1093" width="0.4256%" height="15" fill="rgb(231,145,46)" fg:x="78640581" fg:w="17776890"/><text x="2.1328%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13,318,683 samples, 0.32%)</title><rect x="1.9896%" y="1077" width="0.3189%" height="15" fill="rgb(251,118,11)" fg:x="83098788" fg:w="13318683"/><text x="2.2396%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_fold (13,318,683 samples, 0.32%)</title><rect x="1.9896%" y="1061" width="0.3189%" height="15" fill="rgb(217,147,25)" fg:x="83098788" fg:w="13318683"/><text x="2.2396%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13,318,683 samples, 0.32%)</title><rect x="1.9896%" y="1045" width="0.3189%" height="15" fill="rgb(247,81,37)" fg:x="83098788" fg:w="13318683"/><text x="2.2396%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13,318,683 samples, 0.32%)</title><rect x="1.9896%" y="1029" width="0.3189%" height="15" fill="rgb(209,12,38)" fg:x="83098788" fg:w="13318683"/><text x="2.2396%" y="1039.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13,318,683 samples, 0.32%)</title><rect x="1.9896%" y="1013" width="0.3189%" height="15" fill="rgb(227,1,9)" fg:x="83098788" fg:w="13318683"/><text x="2.2396%" y="1023.50"></text></g><g><title>&lt;&amp;D as rand::distributions::distribution::Distribution&lt;T&gt;&gt;::sample (13,318,683 samples, 0.32%)</title><rect x="1.9896%" y="997" width="0.3189%" height="15" fill="rgb(248,47,43)" fg:x="83098788" fg:w="13318683"/><text x="2.2396%" y="1007.50"></text></g><g><title>&lt;rand::distributions::other::Alphanumeric as rand::distributions::distribution::Distribution&lt;u8&gt;&gt;::sample (13,318,683 samples, 0.32%)</title><rect x="1.9896%" y="981" width="0.3189%" height="15" fill="rgb(221,10,30)" fg:x="83098788" fg:w="13318683"/><text x="2.2396%" y="991.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u32 (4,434,810 samples, 0.11%)</title><rect x="2.2023%" y="965" width="0.1062%" height="15" fill="rgb(210,229,1)" fg:x="91982661" fg:w="4434810"/><text x="2.4523%" y="975.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (4,434,810 samples, 0.11%)</title><rect x="2.2023%" y="949" width="0.1062%" height="15" fill="rgb(222,148,37)" fg:x="91982661" fg:w="4434810"/><text x="2.4523%" y="959.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (4,434,810 samples, 0.11%)</title><rect x="2.2023%" y="933" width="0.1062%" height="15" fill="rgb(234,67,33)" fg:x="91982661" fg:w="4434810"/><text x="2.4523%" y="943.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (4,434,810 samples, 0.11%)</title><rect x="2.2023%" y="917" width="0.1062%" height="15" fill="rgb(247,98,35)" fg:x="91982661" fg:w="4434810"/><text x="2.4523%" y="927.50"></text></g><g><title>__GI___libc_free (4,442,016 samples, 0.11%)</title><rect x="2.3084%" y="1093" width="0.1064%" height="15" fill="rgb(247,138,52)" fg:x="96417471" fg:w="4442016"/><text x="2.5584%" y="1103.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (8,902,491 samples, 0.21%)</title><rect x="2.4148%" y="1093" width="0.2131%" height="15" fill="rgb(213,79,30)" fg:x="100859487" fg:w="8902491"/><text x="2.6648%" y="1103.50"></text></g><g><title>__rdl_alloc (4,432,328 samples, 0.11%)</title><rect x="2.6279%" y="1093" width="0.1061%" height="15" fill="rgb(246,177,23)" fg:x="109761978" fg:w="4432328"/><text x="2.8779%" y="1103.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4,432,328 samples, 0.11%)</title><rect x="2.6279%" y="1077" width="0.1061%" height="15" fill="rgb(230,62,27)" fg:x="109761978" fg:w="4432328"/><text x="2.8779%" y="1087.50"></text></g><g><title>core::fmt::Formatter::pad (4,289,665 samples, 0.10%)</title><rect x="2.7341%" y="1093" width="0.1027%" height="15" fill="rgb(216,154,8)" fg:x="114194306" fg:w="4289665"/><text x="2.9841%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,449,901 samples, 0.11%)</title><rect x="2.8368%" y="1093" width="0.1065%" height="15" fill="rgb(244,35,45)" fg:x="118483971" fg:w="4449901"/><text x="3.0868%" y="1103.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as core::ops::arith::Add&gt;::add (4,448,423 samples, 0.11%)</title><rect x="2.9433%" y="1045" width="0.1065%" height="15" fill="rgb(251,115,12)" fg:x="122933872" fg:w="4448423"/><text x="3.1933%" y="1055.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (4,448,423 samples, 0.11%)</title><rect x="2.9433%" y="1029" width="0.1065%" height="15" fill="rgb(240,54,50)" fg:x="122933872" fg:w="4448423"/><text x="3.1933%" y="1039.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as ppv_lite86::types::StoreBytes&gt;::write_le (8,476,805 samples, 0.20%)</title><rect x="3.0498%" y="1045" width="0.2030%" height="15" fill="rgb(233,84,52)" fg:x="127382295" fg:w="8476805"/><text x="3.2998%" y="1055.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (8,476,805 samples, 0.20%)</title><rect x="3.0498%" y="1029" width="0.2030%" height="15" fill="rgb(207,117,47)" fg:x="127382295" fg:w="8476805"/><text x="3.2998%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (8,476,805 samples, 0.20%)</title><rect x="3.0498%" y="1013" width="0.2030%" height="15" fill="rgb(249,43,39)" fg:x="127382295" fg:w="8476805"/><text x="3.2998%" y="1023.50"></text></g><g><title>core::ptr::write_unaligned (8,476,805 samples, 0.20%)</title><rect x="3.0498%" y="997" width="0.2030%" height="15" fill="rgb(209,38,44)" fg:x="127382295" fg:w="8476805"/><text x="3.2998%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8,476,805 samples, 0.20%)</title><rect x="3.0498%" y="981" width="0.2030%" height="15" fill="rgb(236,212,23)" fg:x="127382295" fg:w="8476805"/><text x="3.2998%" y="991.50"></text></g><g><title>rand_chacha::guts::diagonalize (4,459,715 samples, 0.11%)</title><rect x="3.2528%" y="1045" width="0.1068%" height="15" fill="rgb(242,79,21)" fg:x="135859100" fg:w="4459715"/><text x="3.5028%" y="1055.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (4,459,715 samples, 0.11%)</title><rect x="3.2528%" y="1029" width="0.1068%" height="15" fill="rgb(211,96,35)" fg:x="135859100" fg:w="4459715"/><text x="3.5028%" y="1039.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (4,459,715 samples, 0.11%)</title><rect x="3.2528%" y="1013" width="0.1068%" height="15" fill="rgb(253,215,40)" fg:x="135859100" fg:w="4459715"/><text x="3.5028%" y="1023.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4,459,715 samples, 0.11%)</title><rect x="3.2528%" y="997" width="0.1068%" height="15" fill="rgb(211,81,21)" fg:x="135859100" fg:w="4459715"/><text x="3.5028%" y="1007.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (22,158,846 samples, 0.53%)</title><rect x="3.3595%" y="1029" width="0.5305%" height="15" fill="rgb(208,190,38)" fg:x="140318815" fg:w="22158846"/><text x="3.6095%" y="1039.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (22,158,846 samples, 0.53%)</title><rect x="3.3595%" y="1013" width="0.5305%" height="15" fill="rgb(235,213,38)" fg:x="140318815" fg:w="22158846"/><text x="3.6095%" y="1023.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (22,158,846 samples, 0.53%)</title><rect x="3.3595%" y="997" width="0.5305%" height="15" fill="rgb(237,122,38)" fg:x="140318815" fg:w="22158846"/><text x="3.6095%" y="1007.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (22,158,846 samples, 0.53%)</title><rect x="3.3595%" y="981" width="0.5305%" height="15" fill="rgb(244,218,35)" fg:x="140318815" fg:w="22158846"/><text x="3.6095%" y="991.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (3,122,574 samples, 0.07%)</title><rect x="3.8901%" y="1029" width="0.0748%" height="15" fill="rgb(240,68,47)" fg:x="162477661" fg:w="3122574"/><text x="4.1401%" y="1039.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (3,122,574 samples, 0.07%)</title><rect x="3.8901%" y="1013" width="0.0748%" height="15" fill="rgb(210,16,53)" fg:x="162477661" fg:w="3122574"/><text x="4.1401%" y="1023.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3,122,574 samples, 0.07%)</title><rect x="3.8901%" y="997" width="0.0748%" height="15" fill="rgb(235,124,12)" fg:x="162477661" fg:w="3122574"/><text x="4.1401%" y="1007.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (13,102,559 samples, 0.31%)</title><rect x="3.9648%" y="1029" width="0.3137%" height="15" fill="rgb(224,169,11)" fg:x="165600235" fg:w="13102559"/><text x="4.2148%" y="1039.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (13,102,559 samples, 0.31%)</title><rect x="3.9648%" y="1013" width="0.3137%" height="15" fill="rgb(250,166,2)" fg:x="165600235" fg:w="13102559"/><text x="4.2148%" y="1023.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (13,102,559 samples, 0.31%)</title><rect x="3.9648%" y="997" width="0.3137%" height="15" fill="rgb(242,216,29)" fg:x="165600235" fg:w="13102559"/><text x="4.2148%" y="1007.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (17,810,819 samples, 0.43%)</title><rect x="4.2785%" y="997" width="0.4264%" height="15" fill="rgb(230,116,27)" fg:x="178702794" fg:w="17810819"/><text x="4.5285%" y="1007.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (22,230,343 samples, 0.53%)</title><rect x="4.2785%" y="1029" width="0.5322%" height="15" fill="rgb(228,99,48)" fg:x="178702794" fg:w="22230343"/><text x="4.5285%" y="1039.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (22,230,343 samples, 0.53%)</title><rect x="4.2785%" y="1013" width="0.5322%" height="15" fill="rgb(253,11,6)" fg:x="178702794" fg:w="22230343"/><text x="4.5285%" y="1023.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (4,419,524 samples, 0.11%)</title><rect x="4.7050%" y="997" width="0.1058%" height="15" fill="rgb(247,143,39)" fg:x="196513613" fg:w="4419524"/><text x="4.9550%" y="1007.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (4,459,446 samples, 0.11%)</title><rect x="4.8108%" y="1029" width="0.1068%" height="15" fill="rgb(236,97,10)" fg:x="200933137" fg:w="4459446"/><text x="5.0608%" y="1039.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (4,459,446 samples, 0.11%)</title><rect x="4.8108%" y="1013" width="0.1068%" height="15" fill="rgb(233,208,19)" fg:x="200933137" fg:w="4459446"/><text x="5.0608%" y="1023.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (4,459,446 samples, 0.11%)</title><rect x="4.8108%" y="997" width="0.1068%" height="15" fill="rgb(216,164,2)" fg:x="200933137" fg:w="4459446"/><text x="5.0608%" y="1007.50"></text></g><g><title>rand_chacha::guts::round (82,886,227 samples, 1.98%)</title><rect x="3.3595%" y="1045" width="1.9845%" height="15" fill="rgb(220,129,5)" fg:x="140318815" fg:w="82886227"/><text x="3.6095%" y="1055.50">r..</text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (17,812,459 samples, 0.43%)</title><rect x="4.9175%" y="1029" width="0.4265%" height="15" fill="rgb(242,17,10)" fg:x="205392583" fg:w="17812459"/><text x="5.1675%" y="1039.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (17,812,459 samples, 0.43%)</title><rect x="4.9175%" y="1013" width="0.4265%" height="15" fill="rgb(242,107,0)" fg:x="205392583" fg:w="17812459"/><text x="5.1675%" y="1023.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (17,812,459 samples, 0.43%)</title><rect x="4.9175%" y="997" width="0.4265%" height="15" fill="rgb(251,28,31)" fg:x="205392583" fg:w="17812459"/><text x="5.1675%" y="1007.50"></text></g><g><title>[[stack]] (157,922,100 samples, 3.78%)</title><rect x="1.6698%" y="1109" width="3.7810%" height="15" fill="rgb(233,223,10)" fg:x="69741273" fg:w="157922100"/><text x="1.9198%" y="1119.50">[[st..</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (104,729,501 samples, 2.51%)</title><rect x="2.9433%" y="1093" width="2.5075%" height="15" fill="rgb(215,21,27)" fg:x="122933872" fg:w="104729501"/><text x="3.1933%" y="1103.50">ra..</text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (104,729,501 samples, 2.51%)</title><rect x="2.9433%" y="1077" width="2.5075%" height="15" fill="rgb(232,23,21)" fg:x="122933872" fg:w="104729501"/><text x="3.1933%" y="1087.50">ra..</text></g><g><title>rand_chacha::guts::refill_wide_impl (104,729,501 samples, 2.51%)</title><rect x="2.9433%" y="1061" width="2.5075%" height="15" fill="rgb(244,5,23)" fg:x="122933872" fg:w="104729501"/><text x="3.1933%" y="1071.50">ra..</text></g><g><title>rand_chacha::guts::undiagonalize (4,458,331 samples, 0.11%)</title><rect x="5.3440%" y="1045" width="0.1067%" height="15" fill="rgb(226,81,46)" fg:x="223205042" fg:w="4458331"/><text x="5.5940%" y="1055.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (4,458,331 samples, 0.11%)</title><rect x="5.3440%" y="1029" width="0.1067%" height="15" fill="rgb(247,70,30)" fg:x="223205042" fg:w="4458331"/><text x="5.5940%" y="1039.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (4,458,331 samples, 0.11%)</title><rect x="5.3440%" y="1013" width="0.1067%" height="15" fill="rgb(212,68,19)" fg:x="223205042" fg:w="4458331"/><text x="5.5940%" y="1023.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4,458,331 samples, 0.11%)</title><rect x="5.3440%" y="997" width="0.1067%" height="15" fill="rgb(240,187,13)" fg:x="223205042" fg:w="4458331"/><text x="5.5940%" y="1007.50"></text></g><g><title>[anon] (4,452,829 samples, 0.11%)</title><rect x="5.4508%" y="1109" width="0.1066%" height="15" fill="rgb(223,113,26)" fg:x="227663373" fg:w="4452829"/><text x="5.7008%" y="1119.50"></text></g><g><title>workload_gen::generate_workload (4,452,829 samples, 0.11%)</title><rect x="5.4508%" y="1093" width="0.1066%" height="15" fill="rgb(206,192,2)" fg:x="227663373" fg:w="4452829"/><text x="5.7008%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (4,452,829 samples, 0.11%)</title><rect x="5.4508%" y="1077" width="0.1066%" height="15" fill="rgb(241,108,4)" fg:x="227663373" fg:w="4452829"/><text x="5.7008%" y="1087.50"></text></g><g><title>workload_gen::generate_workload::_{{closure}} (4,452,829 samples, 0.11%)</title><rect x="5.4508%" y="1061" width="0.1066%" height="15" fill="rgb(247,173,49)" fg:x="227663373" fg:w="4452829"/><text x="5.7008%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4,452,829 samples, 0.11%)</title><rect x="5.4508%" y="1045" width="0.1066%" height="15" fill="rgb(224,114,35)" fg:x="227663373" fg:w="4452829"/><text x="5.7008%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4,452,829 samples, 0.11%)</title><rect x="5.4508%" y="1029" width="0.1066%" height="15" fill="rgb(245,159,27)" fg:x="227663373" fg:w="4452829"/><text x="5.7008%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4,452,829 samples, 0.11%)</title><rect x="5.4508%" y="1013" width="0.1066%" height="15" fill="rgb(245,172,44)" fg:x="227663373" fg:w="4452829"/><text x="5.7008%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,452,829 samples, 0.11%)</title><rect x="5.4508%" y="997" width="0.1066%" height="15" fill="rgb(236,23,11)" fg:x="227663373" fg:w="4452829"/><text x="5.7008%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,452,829 samples, 0.11%)</title><rect x="5.4508%" y="981" width="0.1066%" height="15" fill="rgb(205,117,38)" fg:x="227663373" fg:w="4452829"/><text x="5.7008%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (4,452,829 samples, 0.11%)</title><rect x="5.4508%" y="965" width="0.1066%" height="15" fill="rgb(237,72,25)" fg:x="227663373" fg:w="4452829"/><text x="5.7008%" y="975.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4,448,204 samples, 0.11%)</title><rect x="5.5574%" y="1093" width="0.1065%" height="15" fill="rgb(244,70,9)" fg:x="232116202" fg:w="4448204"/><text x="5.8074%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,448,204 samples, 0.11%)</title><rect x="5.5574%" y="1077" width="0.1065%" height="15" fill="rgb(217,125,39)" fg:x="232116202" fg:w="4448204"/><text x="5.8074%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,448,204 samples, 0.11%)</title><rect x="5.5574%" y="1061" width="0.1065%" height="15" fill="rgb(235,36,10)" fg:x="232116202" fg:w="4448204"/><text x="5.8074%" y="1071.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,448,204 samples, 0.11%)</title><rect x="5.5574%" y="1045" width="0.1065%" height="15" fill="rgb(251,123,47)" fg:x="232116202" fg:w="4448204"/><text x="5.8074%" y="1055.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (4,448,204 samples, 0.11%)</title><rect x="5.5574%" y="1029" width="0.1065%" height="15" fill="rgb(221,13,13)" fg:x="232116202" fg:w="4448204"/><text x="5.8074%" y="1039.50"></text></g><g><title>core::ptr::read (4,448,204 samples, 0.11%)</title><rect x="5.5574%" y="1013" width="0.1065%" height="15" fill="rgb(238,131,9)" fg:x="232116202" fg:w="4448204"/><text x="5.8074%" y="1023.50"></text></g><g><title>[libc.so.6] (22,248,765 samples, 0.53%)</title><rect x="5.5574%" y="1109" width="0.5327%" height="15" fill="rgb(211,50,8)" fg:x="232116202" fg:w="22248765"/><text x="5.8074%" y="1119.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17,800,561 samples, 0.43%)</title><rect x="5.6639%" y="1093" width="0.4262%" height="15" fill="rgb(245,182,24)" fg:x="236564406" fg:w="17800561"/><text x="5.9139%" y="1103.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (17,800,561 samples, 0.43%)</title><rect x="5.6639%" y="1077" width="0.4262%" height="15" fill="rgb(242,14,37)" fg:x="236564406" fg:w="17800561"/><text x="5.9139%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17,800,561 samples, 0.43%)</title><rect x="5.6639%" y="1061" width="0.4262%" height="15" fill="rgb(246,228,12)" fg:x="236564406" fg:w="17800561"/><text x="5.9139%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17,800,561 samples, 0.43%)</title><rect x="5.6639%" y="1045" width="0.4262%" height="15" fill="rgb(213,55,15)" fg:x="236564406" fg:w="17800561"/><text x="5.9139%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13,346,315 samples, 0.32%)</title><rect x="5.7705%" y="1029" width="0.3195%" height="15" fill="rgb(209,9,3)" fg:x="241018652" fg:w="13346315"/><text x="6.0205%" y="1039.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,450,111 samples, 0.11%)</title><rect x="5.9835%" y="1013" width="0.1065%" height="15" fill="rgb(230,59,30)" fg:x="249914856" fg:w="4450111"/><text x="6.2335%" y="1023.50"></text></g><g><title>core::intrinsics::copy (8,640,607 samples, 0.21%)</title><rect x="6.0901%" y="1045" width="0.2069%" height="15" fill="rgb(209,121,21)" fg:x="254364967" fg:w="8640607"/><text x="6.3401%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (17,527,975 samples, 0.42%)</title><rect x="6.0901%" y="1077" width="0.4197%" height="15" fill="rgb(220,109,13)" fg:x="254364967" fg:w="17527975"/><text x="6.3401%" y="1087.50"></text></g><g><title>core::ptr::swap (17,527,975 samples, 0.42%)</title><rect x="6.0901%" y="1061" width="0.4197%" height="15" fill="rgb(232,18,1)" fg:x="254364967" fg:w="17527975"/><text x="6.3401%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8,887,368 samples, 0.21%)</title><rect x="6.2969%" y="1045" width="0.2128%" height="15" fill="rgb(215,41,42)" fg:x="263005574" fg:w="8887368"/><text x="6.5469%" y="1055.50"></text></g><g><title>&lt;[T] as rand::seq::SliceRandom&gt;::shuffle (34,486,134 samples, 0.83%)</title><rect x="6.0901%" y="1093" width="0.8257%" height="15" fill="rgb(224,123,36)" fg:x="254364967" fg:w="34486134"/><text x="6.3401%" y="1103.50"></text></g><g><title>rand::seq::gen_index (16,958,159 samples, 0.41%)</title><rect x="6.5097%" y="1077" width="0.4060%" height="15" fill="rgb(240,125,3)" fg:x="271892942" fg:w="16958159"/><text x="6.7597%" y="1087.50"></text></g><g><title>rand::rng::Rng::gen_range (16,958,159 samples, 0.41%)</title><rect x="6.5097%" y="1061" width="0.4060%" height="15" fill="rgb(205,98,50)" fg:x="271892942" fg:w="16958159"/><text x="6.7597%" y="1071.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (16,958,159 samples, 0.41%)</title><rect x="6.5097%" y="1045" width="0.4060%" height="15" fill="rgb(205,185,37)" fg:x="271892942" fg:w="16958159"/><text x="6.7597%" y="1055.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (16,958,159 samples, 0.41%)</title><rect x="6.5097%" y="1029" width="0.4060%" height="15" fill="rgb(238,207,15)" fg:x="271892942" fg:w="16958159"/><text x="6.7597%" y="1039.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (16,958,159 samples, 0.41%)</title><rect x="6.5097%" y="1013" width="0.4060%" height="15" fill="rgb(213,199,42)" fg:x="271892942" fg:w="16958159"/><text x="6.7597%" y="1023.50"></text></g><g><title>rand::rng::Rng::gen (16,958,159 samples, 0.41%)</title><rect x="6.5097%" y="997" width="0.4060%" height="15" fill="rgb(235,201,11)" fg:x="271892942" fg:w="16958159"/><text x="6.7597%" y="1007.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (16,958,159 samples, 0.41%)</title><rect x="6.5097%" y="981" width="0.4060%" height="15" fill="rgb(207,46,11)" fg:x="271892942" fg:w="16958159"/><text x="6.7597%" y="991.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (16,958,159 samples, 0.41%)</title><rect x="6.5097%" y="965" width="0.4060%" height="15" fill="rgb(241,35,35)" fg:x="271892942" fg:w="16958159"/><text x="6.7597%" y="975.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (16,958,159 samples, 0.41%)</title><rect x="6.5097%" y="949" width="0.4060%" height="15" fill="rgb(243,32,47)" fg:x="271892942" fg:w="16958159"/><text x="6.7597%" y="959.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (16,958,159 samples, 0.41%)</title><rect x="6.5097%" y="933" width="0.4060%" height="15" fill="rgb(247,202,23)" fg:x="271892942" fg:w="16958159"/><text x="6.7597%" y="943.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (4,105,322 samples, 0.10%)</title><rect x="6.8174%" y="917" width="0.0983%" height="15" fill="rgb(219,102,11)" fg:x="284745779" fg:w="4105322"/><text x="7.0674%" y="927.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (4,105,322 samples, 0.10%)</title><rect x="6.8174%" y="901" width="0.0983%" height="15" fill="rgb(243,110,44)" fg:x="284745779" fg:w="4105322"/><text x="7.0674%" y="911.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::is_forked (4,105,322 samples, 0.10%)</title><rect x="6.8174%" y="885" width="0.0983%" height="15" fill="rgb(222,74,54)" fg:x="284745779" fg:w="4105322"/><text x="7.0674%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (26,686,978 samples, 0.64%)</title><rect x="6.9157%" y="1093" width="0.6389%" height="15" fill="rgb(216,99,12)" fg:x="288851101" fg:w="26686978"/><text x="7.1657%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4,449,311 samples, 0.11%)</title><rect x="7.4481%" y="1077" width="0.1065%" height="15" fill="rgb(226,22,26)" fg:x="311088768" fg:w="4449311"/><text x="7.6981%" y="1087.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,449,311 samples, 0.11%)</title><rect x="7.4481%" y="1061" width="0.1065%" height="15" fill="rgb(217,163,10)" fg:x="311088768" fg:w="4449311"/><text x="7.6981%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18,395,809 samples, 0.44%)</title><rect x="7.9660%" y="917" width="0.4404%" height="15" fill="rgb(213,25,53)" fg:x="332717617" fg:w="18395809"/><text x="8.2160%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (4,459,420 samples, 0.11%)</title><rect x="8.2997%" y="901" width="0.1068%" height="15" fill="rgb(252,105,26)" fg:x="346654006" fg:w="4459420"/><text x="8.5497%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4,459,420 samples, 0.11%)</title><rect x="8.2997%" y="885" width="0.1068%" height="15" fill="rgb(220,39,43)" fg:x="346654006" fg:w="4459420"/><text x="8.5497%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::_{{closure}} (22,599,403 samples, 0.54%)</title><rect x="7.9660%" y="1013" width="0.5411%" height="15" fill="rgb(229,68,48)" fg:x="332717617" fg:w="22599403"/><text x="8.2160%" y="1023.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2::_{{closure}} (22,599,403 samples, 0.54%)</title><rect x="7.9660%" y="997" width="0.5411%" height="15" fill="rgb(252,8,32)" fg:x="332717617" fg:w="22599403"/><text x="8.2160%" y="1007.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (22,599,403 samples, 0.54%)</title><rect x="7.9660%" y="981" width="0.5411%" height="15" fill="rgb(223,20,43)" fg:x="332717617" fg:w="22599403"/><text x="8.2160%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (22,599,403 samples, 0.54%)</title><rect x="7.9660%" y="965" width="0.5411%" height="15" fill="rgb(229,81,49)" fg:x="332717617" fg:w="22599403"/><text x="8.2160%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::_{{closure}} (22,599,403 samples, 0.54%)</title><rect x="7.9660%" y="949" width="0.5411%" height="15" fill="rgb(236,28,36)" fg:x="332717617" fg:w="22599403"/><text x="8.2160%" y="959.50"></text></g><g><title>alloc::string::String::push (22,599,403 samples, 0.54%)</title><rect x="7.9660%" y="933" width="0.5411%" height="15" fill="rgb(249,185,26)" fg:x="332717617" fg:w="22599403"/><text x="8.2160%" y="943.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (4,203,594 samples, 0.10%)</title><rect x="8.4064%" y="917" width="0.1006%" height="15" fill="rgb(249,174,33)" fg:x="351113426" fg:w="4203594"/><text x="8.6564%" y="927.50"></text></g><g><title>core::char::methods::len_utf8 (4,203,594 samples, 0.10%)</title><rect x="8.4064%" y="901" width="0.1006%" height="15" fill="rgb(233,201,37)" fg:x="351113426" fg:w="4203594"/><text x="8.6564%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (109,218,517 samples, 2.61%)</title><rect x="7.6560%" y="1077" width="2.6149%" height="15" fill="rgb(221,78,26)" fg:x="319770937" fg:w="109218517"/><text x="7.9060%" y="1087.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_fold (109,218,517 samples, 2.61%)</title><rect x="7.6560%" y="1061" width="2.6149%" height="15" fill="rgb(250,127,30)" fg:x="319770937" fg:w="109218517"/><text x="7.9060%" y="1071.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (109,218,517 samples, 2.61%)</title><rect x="7.6560%" y="1045" width="2.6149%" height="15" fill="rgb(230,49,44)" fg:x="319770937" fg:w="109218517"/><text x="7.9060%" y="1055.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (104,757,752 samples, 2.51%)</title><rect x="7.7628%" y="1029" width="2.5081%" height="15" fill="rgb(229,67,23)" fg:x="324231702" fg:w="104757752"/><text x="8.0128%" y="1039.50">co..</text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (73,672,434 samples, 1.76%)</title><rect x="8.5071%" y="1013" width="1.7639%" height="15" fill="rgb(249,83,47)" fg:x="355317020" fg:w="73672434"/><text x="8.7571%" y="1023.50"></text></g><g><title>&lt;&amp;D as rand::distributions::distribution::Distribution&lt;T&gt;&gt;::sample (73,672,434 samples, 1.76%)</title><rect x="8.5071%" y="997" width="1.7639%" height="15" fill="rgb(215,43,3)" fg:x="355317020" fg:w="73672434"/><text x="8.7571%" y="1007.50"></text></g><g><title>&lt;rand::distributions::other::Alphanumeric as rand::distributions::distribution::Distribution&lt;u8&gt;&gt;::sample (73,672,434 samples, 1.76%)</title><rect x="8.5071%" y="981" width="1.7639%" height="15" fill="rgb(238,154,13)" fg:x="355317020" fg:w="73672434"/><text x="8.7571%" y="991.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u32 (69,216,520 samples, 1.66%)</title><rect x="8.6138%" y="965" width="1.6572%" height="15" fill="rgb(219,56,2)" fg:x="359772934" fg:w="69216520"/><text x="8.8638%" y="975.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (69,216,520 samples, 1.66%)</title><rect x="8.6138%" y="949" width="1.6572%" height="15" fill="rgb(233,0,4)" fg:x="359772934" fg:w="69216520"/><text x="8.8638%" y="959.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (69,216,520 samples, 1.66%)</title><rect x="8.6138%" y="933" width="1.6572%" height="15" fill="rgb(235,30,7)" fg:x="359772934" fg:w="69216520"/><text x="8.8638%" y="943.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (69,216,520 samples, 1.66%)</title><rect x="8.6138%" y="917" width="1.6572%" height="15" fill="rgb(250,79,13)" fg:x="359772934" fg:w="69216520"/><text x="8.8638%" y="927.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (4,458,421 samples, 0.11%)</title><rect x="10.1642%" y="901" width="0.1067%" height="15" fill="rgb(211,146,34)" fg:x="424531033" fg:w="4458421"/><text x="10.4142%" y="911.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (4,458,421 samples, 0.11%)</title><rect x="10.1642%" y="885" width="0.1067%" height="15" fill="rgb(228,22,38)" fg:x="424531033" fg:w="4458421"/><text x="10.4142%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (117,914,381 samples, 2.82%)</title><rect x="7.5547%" y="1093" width="2.8231%" height="15" fill="rgb(235,168,5)" fg:x="315538079" fg:w="117914381"/><text x="7.8047%" y="1103.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (4,463,006 samples, 0.11%)</title><rect x="10.2710%" y="1077" width="0.1069%" height="15" fill="rgb(221,155,16)" fg:x="428989454" fg:w="4463006"/><text x="10.5210%" y="1087.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4,463,006 samples, 0.11%)</title><rect x="10.2710%" y="1061" width="0.1069%" height="15" fill="rgb(215,215,53)" fg:x="428989454" fg:w="4463006"/><text x="10.5210%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4,463,006 samples, 0.11%)</title><rect x="10.2710%" y="1045" width="0.1069%" height="15" fill="rgb(223,4,10)" fg:x="428989454" fg:w="4463006"/><text x="10.5210%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (4,463,006 samples, 0.11%)</title><rect x="10.2710%" y="1029" width="0.1069%" height="15" fill="rgb(234,103,6)" fg:x="428989454" fg:w="4463006"/><text x="10.5210%" y="1039.50"></text></g><g><title>core::ptr::write (4,463,006 samples, 0.11%)</title><rect x="10.2710%" y="1013" width="0.1069%" height="15" fill="rgb(227,97,0)" fg:x="428989454" fg:w="4463006"/><text x="10.5210%" y="1023.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4,450,564 samples, 0.11%)</title><rect x="10.3778%" y="1093" width="0.1066%" height="15" fill="rgb(234,150,53)" fg:x="433452460" fg:w="4450564"/><text x="10.6278%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,450,564 samples, 0.11%)</title><rect x="10.3778%" y="1077" width="0.1066%" height="15" fill="rgb(228,201,54)" fg:x="433452460" fg:w="4450564"/><text x="10.6278%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,450,564 samples, 0.11%)</title><rect x="10.3778%" y="1061" width="0.1066%" height="15" fill="rgb(222,22,37)" fg:x="433452460" fg:w="4450564"/><text x="10.6278%" y="1071.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,450,564 samples, 0.11%)</title><rect x="10.3778%" y="1045" width="0.1066%" height="15" fill="rgb(237,53,32)" fg:x="433452460" fg:w="4450564"/><text x="10.6278%" y="1055.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (4,450,564 samples, 0.11%)</title><rect x="10.3778%" y="1029" width="0.1066%" height="15" fill="rgb(233,25,53)" fg:x="433452460" fg:w="4450564"/><text x="10.6278%" y="1039.50"></text></g><g><title>core::ptr::read (4,450,564 samples, 0.11%)</title><rect x="10.3778%" y="1013" width="0.1066%" height="15" fill="rgb(210,40,34)" fg:x="433452460" fg:w="4450564"/><text x="10.6278%" y="1023.50"></text></g><g><title>__GI___libc_free (16,216,077 samples, 0.39%)</title><rect x="10.4844%" y="1093" width="0.3882%" height="15" fill="rgb(241,220,44)" fg:x="437903024" fg:w="16216077"/><text x="10.7344%" y="1103.50"></text></g><g><title>__GI___libc_malloc (13,360,165 samples, 0.32%)</title><rect x="10.8726%" y="1093" width="0.3199%" height="15" fill="rgb(235,28,35)" fg:x="454119101" fg:w="13360165"/><text x="11.1226%" y="1103.50"></text></g><g><title>__GI___libc_realloc (4,303,154 samples, 0.10%)</title><rect x="11.1925%" y="1093" width="0.1030%" height="15" fill="rgb(210,56,17)" fg:x="467479266" fg:w="4303154"/><text x="11.4425%" y="1103.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (30,845,619 samples, 0.74%)</title><rect x="11.2955%" y="1093" width="0.7385%" height="15" fill="rgb(224,130,29)" fg:x="471782420" fg:w="30845619"/><text x="11.5455%" y="1103.50"></text></g><g><title>__rdl_dealloc (7,576,835 samples, 0.18%)</title><rect x="12.0340%" y="1093" width="0.1814%" height="15" fill="rgb(235,212,8)" fg:x="502628039" fg:w="7576835"/><text x="12.2840%" y="1103.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3,698,389 samples, 0.09%)</title><rect x="12.1269%" y="1077" width="0.0885%" height="15" fill="rgb(223,33,50)" fg:x="506506485" fg:w="3698389"/><text x="12.3769%" y="1087.50"></text></g><g><title>_int_free (25,952,593 samples, 0.62%)</title><rect x="12.2154%" y="1093" width="0.6214%" height="15" fill="rgb(219,149,13)" fg:x="510204874" fg:w="25952593"/><text x="12.4654%" y="1103.50"></text></g><g><title>_int_free_merge_chunk (4,447,713 samples, 0.11%)</title><rect x="12.8368%" y="1093" width="0.1065%" height="15" fill="rgb(250,156,29)" fg:x="536157467" fg:w="4447713"/><text x="13.0868%" y="1103.50"></text></g><g><title>_int_malloc (38,879,111 samples, 0.93%)</title><rect x="12.9433%" y="1093" width="0.9309%" height="15" fill="rgb(216,193,19)" fg:x="540605180" fg:w="38879111"/><text x="13.1933%" y="1103.50"></text></g><g><title>core::fmt::write (8,761,035 samples, 0.21%)</title><rect x="13.8741%" y="1093" width="0.2098%" height="15" fill="rgb(216,135,14)" fg:x="579484291" fg:w="8761035"/><text x="14.1241%" y="1103.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (4,314,953 samples, 0.10%)</title><rect x="13.9806%" y="1077" width="0.1033%" height="15" fill="rgb(241,47,5)" fg:x="583930373" fg:w="4314953"/><text x="14.2306%" y="1087.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (4,314,953 samples, 0.10%)</title><rect x="13.9806%" y="1061" width="0.1033%" height="15" fill="rgb(233,42,35)" fg:x="583930373" fg:w="4314953"/><text x="14.2306%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8,894,711 samples, 0.21%)</title><rect x="14.4032%" y="1029" width="0.2130%" height="15" fill="rgb(231,13,6)" fg:x="601580714" fg:w="8894711"/><text x="14.6532%" y="1039.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,447,898 samples, 0.11%)</title><rect x="14.5096%" y="1013" width="0.1065%" height="15" fill="rgb(207,181,40)" fg:x="606027527" fg:w="4447898"/><text x="14.7596%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (84,500,517 samples, 2.02%)</title><rect x="15.6808%" y="1013" width="2.0231%" height="15" fill="rgb(254,173,49)" fg:x="654943565" fg:w="84500517"/><text x="15.9308%" y="1023.50">c..</text></g><g><title>core::hash::BuildHasher::hash_one (204,565,789 samples, 4.90%)</title><rect x="14.0839%" y="1093" width="4.8978%" height="15" fill="rgb(221,1,38)" fg:x="588245326" fg:w="204565789"/><text x="14.3339%" y="1103.50">core::..</text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (204,565,789 samples, 4.90%)</title><rect x="14.0839%" y="1077" width="4.8978%" height="15" fill="rgb(206,124,46)" fg:x="588245326" fg:w="204565789"/><text x="14.3339%" y="1087.50">&lt;std::..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (204,565,789 samples, 4.90%)</title><rect x="14.0839%" y="1061" width="4.8978%" height="15" fill="rgb(249,21,11)" fg:x="588245326" fg:w="204565789"/><text x="14.3339%" y="1071.50">&lt;core:..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (204,565,789 samples, 4.90%)</title><rect x="14.0839%" y="1045" width="4.8978%" height="15" fill="rgb(222,201,40)" fg:x="588245326" fg:w="204565789"/><text x="14.3339%" y="1055.50">&lt;core:..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (182,335,690 samples, 4.37%)</title><rect x="14.6161%" y="1029" width="4.3655%" height="15" fill="rgb(235,61,29)" fg:x="610475425" fg:w="182335690"/><text x="14.8661%" y="1039.50">&lt;core..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (53,367,033 samples, 1.28%)</title><rect x="17.7039%" y="1013" width="1.2777%" height="15" fill="rgb(219,207,3)" fg:x="739444082" fg:w="53367033"/><text x="17.9539%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4,449,852 samples, 0.11%)</title><rect x="19.0882%" y="1077" width="0.1065%" height="15" fill="rgb(222,56,46)" fg:x="797260216" fg:w="4449852"/><text x="19.3382%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (4,449,852 samples, 0.11%)</title><rect x="19.0882%" y="1061" width="0.1065%" height="15" fill="rgb(239,76,54)" fg:x="797260216" fg:w="4449852"/><text x="19.3382%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (4,449,852 samples, 0.11%)</title><rect x="19.0882%" y="1045" width="0.1065%" height="15" fill="rgb(231,124,27)" fg:x="797260216" fg:w="4449852"/><text x="19.3382%" y="1055.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (8,897,114 samples, 0.21%)</title><rect x="19.1947%" y="1061" width="0.2130%" height="15" fill="rgb(249,195,6)" fg:x="801710068" fg:w="8897114"/><text x="19.4447%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (8,897,114 samples, 0.21%)</title><rect x="19.1947%" y="1045" width="0.2130%" height="15" fill="rgb(237,174,47)" fg:x="801710068" fg:w="8897114"/><text x="19.4447%" y="1055.50"></text></g><g><title>core::ptr::write (8,897,114 samples, 0.21%)</title><rect x="19.1947%" y="1029" width="0.2130%" height="15" fill="rgb(206,201,31)" fg:x="801710068" fg:w="8897114"/><text x="19.4447%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (13,360,043 samples, 0.32%)</title><rect x="19.4077%" y="1061" width="0.3199%" height="15" fill="rgb(231,57,52)" fg:x="810607182" fg:w="13360043"/><text x="19.6577%" y="1071.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (13,360,043 samples, 0.32%)</title><rect x="19.4077%" y="1045" width="0.3199%" height="15" fill="rgb(248,177,22)" fg:x="810607182" fg:w="13360043"/><text x="19.6577%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (13,360,043 samples, 0.32%)</title><rect x="19.4077%" y="1029" width="0.3199%" height="15" fill="rgb(215,211,37)" fg:x="810607182" fg:w="13360043"/><text x="19.6577%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4,450,351 samples, 0.11%)</title><rect x="19.6210%" y="1013" width="0.1066%" height="15" fill="rgb(241,128,51)" fg:x="819516874" fg:w="4450351"/><text x="19.8710%" y="1023.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;bool&gt; for usize&gt;::from (17,798,376 samples, 0.43%)</title><rect x="19.9406%" y="1045" width="0.4261%" height="15" fill="rgb(227,165,31)" fg:x="832865361" fg:w="17798376"/><text x="20.1906%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl_h2 (13,345,850 samples, 0.32%)</title><rect x="20.3668%" y="1045" width="0.3195%" height="15" fill="rgb(228,167,24)" fg:x="850663737" fg:w="13345850"/><text x="20.6168%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl (13,345,850 samples, 0.32%)</title><rect x="20.3668%" y="1029" width="0.3195%" height="15" fill="rgb(228,143,12)" fg:x="850663737" fg:w="13345850"/><text x="20.6168%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (75,646,634 samples, 1.81%)</title><rect x="18.9816%" y="1093" width="1.8111%" height="15" fill="rgb(249,149,8)" fg:x="792811115" fg:w="75646634"/><text x="19.2316%" y="1103.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (66,747,681 samples, 1.60%)</title><rect x="19.1947%" y="1077" width="1.5981%" height="15" fill="rgb(243,35,44)" fg:x="801710068" fg:w="66747681"/><text x="19.4447%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (44,490,524 samples, 1.07%)</title><rect x="19.7276%" y="1061" width="1.0652%" height="15" fill="rgb(246,89,9)" fg:x="823967225" fg:w="44490524"/><text x="19.9776%" y="1071.50"></text></g><g><title>hashbrown::raw::special_is_empty (4,448,162 samples, 0.11%)</title><rect x="20.6863%" y="1045" width="0.1065%" height="15" fill="rgb(233,213,13)" fg:x="864009587" fg:w="4448162"/><text x="20.9363%" y="1055.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as core::ops::arith::Add&gt;::add (4,455,943 samples, 0.11%)</title><rect x="20.7928%" y="1045" width="0.1067%" height="15" fill="rgb(233,141,41)" fg:x="868457749" fg:w="4455943"/><text x="21.0428%" y="1055.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (4,455,943 samples, 0.11%)</title><rect x="20.7928%" y="1029" width="0.1067%" height="15" fill="rgb(239,167,4)" fg:x="868457749" fg:w="4455943"/><text x="21.0428%" y="1039.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4,451,051 samples, 0.11%)</title><rect x="20.8995%" y="1045" width="0.1066%" height="15" fill="rgb(209,217,16)" fg:x="872913692" fg:w="4451051"/><text x="21.1495%" y="1055.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4,451,051 samples, 0.11%)</title><rect x="20.8995%" y="1029" width="0.1066%" height="15" fill="rgb(219,88,35)" fg:x="872913692" fg:w="4451051"/><text x="21.1495%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (4,451,051 samples, 0.11%)</title><rect x="20.8995%" y="1013" width="0.1066%" height="15" fill="rgb(220,193,23)" fg:x="872913692" fg:w="4451051"/><text x="21.1495%" y="1023.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (4,459,281 samples, 0.11%)</title><rect x="21.0060%" y="1029" width="0.1068%" height="15" fill="rgb(230,90,52)" fg:x="877364743" fg:w="4459281"/><text x="21.2560%" y="1039.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (4,459,281 samples, 0.11%)</title><rect x="21.0060%" y="1013" width="0.1068%" height="15" fill="rgb(252,106,19)" fg:x="877364743" fg:w="4459281"/><text x="21.2560%" y="1023.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (4,459,281 samples, 0.11%)</title><rect x="21.0060%" y="997" width="0.1068%" height="15" fill="rgb(206,74,20)" fg:x="877364743" fg:w="4459281"/><text x="21.2560%" y="1007.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (4,459,281 samples, 0.11%)</title><rect x="21.0060%" y="981" width="0.1068%" height="15" fill="rgb(230,138,44)" fg:x="877364743" fg:w="4459281"/><text x="21.2560%" y="991.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (22,277,965 samples, 0.53%)</title><rect x="20.7928%" y="1093" width="0.5334%" height="15" fill="rgb(235,182,43)" fg:x="868457749" fg:w="22277965"/><text x="21.0428%" y="1103.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (22,277,965 samples, 0.53%)</title><rect x="20.7928%" y="1077" width="0.5334%" height="15" fill="rgb(242,16,51)" fg:x="868457749" fg:w="22277965"/><text x="21.0428%" y="1087.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (22,277,965 samples, 0.53%)</title><rect x="20.7928%" y="1061" width="0.5334%" height="15" fill="rgb(248,9,4)" fg:x="868457749" fg:w="22277965"/><text x="21.0428%" y="1071.50"></text></g><g><title>rand_chacha::guts::round (13,370,971 samples, 0.32%)</title><rect x="21.0060%" y="1045" width="0.3201%" height="15" fill="rgb(210,31,22)" fg:x="877364743" fg:w="13370971"/><text x="21.2560%" y="1055.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (8,911,690 samples, 0.21%)</title><rect x="21.1128%" y="1029" width="0.2134%" height="15" fill="rgb(239,54,39)" fg:x="881824024" fg:w="8911690"/><text x="21.3628%" y="1039.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (8,911,690 samples, 0.21%)</title><rect x="21.1128%" y="1013" width="0.2134%" height="15" fill="rgb(230,99,41)" fg:x="881824024" fg:w="8911690"/><text x="21.3628%" y="1023.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (8,911,690 samples, 0.21%)</title><rect x="21.1128%" y="997" width="0.2134%" height="15" fill="rgb(253,106,12)" fg:x="881824024" fg:w="8911690"/><text x="21.3628%" y="1007.50"></text></g><g><title>unlink_chunk (3,151,908 samples, 0.08%)</title><rect x="21.3262%" y="1093" width="0.0755%" height="15" fill="rgb(213,46,41)" fg:x="890735714" fg:w="3151908"/><text x="21.5762%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (4,446,184 samples, 0.11%)</title><rect x="21.4016%" y="1077" width="0.1065%" height="15" fill="rgb(215,133,35)" fg:x="893887622" fg:w="4446184"/><text x="21.6516%" y="1087.50"></text></g><g><title>workload_gen::generate_workload::_{{closure}} (4,446,184 samples, 0.11%)</title><rect x="21.4016%" y="1061" width="0.1065%" height="15" fill="rgb(213,28,5)" fg:x="893887622" fg:w="4446184"/><text x="21.6516%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;workload_gen::spec::Operation&gt;&gt; (4,029,729 samples, 0.10%)</title><rect x="21.5081%" y="1077" width="0.0965%" height="15" fill="rgb(215,77,49)" fg:x="898333806" fg:w="4029729"/><text x="21.7581%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,029,729 samples, 0.10%)</title><rect x="21.5081%" y="1061" width="0.0965%" height="15" fill="rgb(248,100,22)" fg:x="898333806" fg:w="4029729"/><text x="21.7581%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[workload_gen::spec::Operation]&gt; (4,029,729 samples, 0.10%)</title><rect x="21.5081%" y="1045" width="0.0965%" height="15" fill="rgb(208,67,9)" fg:x="898333806" fg:w="4029729"/><text x="21.7581%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3,453,676 samples, 0.08%)</title><rect x="21.6046%" y="917" width="0.0827%" height="15" fill="rgb(219,133,21)" fg:x="902363535" fg:w="3453676"/><text x="21.8546%" y="927.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3,453,676 samples, 0.08%)</title><rect x="21.6046%" y="901" width="0.0827%" height="15" fill="rgb(246,46,29)" fg:x="902363535" fg:w="3453676"/><text x="21.8546%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,533,037 samples, 0.18%)</title><rect x="21.6046%" y="949" width="0.1804%" height="15" fill="rgb(246,185,52)" fg:x="902363535" fg:w="7533037"/><text x="21.8546%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (7,533,037 samples, 0.18%)</title><rect x="21.6046%" y="933" width="0.1804%" height="15" fill="rgb(252,136,11)" fg:x="902363535" fg:w="7533037"/><text x="21.8546%" y="943.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (4,079,361 samples, 0.10%)</title><rect x="21.6873%" y="917" width="0.0977%" height="15" fill="rgb(219,138,53)" fg:x="905817211" fg:w="4079361"/><text x="21.9373%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4,079,361 samples, 0.10%)</title><rect x="21.6873%" y="901" width="0.0977%" height="15" fill="rgb(211,51,23)" fg:x="905817211" fg:w="4079361"/><text x="21.9373%" y="911.50"></text></g><g><title>[unknown] (682,951,514 samples, 16.35%)</title><rect x="6.0901%" y="1109" width="16.3514%" height="15" fill="rgb(247,221,28)" fg:x="254364967" fg:w="682951514"/><text x="6.3401%" y="1119.50">[unknown]</text></g><g><title>workload_gen::generate_workload (43,428,859 samples, 1.04%)</title><rect x="21.4016%" y="1093" width="1.0398%" height="15" fill="rgb(251,222,45)" fg:x="893887622" fg:w="43428859"/><text x="21.6516%" y="1103.50"></text></g><g><title>workload_gen::generate_operations (34,952,946 samples, 0.84%)</title><rect x="21.6046%" y="1077" width="0.8369%" height="15" fill="rgb(217,162,53)" fg:x="902363535" fg:w="34952946"/><text x="21.8546%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (34,952,946 samples, 0.84%)</title><rect x="21.6046%" y="1061" width="0.8369%" height="15" fill="rgb(229,93,14)" fg:x="902363535" fg:w="34952946"/><text x="21.8546%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (34,952,946 samples, 0.84%)</title><rect x="21.6046%" y="1045" width="0.8369%" height="15" fill="rgb(209,67,49)" fg:x="902363535" fg:w="34952946"/><text x="21.8546%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (34,952,946 samples, 0.84%)</title><rect x="21.6046%" y="1029" width="0.8369%" height="15" fill="rgb(213,87,29)" fg:x="902363535" fg:w="34952946"/><text x="21.8546%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (34,952,946 samples, 0.84%)</title><rect x="21.6046%" y="1013" width="0.8369%" height="15" fill="rgb(205,151,52)" fg:x="902363535" fg:w="34952946"/><text x="21.8546%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34,952,946 samples, 0.84%)</title><rect x="21.6046%" y="997" width="0.8369%" height="15" fill="rgb(253,215,39)" fg:x="902363535" fg:w="34952946"/><text x="21.8546%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (34,952,946 samples, 0.84%)</title><rect x="21.6046%" y="981" width="0.8369%" height="15" fill="rgb(221,220,41)" fg:x="902363535" fg:w="34952946"/><text x="21.8546%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (34,952,946 samples, 0.84%)</title><rect x="21.6046%" y="965" width="0.8369%" height="15" fill="rgb(218,133,21)" fg:x="902363535" fg:w="34952946"/><text x="21.8546%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (27,419,909 samples, 0.66%)</title><rect x="21.7849%" y="949" width="0.6565%" height="15" fill="rgb(221,193,43)" fg:x="909896572" fg:w="27419909"/><text x="22.0349%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (27,419,909 samples, 0.66%)</title><rect x="21.7849%" y="933" width="0.6565%" height="15" fill="rgb(240,128,52)" fg:x="909896572" fg:w="27419909"/><text x="22.0349%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (27,419,909 samples, 0.66%)</title><rect x="21.7849%" y="917" width="0.6565%" height="15" fill="rgb(253,114,12)" fg:x="909896572" fg:w="27419909"/><text x="22.0349%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (27,419,909 samples, 0.66%)</title><rect x="21.7849%" y="901" width="0.6565%" height="15" fill="rgb(215,223,47)" fg:x="909896572" fg:w="27419909"/><text x="22.0349%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (27,419,909 samples, 0.66%)</title><rect x="21.7849%" y="885" width="0.6565%" height="15" fill="rgb(248,225,23)" fg:x="909896572" fg:w="27419909"/><text x="22.0349%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (27,419,909 samples, 0.66%)</title><rect x="21.7849%" y="869" width="0.6565%" height="15" fill="rgb(250,108,0)" fg:x="909896572" fg:w="27419909"/><text x="22.0349%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27,419,909 samples, 0.66%)</title><rect x="21.7849%" y="853" width="0.6565%" height="15" fill="rgb(228,208,7)" fg:x="909896572" fg:w="27419909"/><text x="22.0349%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27,419,909 samples, 0.66%)</title><rect x="21.7849%" y="837" width="0.6565%" height="15" fill="rgb(244,45,10)" fg:x="909896572" fg:w="27419909"/><text x="22.0349%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (27,419,909 samples, 0.66%)</title><rect x="21.7849%" y="821" width="0.6565%" height="15" fill="rgb(207,125,25)" fg:x="909896572" fg:w="27419909"/><text x="22.0349%" y="831.50"></text></g><g><title>__GI___libc_malloc (4,460,246 samples, 0.11%)</title><rect x="22.4414%" y="1109" width="0.1068%" height="15" fill="rgb(210,195,18)" fg:x="937316481" fg:w="4460246"/><text x="22.6914%" y="1119.50"></text></g><g><title>arena_for_chunk (4,460,246 samples, 0.11%)</title><rect x="22.4414%" y="1093" width="0.1068%" height="15" fill="rgb(249,80,12)" fg:x="937316481" fg:w="4460246"/><text x="22.6914%" y="1103.50"></text></g><g><title>_int_free (11,496,948 samples, 0.28%)</title><rect x="22.5482%" y="1109" width="0.2753%" height="15" fill="rgb(221,65,9)" fg:x="941776727" fg:w="11496948"/><text x="22.7982%" y="1119.50"></text></g><g><title>_int_malloc (39,172,049 samples, 0.94%)</title><rect x="22.8235%" y="1109" width="0.9379%" height="15" fill="rgb(235,49,36)" fg:x="953273675" fg:w="39172049"/><text x="23.0735%" y="1119.50"></text></g><g><title>clap_builder::derive::Parser::parse (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="837" width="0.0510%" height="15" fill="rgb(225,32,20)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="847.50"></text></g><g><title>clap_builder::builder::command::Command::get_matches (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="821" width="0.0510%" height="15" fill="rgb(215,141,46)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="831.50"></text></g><g><title>clap_builder::builder::command::Command::get_matches_from (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="805" width="0.0510%" height="15" fill="rgb(250,160,47)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="815.50"></text></g><g><title>clap_builder::builder::command::Command::try_get_matches_from_mut (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="789" width="0.0510%" height="15" fill="rgb(216,222,40)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="799.50"></text></g><g><title>clap_builder::builder::command::Command::_do_parse (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="773" width="0.0510%" height="15" fill="rgb(234,217,39)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="783.50"></text></g><g><title>clap_builder::builder::command::Command::_build_self (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="757" width="0.0510%" height="15" fill="rgb(207,178,40)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="767.50"></text></g><g><title>clap_builder::builder::command::Command::_check_help_and_version (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="741" width="0.0510%" height="15" fill="rgb(221,136,13)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="751.50"></text></g><g><title>clap_builder::builder::command::Command::arg (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="725" width="0.0510%" height="15" fill="rgb(249,199,10)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="735.50"></text></g><g><title>clap_builder::builder::command::Command::arg_internal (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="709" width="0.0510%" height="15" fill="rgb(249,222,13)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="719.50"></text></g><g><title>clap_builder::mkeymap::MKeyMap::push (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="693" width="0.0510%" height="15" fill="rgb(244,185,38)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="677" width="0.0510%" height="15" fill="rgb(236,202,9)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="661" width="0.0510%" height="15" fill="rgb(250,229,37)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="645" width="0.0510%" height="15" fill="rgb(206,174,23)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="629" width="0.0510%" height="15" fill="rgb(211,33,43)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="639.50"></text></g><g><title>__GI___libc_malloc (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="613" width="0.0510%" height="15" fill="rgb(245,58,50)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="623.50"></text></g><g><title>_int_malloc (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="597" width="0.0510%" height="15" fill="rgb(244,68,36)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="607.50"></text></g><g><title>asm_exc_page_fault (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="581" width="0.0510%" height="15" fill="rgb(232,229,15)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="591.50"></text></g><g><title>exc_page_fault (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="565" width="0.0510%" height="15" fill="rgb(254,30,23)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="575.50"></text></g><g><title>do_user_addr_fault (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="549" width="0.0510%" height="15" fill="rgb(235,160,14)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="559.50"></text></g><g><title>handle_mm_fault (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="533" width="0.0510%" height="15" fill="rgb(212,155,44)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="543.50"></text></g><g><title>__handle_mm_fault (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="517" width="0.0510%" height="15" fill="rgb(226,2,50)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="527.50"></text></g><g><title>handle_pte_fault (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="501" width="0.0510%" height="15" fill="rgb(234,177,6)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="511.50"></text></g><g><title>do_anonymous_page (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="485" width="0.0510%" height="15" fill="rgb(217,24,9)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="495.50"></text></g><g><title>alloc_anon_folio (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="469" width="0.0510%" height="15" fill="rgb(220,13,46)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="479.50"></text></g><g><title>vma_alloc_folio (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="453" width="0.0510%" height="15" fill="rgb(239,221,27)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="463.50"></text></g><g><title>alloc_pages_mpol (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="437" width="0.0510%" height="15" fill="rgb(222,198,25)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="447.50"></text></g><g><title>__alloc_pages (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="421" width="0.0510%" height="15" fill="rgb(211,99,13)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="431.50"></text></g><g><title>get_page_from_freelist (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="405" width="0.0510%" height="15" fill="rgb(232,111,31)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="415.50"></text></g><g><title>post_alloc_hook (2,129,212 samples, 0.05%)</title><rect x="23.7613%" y="389" width="0.0510%" height="15" fill="rgb(245,82,37)" fg:x="992445724" fg:w="2129212"/><text x="24.0113%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4,450,955 samples, 0.11%)</title><rect x="23.8123%" y="773" width="0.1066%" height="15" fill="rgb(227,149,46)" fg:x="994574936" fg:w="4450955"/><text x="24.0623%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4,450,955 samples, 0.11%)</title><rect x="23.8123%" y="757" width="0.1066%" height="15" fill="rgb(218,36,50)" fg:x="994574936" fg:w="4450955"/><text x="24.0623%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4,450,955 samples, 0.11%)</title><rect x="23.8123%" y="741" width="0.1066%" height="15" fill="rgb(226,80,48)" fg:x="994574936" fg:w="4450955"/><text x="24.0623%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,450,955 samples, 0.11%)</title><rect x="23.8123%" y="725" width="0.1066%" height="15" fill="rgb(238,224,15)" fg:x="994574936" fg:w="4450955"/><text x="24.0623%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,450,955 samples, 0.11%)</title><rect x="23.8123%" y="709" width="0.1066%" height="15" fill="rgb(241,136,10)" fg:x="994574936" fg:w="4450955"/><text x="24.0623%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (4,450,955 samples, 0.11%)</title><rect x="23.8123%" y="693" width="0.1066%" height="15" fill="rgb(208,32,45)" fg:x="994574936" fg:w="4450955"/><text x="24.0623%" y="703.50"></text></g><g><title>__GI___libc_free (4,450,955 samples, 0.11%)</title><rect x="23.8123%" y="677" width="0.1066%" height="15" fill="rgb(207,135,9)" fg:x="994574936" fg:w="4450955"/><text x="24.0623%" y="687.50"></text></g><g><title>core::fmt::Formatter::pad (4,450,955 samples, 0.11%)</title><rect x="23.8123%" y="661" width="0.1066%" height="15" fill="rgb(206,86,44)" fg:x="994574936" fg:w="4450955"/><text x="24.0623%" y="671.50"></text></g><g><title>__GI___libc_realloc (4,440,566 samples, 0.11%)</title><rect x="23.9189%" y="757" width="0.1063%" height="15" fill="rgb(245,177,15)" fg:x="999025891" fg:w="4440566"/><text x="24.1689%" y="767.50"></text></g><g><title>_int_free_maybe_consolidate (8,885,035 samples, 0.21%)</title><rect x="24.0252%" y="757" width="0.2127%" height="15" fill="rgb(206,64,50)" fg:x="1003466457" fg:w="8885035"/><text x="24.2752%" y="767.50"></text></g><g><title>_int_free_merge_chunk (13,300,772 samples, 0.32%)</title><rect x="24.2379%" y="757" width="0.3184%" height="15" fill="rgb(234,36,40)" fg:x="1012351492" fg:w="13300772"/><text x="24.4879%" y="767.50"></text></g><g><title>free_perturb (4,415,910 samples, 0.11%)</title><rect x="24.4506%" y="741" width="0.1057%" height="15" fill="rgb(213,64,8)" fg:x="1021236354" fg:w="4415910"/><text x="24.7006%" y="751.50"></text></g><g><title>_int_realloc (8,899,464 samples, 0.21%)</title><rect x="24.5564%" y="757" width="0.2131%" height="15" fill="rgb(210,75,36)" fg:x="1025652264" fg:w="8899464"/><text x="24.8064%" y="767.50"></text></g><g><title>dget_parent (4,454,899 samples, 0.11%)</title><rect x="24.8760%" y="469" width="0.1067%" height="15" fill="rgb(229,88,21)" fg:x="1039001841" fg:w="4454899"/><text x="25.1260%" y="479.50"></text></g><g><title>__memcpy (4,452,202 samples, 0.11%)</title><rect x="24.9826%" y="421" width="0.1066%" height="15" fill="rgb(252,204,47)" fg:x="1043456740" fg:w="4452202"/><text x="25.2326%" y="431.50"></text></g><g><title>page_counter_try_charge (8,450,785 samples, 0.20%)</title><rect x="25.1956%" y="357" width="0.2023%" height="15" fill="rgb(208,77,27)" fg:x="1052352872" fg:w="8450785"/><text x="25.4456%" y="367.50"></text></g><g><title>__kmalloc (17,347,969 samples, 0.42%)</title><rect x="25.0892%" y="405" width="0.4153%" height="15" fill="rgb(221,76,26)" fg:x="1047908942" fg:w="17347969"/><text x="25.3392%" y="415.50"></text></g><g><title>obj_cgroup_charge (17,347,969 samples, 0.42%)</title><rect x="25.0892%" y="389" width="0.4153%" height="15" fill="rgb(225,139,18)" fg:x="1047908942" fg:w="17347969"/><text x="25.3392%" y="399.50"></text></g><g><title>try_charge_memcg (17,347,969 samples, 0.42%)</title><rect x="25.0892%" y="373" width="0.4153%" height="15" fill="rgb(230,137,11)" fg:x="1047908942" fg:w="17347969"/><text x="25.3392%" y="383.50"></text></g><g><title>refill_stock (4,453,254 samples, 0.11%)</title><rect x="25.3980%" y="357" width="0.1066%" height="15" fill="rgb(212,28,1)" fg:x="1060803657" fg:w="4453254"/><text x="25.6480%" y="367.50"></text></g><g><title>__refill_stock (4,453,254 samples, 0.11%)</title><rect x="25.3980%" y="341" width="0.1066%" height="15" fill="rgb(248,164,17)" fg:x="1060803657" fg:w="4453254"/><text x="25.6480%" y="351.50"></text></g><g><title>drain_stock (4,453,254 samples, 0.11%)</title><rect x="25.3980%" y="325" width="0.1066%" height="15" fill="rgb(222,171,42)" fg:x="1060803657" fg:w="4453254"/><text x="25.6480%" y="335.50"></text></g><g><title>page_counter_uncharge (4,453,254 samples, 0.11%)</title><rect x="25.3980%" y="309" width="0.1066%" height="15" fill="rgb(243,84,45)" fg:x="1060803657" fg:w="4453254"/><text x="25.6480%" y="319.50"></text></g><g><title>page_counter_cancel (4,453,254 samples, 0.11%)</title><rect x="25.3980%" y="293" width="0.1066%" height="15" fill="rgb(252,49,23)" fg:x="1060803657" fg:w="4453254"/><text x="25.6480%" y="303.50"></text></g><g><title>kfree (4,449,739 samples, 0.11%)</title><rect x="25.5046%" y="373" width="0.1065%" height="15" fill="rgb(215,19,7)" fg:x="1065256911" fg:w="4449739"/><text x="25.7546%" y="383.50"></text></g><g><title>__memcg_slab_free_hook (4,449,739 samples, 0.11%)</title><rect x="25.5046%" y="357" width="0.1065%" height="15" fill="rgb(238,81,41)" fg:x="1065256911" fg:w="4449739"/><text x="25.7546%" y="367.50"></text></g><g><title>mod_objcg_state (4,449,739 samples, 0.11%)</title><rect x="25.5046%" y="341" width="0.1065%" height="15" fill="rgb(210,199,37)" fg:x="1065256911" fg:w="4449739"/><text x="25.7546%" y="351.50"></text></g><g><title>fsnotify_destroy_event (8,897,710 samples, 0.21%)</title><rect x="25.5046%" y="405" width="0.2130%" height="15" fill="rgb(244,192,49)" fg:x="1065256911" fg:w="8897710"/><text x="25.7546%" y="415.50"></text></g><g><title>inotify_free_event (8,897,710 samples, 0.21%)</title><rect x="25.5046%" y="389" width="0.2130%" height="15" fill="rgb(226,211,11)" fg:x="1065256911" fg:w="8897710"/><text x="25.7546%" y="399.50"></text></g><g><title>srso_alias_return_thunk (4,447,971 samples, 0.11%)</title><rect x="25.6111%" y="373" width="0.1065%" height="15" fill="rgb(236,162,54)" fg:x="1069706650" fg:w="4447971"/><text x="25.8611%" y="383.50"></text></g><g><title>fsnotify_insert_event (4,453,238 samples, 0.11%)</title><rect x="25.7176%" y="405" width="0.1066%" height="15" fill="rgb(220,229,9)" fg:x="1074154621" fg:w="4453238"/><text x="25.9676%" y="415.50"></text></g><g><title>inotify_free_event (4,386,572 samples, 0.11%)</title><rect x="25.8242%" y="405" width="0.1050%" height="15" fill="rgb(250,87,22)" fg:x="1078607859" fg:w="4386572"/><text x="26.0742%" y="415.50"></text></g><g><title>fsnotify_handle_inode_event.isra.0 (43,993,617 samples, 1.05%)</title><rect x="24.9826%" y="437" width="1.0533%" height="15" fill="rgb(239,43,17)" fg:x="1043456740" fg:w="43993617"/><text x="25.2326%" y="447.50"></text></g><g><title>inotify_handle_inode_event (39,541,415 samples, 0.95%)</title><rect x="25.0892%" y="421" width="0.9467%" height="15" fill="rgb(231,177,25)" fg:x="1047908942" fg:w="39541415"/><text x="25.3392%" y="431.50"></text></g><g><title>srso_alias_safe_ret (4,455,926 samples, 0.11%)</title><rect x="25.9293%" y="405" width="0.1067%" height="15" fill="rgb(219,179,1)" fg:x="1082994431" fg:w="4455926"/><text x="26.1793%" y="415.50"></text></g><g><title>__fsnotify_parent (52,802,526 samples, 1.26%)</title><rect x="24.8760%" y="485" width="1.2642%" height="15" fill="rgb(238,219,53)" fg:x="1039001841" fg:w="52802526"/><text x="25.1260%" y="495.50"></text></g><g><title>fsnotify (48,347,627 samples, 1.16%)</title><rect x="24.9826%" y="469" width="1.1575%" height="15" fill="rgb(232,167,36)" fg:x="1043456740" fg:w="48347627"/><text x="25.2326%" y="479.50"></text></g><g><title>send_to_group (48,347,627 samples, 1.16%)</title><rect x="24.9826%" y="453" width="1.1575%" height="15" fill="rgb(244,19,51)" fg:x="1043456740" fg:w="48347627"/><text x="25.2326%" y="463.50"></text></g><g><title>inotify_handle_inode_event (4,354,010 samples, 0.10%)</title><rect x="26.0360%" y="437" width="0.1042%" height="15" fill="rgb(224,6,22)" fg:x="1087450357" fg:w="4354010"/><text x="26.2860%" y="447.50"></text></g><g><title>balance_dirty_pages_ratelimited (4,448,060 samples, 0.11%)</title><rect x="26.1402%" y="453" width="0.1065%" height="15" fill="rgb(224,145,5)" fg:x="1091804367" fg:w="4448060"/><text x="26.3902%" y="463.50"></text></g><g><title>ext4_da_write_end (4,444,334 samples, 0.11%)</title><rect x="26.2467%" y="453" width="0.1064%" height="15" fill="rgb(234,130,49)" fg:x="1096252427" fg:w="4444334"/><text x="26.4967%" y="463.50"></text></g><g><title>balance_dirty_pages_ratelimited (13,339,567 samples, 0.32%)</title><rect x="26.3531%" y="437" width="0.3194%" height="15" fill="rgb(254,6,2)" fg:x="1100696761" fg:w="13339567"/><text x="26.6031%" y="447.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (13,339,567 samples, 0.32%)</title><rect x="26.3531%" y="421" width="0.3194%" height="15" fill="rgb(208,96,46)" fg:x="1100696761" fg:w="13339567"/><text x="26.6031%" y="431.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (4,446,347 samples, 0.11%)</title><rect x="26.6725%" y="437" width="0.1065%" height="15" fill="rgb(239,3,39)" fg:x="1114036328" fg:w="4446347"/><text x="26.9225%" y="447.50"></text></g><g><title>copy_page_from_iter_atomic (3,982,507 samples, 0.10%)</title><rect x="26.7789%" y="437" width="0.0953%" height="15" fill="rgb(233,210,1)" fg:x="1118482675" fg:w="3982507"/><text x="27.0289%" y="447.50"></text></g><g><title>__lruvec_stat_mod_folio (4,441,287 samples, 0.11%)</title><rect x="26.9806%" y="373" width="0.1063%" height="15" fill="rgb(244,137,37)" fg:x="1126906467" fg:w="4441287"/><text x="27.2306%" y="383.50"></text></g><g><title>mem_cgroup_commit_charge (3,593,857 samples, 0.09%)</title><rect x="27.0870%" y="357" width="0.0860%" height="15" fill="rgb(240,136,2)" fg:x="1131347754" fg:w="3593857"/><text x="27.3370%" y="367.50"></text></g><g><title>__count_memcg_events (3,593,857 samples, 0.09%)</title><rect x="27.0870%" y="341" width="0.0860%" height="15" fill="rgb(239,18,37)" fg:x="1131347754" fg:w="3593857"/><text x="27.3370%" y="351.50"></text></g><g><title>consume_stock (4,445,574 samples, 0.11%)</title><rect x="27.1730%" y="341" width="0.1064%" height="15" fill="rgb(218,185,22)" fg:x="1134941611" fg:w="4445574"/><text x="27.4230%" y="351.50"></text></g><g><title>page_counter_try_charge (8,889,122 samples, 0.21%)</title><rect x="27.2794%" y="341" width="0.2128%" height="15" fill="rgb(225,218,4)" fg:x="1139387185" fg:w="8889122"/><text x="27.5294%" y="351.50"></text></g><g><title>refill_stock (13,220,367 samples, 0.32%)</title><rect x="27.4923%" y="341" width="0.3165%" height="15" fill="rgb(230,182,32)" fg:x="1148276307" fg:w="13220367"/><text x="27.7423%" y="351.50"></text></g><g><title>__refill_stock (13,220,367 samples, 0.32%)</title><rect x="27.4923%" y="325" width="0.3165%" height="15" fill="rgb(242,56,43)" fg:x="1148276307" fg:w="13220367"/><text x="27.7423%" y="335.50"></text></g><g><title>drain_stock (4,323,049 samples, 0.10%)</title><rect x="27.7053%" y="309" width="0.1035%" height="15" fill="rgb(233,99,24)" fg:x="1157173625" fg:w="4323049"/><text x="27.9553%" y="319.50"></text></g><g><title>page_counter_uncharge (4,323,049 samples, 0.10%)</title><rect x="27.7053%" y="293" width="0.1035%" height="15" fill="rgb(234,209,42)" fg:x="1157173625" fg:w="4323049"/><text x="27.9553%" y="303.50"></text></g><g><title>page_counter_cancel (4,323,049 samples, 0.10%)</title><rect x="27.7053%" y="277" width="0.1035%" height="15" fill="rgb(227,7,12)" fg:x="1157173625" fg:w="4323049"/><text x="27.9553%" y="287.50"></text></g><g><title>__mem_cgroup_charge (34,587,047 samples, 0.83%)</title><rect x="27.0870%" y="373" width="0.8281%" height="15" fill="rgb(245,203,43)" fg:x="1131347754" fg:w="34587047"/><text x="27.3370%" y="383.50"></text></g><g><title>try_charge_memcg (30,993,190 samples, 0.74%)</title><rect x="27.1730%" y="357" width="0.7420%" height="15" fill="rgb(238,205,33)" fg:x="1134941611" fg:w="30993190"/><text x="27.4230%" y="367.50"></text></g><g><title>srso_alias_safe_ret (4,438,127 samples, 0.11%)</title><rect x="27.8088%" y="341" width="0.1063%" height="15" fill="rgb(231,56,7)" fg:x="1161496674" fg:w="4438127"/><text x="28.0588%" y="351.50"></text></g><g><title>__rcu_read_unlock (4,426,485 samples, 0.11%)</title><rect x="27.9150%" y="373" width="0.1060%" height="15" fill="rgb(244,186,29)" fg:x="1165934801" fg:w="4426485"/><text x="28.1650%" y="383.50"></text></g><g><title>xa_get_order (4,008,876 samples, 0.10%)</title><rect x="28.0210%" y="373" width="0.0960%" height="15" fill="rgb(234,111,31)" fg:x="1170361286" fg:w="4008876"/><text x="28.2710%" y="383.50"></text></g><g><title>xas_find_conflict (4,444,085 samples, 0.11%)</title><rect x="28.1170%" y="373" width="0.1064%" height="15" fill="rgb(241,149,10)" fg:x="1174370162" fg:w="4444085"/><text x="28.3670%" y="383.50"></text></g><g><title>xas_start (4,444,085 samples, 0.11%)</title><rect x="28.1170%" y="357" width="0.1064%" height="15" fill="rgb(249,206,44)" fg:x="1174370162" fg:w="4444085"/><text x="28.3670%" y="367.50"></text></g><g><title>__filemap_add_folio (56,340,792 samples, 1.35%)</title><rect x="26.9806%" y="389" width="1.3489%" height="15" fill="rgb(251,153,30)" fg:x="1126906467" fg:w="56340792"/><text x="27.2306%" y="399.50"></text></g><g><title>xas_nomem (4,433,012 samples, 0.11%)</title><rect x="28.2234%" y="373" width="0.1061%" height="15" fill="rgb(239,152,38)" fg:x="1178814247" fg:w="4433012"/><text x="28.4734%" y="383.50"></text></g><g><title>__rcu_read_lock (4,359,140 samples, 0.10%)</title><rect x="28.4360%" y="357" width="0.1044%" height="15" fill="rgb(249,139,47)" fg:x="1187695093" fg:w="4359140"/><text x="28.6860%" y="367.50"></text></g><g><title>__mod_memcg_lruvec_state (4,455,115 samples, 0.11%)</title><rect x="28.5404%" y="309" width="0.1067%" height="15" fill="rgb(244,64,35)" fg:x="1192054233" fg:w="4455115"/><text x="28.7904%" y="319.50"></text></g><g><title>filemap_add_folio (74,053,586 samples, 1.77%)</title><rect x="26.9806%" y="405" width="1.7730%" height="15" fill="rgb(216,46,15)" fg:x="1126906467" fg:w="74053586"/><text x="27.2306%" y="415.50">f..</text></g><g><title>folio_add_lru (17,712,794 samples, 0.42%)</title><rect x="28.3295%" y="389" width="0.4241%" height="15" fill="rgb(250,74,19)" fg:x="1183247259" fg:w="17712794"/><text x="28.5795%" y="399.50"></text></g><g><title>folio_batch_move_lru (13,264,960 samples, 0.32%)</title><rect x="28.4360%" y="373" width="0.3176%" height="15" fill="rgb(249,42,33)" fg:x="1187695093" fg:w="13264960"/><text x="28.6860%" y="383.50"></text></g><g><title>lru_add_fn (8,905,820 samples, 0.21%)</title><rect x="28.5404%" y="357" width="0.2132%" height="15" fill="rgb(242,149,17)" fg:x="1192054233" fg:w="8905820"/><text x="28.7904%" y="367.50"></text></g><g><title>lru_gen_add_folio (8,905,820 samples, 0.21%)</title><rect x="28.5404%" y="341" width="0.2132%" height="15" fill="rgb(244,29,21)" fg:x="1192054233" fg:w="8905820"/><text x="28.7904%" y="351.50"></text></g><g><title>__mod_lruvec_state (8,905,820 samples, 0.21%)</title><rect x="28.5404%" y="325" width="0.2132%" height="15" fill="rgb(220,130,37)" fg:x="1192054233" fg:w="8905820"/><text x="28.7904%" y="335.50"></text></g><g><title>cgroup_rstat_updated (4,450,705 samples, 0.11%)</title><rect x="28.6471%" y="309" width="0.1066%" height="15" fill="rgb(211,67,2)" fg:x="1196509348" fg:w="4450705"/><text x="28.8971%" y="319.50"></text></g><g><title>clear_page_erms (8,196,350 samples, 0.20%)</title><rect x="29.4940%" y="325" width="0.1962%" height="15" fill="rgb(235,68,52)" fg:x="1231884191" fg:w="8196350"/><text x="29.7440%" y="335.50"></text></g><g><title>__alloc_pages (39,125,675 samples, 0.94%)</title><rect x="28.8600%" y="357" width="0.9368%" height="15" fill="rgb(246,142,3)" fg:x="1205401353" fg:w="39125675"/><text x="29.1100%" y="367.50"></text></g><g><title>get_page_from_freelist (34,683,213 samples, 0.83%)</title><rect x="28.9663%" y="341" width="0.8304%" height="15" fill="rgb(241,25,7)" fg:x="1209843815" fg:w="34683213"/><text x="29.2163%" y="351.50"></text></g><g><title>rmqueue (4,446,487 samples, 0.11%)</title><rect x="29.6903%" y="325" width="0.1065%" height="15" fill="rgb(242,119,39)" fg:x="1240080541" fg:w="4446487"/><text x="29.9403%" y="335.50"></text></g><g><title>__rmqueue_pcplist (4,446,487 samples, 0.11%)</title><rect x="29.6903%" y="309" width="0.1065%" height="15" fill="rgb(241,98,45)" fg:x="1240080541" fg:w="4446487"/><text x="29.9403%" y="319.50"></text></g><g><title>filemap_alloc_folio (48,020,884 samples, 1.15%)</title><rect x="28.7536%" y="405" width="1.1497%" height="15" fill="rgb(254,28,30)" fg:x="1200960053" fg:w="48020884"/><text x="29.0036%" y="415.50"></text></g><g><title>folio_alloc (48,020,884 samples, 1.15%)</title><rect x="28.7536%" y="389" width="1.1497%" height="15" fill="rgb(241,142,54)" fg:x="1200960053" fg:w="48020884"/><text x="29.0036%" y="399.50"></text></g><g><title>alloc_pages_mpol (43,579,584 samples, 1.04%)</title><rect x="28.8600%" y="373" width="1.0434%" height="15" fill="rgb(222,85,15)" fg:x="1205401353" fg:w="43579584"/><text x="29.1100%" y="383.50"></text></g><g><title>policy_nodemask (4,453,909 samples, 0.11%)</title><rect x="29.7967%" y="357" width="0.1066%" height="15" fill="rgb(210,85,47)" fg:x="1244527028" fg:w="4453909"/><text x="30.0467%" y="367.50"></text></g><g><title>__filemap_get_folio (130,961,498 samples, 3.14%)</title><rect x="26.8743%" y="421" width="3.1355%" height="15" fill="rgb(224,206,25)" fg:x="1122465182" fg:w="130961498"/><text x="27.1243%" y="431.50">__f..</text></g><g><title>filemap_get_entry (4,445,743 samples, 0.11%)</title><rect x="29.9033%" y="405" width="0.1064%" height="15" fill="rgb(243,201,19)" fg:x="1248980937" fg:w="4445743"/><text x="30.1533%" y="415.50"></text></g><g><title>xas_load (4,445,743 samples, 0.11%)</title><rect x="29.9033%" y="389" width="0.1064%" height="15" fill="rgb(236,59,4)" fg:x="1248980937" fg:w="4445743"/><text x="30.1533%" y="399.50"></text></g><g><title>xas_start (4,445,743 samples, 0.11%)</title><rect x="29.9033%" y="373" width="0.1064%" height="15" fill="rgb(254,179,45)" fg:x="1248980937" fg:w="4445743"/><text x="30.1533%" y="383.50"></text></g><g><title>___slab_alloc (3,620,046 samples, 0.09%)</title><rect x="30.1927%" y="341" width="0.0867%" height="15" fill="rgb(226,14,10)" fg:x="1261067066" fg:w="3620046"/><text x="30.4427%" y="351.50"></text></g><g><title>new_slab (3,620,046 samples, 0.09%)</title><rect x="30.1927%" y="325" width="0.0867%" height="15" fill="rgb(244,27,41)" fg:x="1261067066" fg:w="3620046"/><text x="30.4427%" y="335.50"></text></g><g><title>allocate_slab (3,620,046 samples, 0.09%)</title><rect x="30.1927%" y="309" width="0.0867%" height="15" fill="rgb(235,35,32)" fg:x="1261067066" fg:w="3620046"/><text x="30.4427%" y="319.50"></text></g><g><title>get_page_from_freelist (3,620,046 samples, 0.09%)</title><rect x="30.1927%" y="293" width="0.0867%" height="15" fill="rgb(218,68,31)" fg:x="1261067066" fg:w="3620046"/><text x="30.4427%" y="303.50"></text></g><g><title>create_empty_buffers (15,707,038 samples, 0.38%)</title><rect x="30.0098%" y="405" width="0.3761%" height="15" fill="rgb(207,120,37)" fg:x="1253426680" fg:w="15707038"/><text x="30.2598%" y="415.50"></text></g><g><title>folio_alloc_buffers (15,707,038 samples, 0.38%)</title><rect x="30.0098%" y="389" width="0.3761%" height="15" fill="rgb(227,98,0)" fg:x="1253426680" fg:w="15707038"/><text x="30.2598%" y="399.50"></text></g><g><title>alloc_buffer_head (15,707,038 samples, 0.38%)</title><rect x="30.0098%" y="373" width="0.3761%" height="15" fill="rgb(207,7,3)" fg:x="1253426680" fg:w="15707038"/><text x="30.2598%" y="383.50"></text></g><g><title>kmem_cache_alloc (11,976,937 samples, 0.29%)</title><rect x="30.0991%" y="357" width="0.2868%" height="15" fill="rgb(206,98,19)" fg:x="1257156781" fg:w="11976937"/><text x="30.3491%" y="367.50"></text></g><g><title>obj_cgroup_charge (4,446,606 samples, 0.11%)</title><rect x="30.2794%" y="341" width="0.1065%" height="15" fill="rgb(217,5,26)" fg:x="1264687112" fg:w="4446606"/><text x="30.5294%" y="351.50"></text></g><g><title>refill_obj_stock (4,446,606 samples, 0.11%)</title><rect x="30.2794%" y="325" width="0.1065%" height="15" fill="rgb(235,190,38)" fg:x="1264687112" fg:w="4446606"/><text x="30.5294%" y="335.50"></text></g><g><title>ext4_da_reserve_space (4,447,774 samples, 0.11%)</title><rect x="30.5989%" y="373" width="0.1065%" height="15" fill="rgb(247,86,24)" fg:x="1278030496" fg:w="4447774"/><text x="30.8489%" y="383.50"></text></g><g><title>ext4_get_reserved_space (4,447,774 samples, 0.11%)</title><rect x="30.5989%" y="357" width="0.1065%" height="15" fill="rgb(205,101,16)" fg:x="1278030496" fg:w="4447774"/><text x="30.8489%" y="367.50"></text></g><g><title>ext4_da_map_blocks.constprop.0 (17,793,751 samples, 0.43%)</title><rect x="30.3858%" y="389" width="0.4260%" height="15" fill="rgb(246,168,33)" fg:x="1269133718" fg:w="17793751"/><text x="30.6358%" y="399.50"></text></g><g><title>ext4_es_insert_delayed_block (4,449,199 samples, 0.11%)</title><rect x="30.7053%" y="373" width="0.1065%" height="15" fill="rgb(231,114,1)" fg:x="1282478270" fg:w="4449199"/><text x="30.9553%" y="383.50"></text></g><g><title>__es_remove_extent (4,449,199 samples, 0.11%)</title><rect x="30.7053%" y="357" width="0.1065%" height="15" fill="rgb(207,184,53)" fg:x="1282478270" fg:w="4449199"/><text x="30.9553%" y="367.50"></text></g><g><title>ext4_da_write_begin (168,911,568 samples, 4.04%)</title><rect x="26.8743%" y="437" width="4.0441%" height="15" fill="rgb(224,95,51)" fg:x="1122465182" fg:w="168911568"/><text x="27.1243%" y="447.50">ext4..</text></g><g><title>ext4_block_write_begin (37,950,070 samples, 0.91%)</title><rect x="30.0098%" y="421" width="0.9086%" height="15" fill="rgb(212,188,45)" fg:x="1253426680" fg:w="37950070"/><text x="30.2598%" y="431.50"></text></g><g><title>ext4_da_get_block_prep (22,243,032 samples, 0.53%)</title><rect x="30.3858%" y="405" width="0.5325%" height="15" fill="rgb(223,154,38)" fg:x="1269133718" fg:w="22243032"/><text x="30.6358%" y="415.50"></text></g><g><title>srso_alias_safe_ret (4,449,281 samples, 0.11%)</title><rect x="30.8119%" y="389" width="0.1065%" height="15" fill="rgb(251,22,52)" fg:x="1286927469" fg:w="4449281"/><text x="31.0619%" y="399.50"></text></g><g><title>__folio_mark_dirty (4,446,655 samples, 0.11%)</title><rect x="30.9184%" y="373" width="0.1065%" height="15" fill="rgb(229,209,22)" fg:x="1291376750" fg:w="4446655"/><text x="31.1684%" y="383.50"></text></g><g><title>folio_account_dirtied (4,446,655 samples, 0.11%)</title><rect x="30.9184%" y="357" width="0.1065%" height="15" fill="rgb(234,138,34)" fg:x="1291376750" fg:w="4446655"/><text x="31.1684%" y="367.50"></text></g><g><title>__rcu_read_unlock (4,393,369 samples, 0.11%)</title><rect x="31.0249%" y="373" width="0.1052%" height="15" fill="rgb(212,95,11)" fg:x="1295823405" fg:w="4393369"/><text x="31.2749%" y="383.50"></text></g><g><title>__xa_set_mark (4,429,227 samples, 0.11%)</title><rect x="31.1300%" y="373" width="0.1060%" height="15" fill="rgb(240,179,47)" fg:x="1300216774" fg:w="4429227"/><text x="31.3800%" y="383.50"></text></g><g><title>mark_buffer_dirty (17,722,258 samples, 0.42%)</title><rect x="30.9184%" y="389" width="0.4243%" height="15" fill="rgb(240,163,11)" fg:x="1291376750" fg:w="17722258"/><text x="31.1684%" y="399.50"></text></g><g><title>srso_alias_safe_ret (4,453,007 samples, 0.11%)</title><rect x="31.2361%" y="373" width="0.1066%" height="15" fill="rgb(236,37,12)" fg:x="1304646001" fg:w="4453007"/><text x="31.4861%" y="383.50"></text></g><g><title>std::io::Write::write_fmt (314,514,697 samples, 7.53%)</title><rect x="23.9189%" y="773" width="7.5302%" height="15" fill="rgb(232,164,16)" fg:x="999025891" fg:w="314514697"/><text x="24.1689%" y="783.50">std::io::W..</text></g><g><title>core::fmt::write (278,988,860 samples, 6.68%)</title><rect x="24.7694%" y="757" width="6.6796%" height="15" fill="rgb(244,205,15)" fg:x="1034551728" fg:w="278988860"/><text x="25.0194%" y="767.50">core::fmt..</text></g><g><title>core::fmt::rt::Argument::fmt (278,988,860 samples, 6.68%)</title><rect x="24.7694%" y="741" width="6.6796%" height="15" fill="rgb(223,117,47)" fg:x="1034551728" fg:w="278988860"/><text x="25.0194%" y="751.50">core::fmt..</text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (278,988,860 samples, 6.68%)</title><rect x="24.7694%" y="725" width="6.6796%" height="15" fill="rgb(244,107,35)" fg:x="1034551728" fg:w="278988860"/><text x="25.0194%" y="735.50">&lt;std::io:..</text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (278,988,860 samples, 6.68%)</title><rect x="24.7694%" y="709" width="6.6796%" height="15" fill="rgb(205,140,8)" fg:x="1034551728" fg:w="278988860"/><text x="25.0194%" y="719.50">&lt;std::io:..</text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (278,988,860 samples, 6.68%)</title><rect x="24.7694%" y="693" width="6.6796%" height="15" fill="rgb(228,84,46)" fg:x="1034551728" fg:w="278988860"/><text x="25.0194%" y="703.50">std::io::..</text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (278,988,860 samples, 6.68%)</title><rect x="24.7694%" y="677" width="6.6796%" height="15" fill="rgb(254,188,9)" fg:x="1034551728" fg:w="278988860"/><text x="25.0194%" y="687.50">std::io::..</text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (278,988,860 samples, 6.68%)</title><rect x="24.7694%" y="661" width="6.6796%" height="15" fill="rgb(206,112,54)" fg:x="1034551728" fg:w="278988860"/><text x="25.0194%" y="671.50">&lt;std::fs:..</text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (278,988,860 samples, 6.68%)</title><rect x="24.7694%" y="645" width="6.6796%" height="15" fill="rgb(216,84,49)" fg:x="1034551728" fg:w="278988860"/><text x="25.0194%" y="655.50">&lt;&amp;std::fs..</text></g><g><title>std::sys::pal::unix::fs::File::write (278,988,860 samples, 6.68%)</title><rect x="24.7694%" y="629" width="6.6796%" height="15" fill="rgb(214,194,35)" fg:x="1034551728" fg:w="278988860"/><text x="25.0194%" y="639.50">std::sys:..</text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (278,988,860 samples, 6.68%)</title><rect x="24.7694%" y="613" width="6.6796%" height="15" fill="rgb(249,28,3)" fg:x="1034551728" fg:w="278988860"/><text x="25.0194%" y="623.50">std::sys:..</text></g><g><title>__GI___libc_write (278,988,860 samples, 6.68%)</title><rect x="24.7694%" y="597" width="6.6796%" height="15" fill="rgb(222,56,52)" fg:x="1034551728" fg:w="278988860"/><text x="25.0194%" y="607.50">__GI___li..</text></g><g><title>entry_SYSCALL_64_after_hwframe (278,988,860 samples, 6.68%)</title><rect x="24.7694%" y="581" width="6.6796%" height="15" fill="rgb(245,217,50)" fg:x="1034551728" fg:w="278988860"/><text x="25.0194%" y="591.50">entry_SYS..</text></g><g><title>do_syscall_64 (278,988,860 samples, 6.68%)</title><rect x="24.7694%" y="565" width="6.6796%" height="15" fill="rgb(213,201,24)" fg:x="1034551728" fg:w="278988860"/><text x="25.0194%" y="575.50">do_syscal..</text></g><g><title>x64_sys_call (278,988,860 samples, 6.68%)</title><rect x="24.7694%" y="549" width="6.6796%" height="15" fill="rgb(248,116,28)" fg:x="1034551728" fg:w="278988860"/><text x="25.0194%" y="559.50">x64_sys_c..</text></g><g><title>__x64_sys_write (278,988,860 samples, 6.68%)</title><rect x="24.7694%" y="533" width="6.6796%" height="15" fill="rgb(219,72,43)" fg:x="1034551728" fg:w="278988860"/><text x="25.0194%" y="543.50">__x64_sys..</text></g><g><title>ksys_write (278,988,860 samples, 6.68%)</title><rect x="24.7694%" y="517" width="6.6796%" height="15" fill="rgb(209,138,14)" fg:x="1034551728" fg:w="278988860"/><text x="25.0194%" y="527.50">ksys_write</text></g><g><title>vfs_write (278,988,860 samples, 6.68%)</title><rect x="24.7694%" y="501" width="6.6796%" height="15" fill="rgb(222,18,33)" fg:x="1034551728" fg:w="278988860"/><text x="25.0194%" y="511.50">vfs_write</text></g><g><title>ext4_file_write_iter (221,736,221 samples, 5.31%)</title><rect x="26.1402%" y="485" width="5.3089%" height="15" fill="rgb(213,199,7)" fg:x="1091804367" fg:w="221736221"/><text x="26.3902%" y="495.50">ext4_f..</text></g><g><title>ext4_buffered_write_iter (221,736,221 samples, 5.31%)</title><rect x="26.1402%" y="469" width="5.3089%" height="15" fill="rgb(250,110,10)" fg:x="1091804367" fg:w="221736221"/><text x="26.3902%" y="479.50">ext4_b..</text></g><g><title>generic_perform_write (212,843,827 samples, 5.10%)</title><rect x="26.3531%" y="453" width="5.0959%" height="15" fill="rgb(248,123,6)" fg:x="1100696761" fg:w="212843827"/><text x="26.6031%" y="463.50">generi..</text></g><g><title>ext4_da_write_end (22,163,838 samples, 0.53%)</title><rect x="30.9184%" y="437" width="0.5307%" height="15" fill="rgb(206,91,31)" fg:x="1291376750" fg:w="22163838"/><text x="31.1684%" y="447.50"></text></g><g><title>block_write_end (22,163,838 samples, 0.53%)</title><rect x="30.9184%" y="421" width="0.5307%" height="15" fill="rgb(211,154,13)" fg:x="1291376750" fg:w="22163838"/><text x="31.1684%" y="431.50"></text></g><g><title>__block_commit_write (22,163,838 samples, 0.53%)</title><rect x="30.9184%" y="405" width="0.5307%" height="15" fill="rgb(225,148,7)" fg:x="1291376750" fg:w="22163838"/><text x="31.1684%" y="415.50"></text></g><g><title>srso_alias_safe_ret (4,441,580 samples, 0.11%)</title><rect x="31.3427%" y="389" width="0.1063%" height="15" fill="rgb(220,160,43)" fg:x="1309099008" fg:w="4441580"/><text x="31.5927%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4,300,985 samples, 0.10%)</title><rect x="31.4490%" y="709" width="0.1030%" height="15" fill="rgb(213,52,39)" fg:x="1313540588" fg:w="4300985"/><text x="31.6990%" y="719.50"></text></g><g><title>_int_free_maybe_consolidate (4,448,833 samples, 0.11%)</title><rect x="31.5520%" y="709" width="0.1065%" height="15" fill="rgb(243,137,7)" fg:x="1317841573" fg:w="4448833"/><text x="31.8020%" y="719.50"></text></g><g><title>_int_realloc (13,024,879 samples, 0.31%)</title><rect x="31.6585%" y="709" width="0.3118%" height="15" fill="rgb(230,79,13)" fg:x="1322290406" fg:w="13024879"/><text x="31.9085%" y="719.50"></text></g><g><title>alloc::string::String::with_capacity (4,369,530 samples, 0.10%)</title><rect x="31.9704%" y="693" width="0.1046%" height="15" fill="rgb(247,105,23)" fg:x="1335315285" fg:w="4369530"/><text x="32.2204%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,369,530 samples, 0.10%)</title><rect x="31.9704%" y="677" width="0.1046%" height="15" fill="rgb(223,179,41)" fg:x="1335315285" fg:w="4369530"/><text x="32.2204%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,369,530 samples, 0.10%)</title><rect x="31.9704%" y="661" width="0.1046%" height="15" fill="rgb(218,9,34)" fg:x="1335315285" fg:w="4369530"/><text x="32.2204%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,369,530 samples, 0.10%)</title><rect x="31.9704%" y="645" width="0.1046%" height="15" fill="rgb(222,106,8)" fg:x="1335315285" fg:w="4369530"/><text x="32.2204%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4,369,530 samples, 0.10%)</title><rect x="31.9704%" y="629" width="0.1046%" height="15" fill="rgb(211,220,0)" fg:x="1335315285" fg:w="4369530"/><text x="32.2204%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,369,530 samples, 0.10%)</title><rect x="31.9704%" y="613" width="0.1046%" height="15" fill="rgb(229,52,16)" fg:x="1335315285" fg:w="4369530"/><text x="32.2204%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,369,530 samples, 0.10%)</title><rect x="31.9704%" y="597" width="0.1046%" height="15" fill="rgb(212,155,18)" fg:x="1335315285" fg:w="4369530"/><text x="32.2204%" y="607.50"></text></g><g><title>alloc::alloc::alloc (4,369,530 samples, 0.10%)</title><rect x="31.9704%" y="581" width="0.1046%" height="15" fill="rgb(242,21,14)" fg:x="1335315285" fg:w="4369530"/><text x="32.2204%" y="591.50"></text></g><g><title>core::fmt::Formatter::pad (4,369,530 samples, 0.10%)</title><rect x="31.9704%" y="565" width="0.1046%" height="15" fill="rgb(222,19,48)" fg:x="1335315285" fg:w="4369530"/><text x="32.2204%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (4,369,530 samples, 0.10%)</title><rect x="31.9704%" y="549" width="0.1046%" height="15" fill="rgb(232,45,27)" fg:x="1335315285" fg:w="4369530"/><text x="32.2204%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (4,369,530 samples, 0.10%)</title><rect x="31.9704%" y="533" width="0.1046%" height="15" fill="rgb(249,103,42)" fg:x="1335315285" fg:w="4369530"/><text x="32.2204%" y="543.50"></text></g><g><title>__GI___libc_realloc (4,445,347 samples, 0.11%)</title><rect x="32.0750%" y="661" width="0.1064%" height="15" fill="rgb(246,81,33)" fg:x="1339684815" fg:w="4445347"/><text x="32.3250%" y="671.50"></text></g><g><title>__rdl_realloc (4,441,219 samples, 0.11%)</title><rect x="32.1814%" y="661" width="0.1063%" height="15" fill="rgb(252,33,42)" fg:x="1344130162" fg:w="4441219"/><text x="32.4314%" y="671.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4,441,219 samples, 0.11%)</title><rect x="32.1814%" y="645" width="0.1063%" height="15" fill="rgb(209,212,41)" fg:x="1344130162" fg:w="4441219"/><text x="32.4314%" y="655.50"></text></g><g><title>_int_malloc (57,674,014 samples, 1.38%)</title><rect x="32.2878%" y="661" width="1.3808%" height="15" fill="rgb(207,154,6)" fg:x="1348571381" fg:w="57674014"/><text x="32.5378%" y="671.50"></text></g><g><title>_int_realloc (4,457,057 samples, 0.11%)</title><rect x="33.6686%" y="661" width="0.1067%" height="15" fill="rgb(223,64,47)" fg:x="1406245395" fg:w="4457057"/><text x="33.9186%" y="671.50"></text></g><g><title>_int_malloc (21,907,448 samples, 0.52%)</title><rect x="33.7753%" y="533" width="0.5245%" height="15" fill="rgb(211,161,38)" fg:x="1410702452" fg:w="21907448"/><text x="34.0253%" y="543.50"></text></g><g><title>_int_malloc (13,348,793 samples, 0.32%)</title><rect x="34.2998%" y="501" width="0.3196%" height="15" fill="rgb(219,138,40)" fg:x="1432609900" fg:w="13348793"/><text x="34.5498%" y="511.50"></text></g><g><title>__rdl_realloc (4,451,886 samples, 0.11%)</title><rect x="34.6194%" y="421" width="0.1066%" height="15" fill="rgb(241,228,46)" fg:x="1445958693" fg:w="4451886"/><text x="34.8694%" y="431.50"></text></g><g><title>_int_malloc (13,340,525 samples, 0.32%)</title><rect x="34.7260%" y="421" width="0.3194%" height="15" fill="rgb(223,209,38)" fg:x="1450410579" fg:w="13340525"/><text x="34.9760%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4,118,467 samples, 0.10%)</title><rect x="35.0454%" y="405" width="0.0986%" height="15" fill="rgb(236,164,45)" fg:x="1463751104" fg:w="4118467"/><text x="35.2954%" y="415.50"></text></g><g><title>alloc::string::String::push_str (4,118,467 samples, 0.10%)</title><rect x="35.0454%" y="389" width="0.0986%" height="15" fill="rgb(231,15,5)" fg:x="1463751104" fg:w="4118467"/><text x="35.2954%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4,118,467 samples, 0.10%)</title><rect x="35.0454%" y="373" width="0.0986%" height="15" fill="rgb(252,35,15)" fg:x="1463751104" fg:w="4118467"/><text x="35.2954%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4,118,467 samples, 0.10%)</title><rect x="35.0454%" y="357" width="0.0986%" height="15" fill="rgb(248,181,18)" fg:x="1463751104" fg:w="4118467"/><text x="35.2954%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4,118,467 samples, 0.10%)</title><rect x="35.0454%" y="341" width="0.0986%" height="15" fill="rgb(233,39,42)" fg:x="1463751104" fg:w="4118467"/><text x="35.2954%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,118,467 samples, 0.10%)</title><rect x="35.0454%" y="325" width="0.0986%" height="15" fill="rgb(238,110,33)" fg:x="1463751104" fg:w="4118467"/><text x="35.2954%" y="335.50"></text></g><g><title>_int_malloc (30,599,321 samples, 0.73%)</title><rect x="35.1440%" y="405" width="0.7326%" height="15" fill="rgb(233,195,10)" fg:x="1467869571" fg:w="30599321"/><text x="35.3940%" y="415.50"></text></g><g><title>_int_malloc (17,255,349 samples, 0.41%)</title><rect x="35.4635%" y="389" width="0.4131%" height="15" fill="rgb(254,105,3)" fg:x="1481213543" fg:w="17255349"/><text x="35.7135%" y="399.50"></text></g><g><title>_int_realloc (8,217,572 samples, 0.20%)</title><rect x="35.8766%" y="405" width="0.1967%" height="15" fill="rgb(221,225,9)" fg:x="1498468892" fg:w="8217572"/><text x="36.1266%" y="415.50"></text></g><g><title>__GI___libc_realloc (65,170,722 samples, 1.56%)</title><rect x="34.6194%" y="437" width="1.5603%" height="15" fill="rgb(224,227,45)" fg:x="1445958693" fg:w="65170722"/><text x="34.8694%" y="447.50"></text></g><g><title>_int_realloc (47,378,311 samples, 1.13%)</title><rect x="35.0454%" y="421" width="1.1343%" height="15" fill="rgb(229,198,43)" fg:x="1463751104" fg:w="47378311"/><text x="35.2954%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4,442,951 samples, 0.11%)</title><rect x="36.0734%" y="405" width="0.1064%" height="15" fill="rgb(206,209,35)" fg:x="1506686464" fg:w="4442951"/><text x="36.3234%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4,442,951 samples, 0.11%)</title><rect x="36.0734%" y="389" width="0.1064%" height="15" fill="rgb(245,195,53)" fg:x="1506686464" fg:w="4442951"/><text x="36.3234%" y="399.50"></text></g><g><title>core::cmp::max (4,442,951 samples, 0.11%)</title><rect x="36.0734%" y="373" width="0.1064%" height="15" fill="rgb(240,92,26)" fg:x="1506686464" fg:w="4442951"/><text x="36.3234%" y="383.50"></text></g><g><title>core::cmp::Ord::max (4,442,951 samples, 0.11%)</title><rect x="36.0734%" y="357" width="0.1064%" height="15" fill="rgb(207,40,23)" fg:x="1506686464" fg:w="4442951"/><text x="36.3234%" y="367.50"></text></g><g><title>core::cmp::max_by (4,442,951 samples, 0.11%)</title><rect x="36.0734%" y="341" width="0.1064%" height="15" fill="rgb(223,111,35)" fg:x="1506686464" fg:w="4442951"/><text x="36.3234%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (104,873,669 samples, 2.51%)</title><rect x="33.7753%" y="645" width="2.5109%" height="15" fill="rgb(229,147,28)" fg:x="1410702452" fg:w="104873669"/><text x="34.0253%" y="655.50">&lt;a..</text></g><g><title>alloc::string::String::push_str (104,873,669 samples, 2.51%)</title><rect x="33.7753%" y="629" width="2.5109%" height="15" fill="rgb(211,29,28)" fg:x="1410702452" fg:w="104873669"/><text x="34.0253%" y="639.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (104,873,669 samples, 2.51%)</title><rect x="33.7753%" y="613" width="2.5109%" height="15" fill="rgb(228,72,33)" fg:x="1410702452" fg:w="104873669"/><text x="34.0253%" y="623.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (104,873,669 samples, 2.51%)</title><rect x="33.7753%" y="597" width="2.5109%" height="15" fill="rgb(205,214,31)" fg:x="1410702452" fg:w="104873669"/><text x="34.0253%" y="607.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (104,873,669 samples, 2.51%)</title><rect x="33.7753%" y="581" width="2.5109%" height="15" fill="rgb(224,111,15)" fg:x="1410702452" fg:w="104873669"/><text x="34.0253%" y="591.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (104,873,669 samples, 2.51%)</title><rect x="33.7753%" y="565" width="2.5109%" height="15" fill="rgb(253,21,26)" fg:x="1410702452" fg:w="104873669"/><text x="34.0253%" y="575.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (104,873,669 samples, 2.51%)</title><rect x="33.7753%" y="549" width="2.5109%" height="15" fill="rgb(245,139,43)" fg:x="1410702452" fg:w="104873669"/><text x="34.0253%" y="559.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (82,966,221 samples, 1.99%)</title><rect x="34.2998%" y="533" width="1.9864%" height="15" fill="rgb(252,170,7)" fg:x="1432609900" fg:w="82966221"/><text x="34.5498%" y="543.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (82,966,221 samples, 1.99%)</title><rect x="34.2998%" y="517" width="1.9864%" height="15" fill="rgb(231,118,14)" fg:x="1432609900" fg:w="82966221"/><text x="34.5498%" y="527.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (69,617,428 samples, 1.67%)</title><rect x="34.6194%" y="501" width="1.6668%" height="15" fill="rgb(238,83,0)" fg:x="1445958693" fg:w="69617428"/><text x="34.8694%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (69,617,428 samples, 1.67%)</title><rect x="34.6194%" y="485" width="1.6668%" height="15" fill="rgb(221,39,39)" fg:x="1445958693" fg:w="69617428"/><text x="34.8694%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (69,617,428 samples, 1.67%)</title><rect x="34.6194%" y="469" width="1.6668%" height="15" fill="rgb(222,119,46)" fg:x="1445958693" fg:w="69617428"/><text x="34.8694%" y="479.50"></text></g><g><title>alloc::alloc::realloc (69,617,428 samples, 1.67%)</title><rect x="34.6194%" y="453" width="1.6668%" height="15" fill="rgb(222,165,49)" fg:x="1445958693" fg:w="69617428"/><text x="34.8694%" y="463.50"></text></g><g><title>_int_malloc (4,446,706 samples, 0.11%)</title><rect x="36.1798%" y="437" width="0.1065%" height="15" fill="rgb(219,113,52)" fg:x="1511129415" fg:w="4446706"/><text x="36.4298%" y="447.50"></text></g><g><title>_int_malloc (48,421,744 samples, 1.16%)</title><rect x="36.2862%" y="645" width="1.1593%" height="15" fill="rgb(214,7,15)" fg:x="1515576121" fg:w="48421744"/><text x="36.5362%" y="655.50"></text></g><g><title>core::fmt::Formatter::new (4,443,666 samples, 0.11%)</title><rect x="37.4455%" y="645" width="0.1064%" height="15" fill="rgb(235,32,4)" fg:x="1563997865" fg:w="4443666"/><text x="37.6955%" y="655.50"></text></g><g><title>_int_malloc (26,620,366 samples, 0.64%)</title><rect x="37.6583%" y="517" width="0.6374%" height="15" fill="rgb(238,90,54)" fg:x="1572885328" fg:w="26620366"/><text x="37.9083%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (4,437,155 samples, 0.11%)</title><rect x="38.2957%" y="517" width="0.1062%" height="15" fill="rgb(213,208,19)" fg:x="1599505694" fg:w="4437155"/><text x="38.5457%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (4,437,155 samples, 0.11%)</title><rect x="38.2957%" y="501" width="0.1062%" height="15" fill="rgb(233,156,4)" fg:x="1599505694" fg:w="4437155"/><text x="38.5457%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (4,437,155 samples, 0.11%)</title><rect x="38.2957%" y="485" width="0.1062%" height="15" fill="rgb(207,194,5)" fg:x="1599505694" fg:w="4437155"/><text x="38.5457%" y="495.50"></text></g><g><title>__GI___libc_free (8,889,612 samples, 0.21%)</title><rect x="38.4019%" y="485" width="0.2128%" height="15" fill="rgb(206,111,30)" fg:x="1603942849" fg:w="8889612"/><text x="38.6519%" y="495.50"></text></g><g><title>_int_free (4,220,315 samples, 0.10%)</title><rect x="38.6148%" y="485" width="0.1010%" height="15" fill="rgb(243,70,54)" fg:x="1612832461" fg:w="4220315"/><text x="38.8648%" y="495.50"></text></g><g><title>_int_malloc (39,496,270 samples, 0.95%)</title><rect x="38.7158%" y="485" width="0.9456%" height="15" fill="rgb(242,28,8)" fg:x="1617052776" fg:w="39496270"/><text x="38.9658%" y="495.50"></text></g><g><title>alloc_perturb (8,787,605 samples, 0.21%)</title><rect x="39.4510%" y="469" width="0.2104%" height="15" fill="rgb(219,106,18)" fg:x="1647761441" fg:w="8787605"/><text x="39.7010%" y="479.50"></text></g><g><title>_int_realloc (4,453,872 samples, 0.11%)</title><rect x="39.6614%" y="485" width="0.1066%" height="15" fill="rgb(244,222,10)" fg:x="1656549046" fg:w="4453872"/><text x="39.9114%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3,790,019 samples, 0.09%)</title><rect x="39.7681%" y="485" width="0.0907%" height="15" fill="rgb(236,179,52)" fg:x="1661002918" fg:w="3790019"/><text x="40.0181%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3,790,019 samples, 0.09%)</title><rect x="39.7681%" y="469" width="0.0907%" height="15" fill="rgb(213,23,39)" fg:x="1661002918" fg:w="3790019"/><text x="40.0181%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3,790,019 samples, 0.09%)</title><rect x="39.7681%" y="453" width="0.0907%" height="15" fill="rgb(238,48,10)" fg:x="1661002918" fg:w="3790019"/><text x="40.0181%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4,451,270 samples, 0.11%)</title><rect x="39.8588%" y="421" width="0.1066%" height="15" fill="rgb(251,196,23)" fg:x="1664792937" fg:w="4451270"/><text x="40.1088%" y="431.50"></text></g><g><title>__GI___libc_realloc (4,453,369 samples, 0.11%)</title><rect x="40.0706%" y="405" width="0.1066%" height="15" fill="rgb(250,152,24)" fg:x="1673639174" fg:w="4453369"/><text x="40.3206%" y="415.50"></text></g><g><title>_int_malloc (53,178,230 samples, 1.27%)</title><rect x="40.1772%" y="405" width="1.2732%" height="15" fill="rgb(209,150,17)" fg:x="1678092543" fg:w="53178230"/><text x="40.4272%" y="415.50"></text></g><g><title>alloc_perturb (13,321,240 samples, 0.32%)</title><rect x="41.1315%" y="389" width="0.3189%" height="15" fill="rgb(234,202,34)" fg:x="1717949533" fg:w="13321240"/><text x="41.3815%" y="399.50"></text></g><g><title>__GI___libc_realloc (8,893,197 samples, 0.21%)</title><rect x="41.4504%" y="389" width="0.2129%" height="15" fill="rgb(253,148,53)" fg:x="1731270773" fg:w="8893197"/><text x="41.7004%" y="399.50"></text></g><g><title>checked_request2size (4,444,022 samples, 0.11%)</title><rect x="41.5569%" y="373" width="0.1064%" height="15" fill="rgb(218,129,16)" fg:x="1735719948" fg:w="4444022"/><text x="41.8069%" y="383.50"></text></g><g><title>__rdl_realloc (4,417,660 samples, 0.11%)</title><rect x="41.6633%" y="389" width="0.1058%" height="15" fill="rgb(216,85,19)" fg:x="1740163970" fg:w="4417660"/><text x="41.9133%" y="399.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4,417,660 samples, 0.11%)</title><rect x="41.6633%" y="373" width="0.1058%" height="15" fill="rgb(235,228,7)" fg:x="1740163970" fg:w="4417660"/><text x="41.9133%" y="383.50"></text></g><g><title>_int_free_maybe_consolidate (13,261,179 samples, 0.32%)</title><rect x="41.7691%" y="389" width="0.3175%" height="15" fill="rgb(245,175,0)" fg:x="1744581630" fg:w="13261179"/><text x="42.0191%" y="399.50"></text></g><g><title>malloc_consolidate (13,261,179 samples, 0.32%)</title><rect x="41.7691%" y="373" width="0.3175%" height="15" fill="rgb(208,168,36)" fg:x="1744581630" fg:w="13261179"/><text x="42.0191%" y="383.50"></text></g><g><title>malloc_consolidate (4,404,098 samples, 0.11%)</title><rect x="41.9812%" y="357" width="0.1054%" height="15" fill="rgb(246,171,24)" fg:x="1753438711" fg:w="4404098"/><text x="42.2312%" y="367.50"></text></g><g><title>_int_malloc (8,817,877 samples, 0.21%)</title><rect x="42.0866%" y="389" width="0.2111%" height="15" fill="rgb(215,142,24)" fg:x="1757842809" fg:w="8817877"/><text x="42.3366%" y="399.50"></text></g><g><title>_int_realloc (13,348,142 samples, 0.32%)</title><rect x="42.2977%" y="389" width="0.3196%" height="15" fill="rgb(250,187,7)" fg:x="1766660686" fg:w="13348142"/><text x="42.5477%" y="399.50"></text></g><g><title>__GI___libc_realloc (115,196,276 samples, 2.76%)</title><rect x="39.9654%" y="421" width="2.7581%" height="15" fill="rgb(228,66,33)" fg:x="1669244207" fg:w="115196276"/><text x="40.2154%" y="431.50">__..</text></g><g><title>_int_realloc (53,169,710 samples, 1.27%)</title><rect x="41.4504%" y="405" width="1.2730%" height="15" fill="rgb(234,215,21)" fg:x="1731270773" fg:w="53169710"/><text x="41.7004%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (4,431,655 samples, 0.11%)</title><rect x="42.6173%" y="389" width="0.1061%" height="15" fill="rgb(222,191,20)" fg:x="1780008828" fg:w="4431655"/><text x="42.8673%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4,431,655 samples, 0.11%)</title><rect x="42.6173%" y="373" width="0.1061%" height="15" fill="rgb(245,79,54)" fg:x="1780008828" fg:w="4431655"/><text x="42.8673%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4,431,655 samples, 0.11%)</title><rect x="42.6173%" y="357" width="0.1061%" height="15" fill="rgb(240,10,37)" fg:x="1780008828" fg:w="4431655"/><text x="42.8673%" y="367.50"></text></g><g><title>alloc::alloc::realloc (4,431,655 samples, 0.11%)</title><rect x="42.6173%" y="341" width="0.1061%" height="15" fill="rgb(214,192,32)" fg:x="1780008828" fg:w="4431655"/><text x="42.8673%" y="351.50"></text></g><g><title>_int_free (13,249,577 samples, 0.32%)</title><rect x="42.7234%" y="421" width="0.3172%" height="15" fill="rgb(209,36,54)" fg:x="1784440483" fg:w="13249577"/><text x="42.9734%" y="431.50"></text></g><g><title>_int_malloc (131,658,698 samples, 3.15%)</title><rect x="43.0406%" y="421" width="3.1522%" height="15" fill="rgb(220,10,11)" fg:x="1797690060" fg:w="131658698"/><text x="43.2906%" y="431.50">_in..</text></g><g><title>alloc_perturb (26,439,994 samples, 0.63%)</title><rect x="45.5598%" y="405" width="0.6330%" height="15" fill="rgb(221,106,17)" fg:x="1902908764" fg:w="26439994"/><text x="45.8098%" y="415.50"></text></g><g><title>_int_realloc (4,211,086 samples, 0.10%)</title><rect x="46.1928%" y="421" width="0.1008%" height="15" fill="rgb(251,142,44)" fg:x="1929348758" fg:w="4211086"/><text x="46.4428%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (273,221,561 samples, 6.54%)</title><rect x="39.8588%" y="485" width="6.5415%" height="15" fill="rgb(238,13,15)" fg:x="1664792937" fg:w="273221561"/><text x="40.1088%" y="495.50">alloc::ra..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (273,221,561 samples, 6.54%)</title><rect x="39.8588%" y="469" width="6.5415%" height="15" fill="rgb(208,107,27)" fg:x="1664792937" fg:w="273221561"/><text x="40.1088%" y="479.50">&lt;alloc::a..</text></g><g><title>alloc::alloc::Global::grow_impl (273,221,561 samples, 6.54%)</title><rect x="39.8588%" y="453" width="6.5415%" height="15" fill="rgb(205,136,37)" fg:x="1664792937" fg:w="273221561"/><text x="40.1088%" y="463.50">alloc::al..</text></g><g><title>alloc::alloc::realloc (273,221,561 samples, 6.54%)</title><rect x="39.8588%" y="437" width="6.5415%" height="15" fill="rgb(250,205,27)" fg:x="1664792937" fg:w="273221561"/><text x="40.1088%" y="447.50">alloc::al..</text></g><g><title>core::fmt::write (4,454,654 samples, 0.11%)</title><rect x="46.2937%" y="421" width="0.1067%" height="15" fill="rgb(210,80,43)" fg:x="1933559844" fg:w="4454654"/><text x="46.5437%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4,454,654 samples, 0.11%)</title><rect x="46.2937%" y="405" width="0.1067%" height="15" fill="rgb(247,160,36)" fg:x="1933559844" fg:w="4454654"/><text x="46.5437%" y="415.50"></text></g><g><title>core::cmp::max (4,445,660 samples, 0.11%)</title><rect x="46.4003%" y="485" width="0.1064%" height="15" fill="rgb(234,13,49)" fg:x="1938014498" fg:w="4445660"/><text x="46.6503%" y="495.50"></text></g><g><title>core::cmp::Ord::max (4,445,660 samples, 0.11%)</title><rect x="46.4003%" y="469" width="0.1064%" height="15" fill="rgb(234,122,0)" fg:x="1938014498" fg:w="4445660"/><text x="46.6503%" y="479.50"></text></g><g><title>core::cmp::max_by (4,445,660 samples, 0.11%)</title><rect x="46.4003%" y="453" width="0.1064%" height="15" fill="rgb(207,146,38)" fg:x="1938014498" fg:w="4445660"/><text x="46.6503%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (373,713,643 samples, 8.95%)</title><rect x="37.6583%" y="549" width="8.9475%" height="15" fill="rgb(207,177,25)" fg:x="1572885328" fg:w="373713643"/><text x="37.9083%" y="559.50">alloc::vec::V..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (373,713,643 samples, 8.95%)</title><rect x="37.6583%" y="533" width="8.9475%" height="15" fill="rgb(211,178,42)" fg:x="1572885328" fg:w="373713643"/><text x="37.9083%" y="543.50">alloc::raw_ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (342,656,122 samples, 8.20%)</title><rect x="38.4019%" y="517" width="8.2039%" height="15" fill="rgb(230,69,54)" fg:x="1603942849" fg:w="342656122"/><text x="38.6519%" y="527.50">alloc::raw_..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (342,656,122 samples, 8.20%)</title><rect x="38.4019%" y="501" width="8.2039%" height="15" fill="rgb(214,135,41)" fg:x="1603942849" fg:w="342656122"/><text x="38.6519%" y="511.50">alloc::raw_..</text></g><g><title>core::fmt::write (4,138,813 samples, 0.10%)</title><rect x="46.5068%" y="485" width="0.0991%" height="15" fill="rgb(237,67,25)" fg:x="1942460158" fg:w="4138813"/><text x="46.7568%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4,138,813 samples, 0.10%)</title><rect x="46.5068%" y="469" width="0.0991%" height="15" fill="rgb(222,189,50)" fg:x="1942460158" fg:w="4138813"/><text x="46.7568%" y="479.50"></text></g><g><title>__GI___libc_malloc (8,424,950 samples, 0.20%)</title><rect x="46.7092%" y="533" width="0.2017%" height="15" fill="rgb(245,148,34)" fg:x="1950916389" fg:w="8424950"/><text x="46.9592%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17,190,314 samples, 0.41%)</title><rect x="46.6059%" y="549" width="0.4116%" height="15" fill="rgb(222,29,6)" fg:x="1946598971" fg:w="17190314"/><text x="46.8559%" y="559.50"></text></g><g><title>__GI___libc_realloc (4,447,946 samples, 0.11%)</title><rect x="46.9109%" y="533" width="0.1065%" height="15" fill="rgb(221,189,43)" fg:x="1959341339" fg:w="4447946"/><text x="47.1609%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (399,792,573 samples, 9.57%)</title><rect x="37.5519%" y="629" width="9.5719%" height="15" fill="rgb(207,36,27)" fg:x="1568441531" fg:w="399792573"/><text x="37.8019%" y="639.50">&lt;alloc::string..</text></g><g><title>alloc::string::String::push_str (395,348,776 samples, 9.47%)</title><rect x="37.6583%" y="613" width="9.4655%" height="15" fill="rgb(217,90,24)" fg:x="1572885328" fg:w="395348776"/><text x="37.9083%" y="623.50">alloc::string:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (395,348,776 samples, 9.47%)</title><rect x="37.6583%" y="597" width="9.4655%" height="15" fill="rgb(224,66,35)" fg:x="1572885328" fg:w="395348776"/><text x="37.9083%" y="607.50">alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (395,348,776 samples, 9.47%)</title><rect x="37.6583%" y="581" width="9.4655%" height="15" fill="rgb(221,13,50)" fg:x="1572885328" fg:w="395348776"/><text x="37.9083%" y="591.50">&lt;alloc::vec::V..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (395,348,776 samples, 9.47%)</title><rect x="37.6583%" y="565" width="9.4655%" height="15" fill="rgb(236,68,49)" fg:x="1572885328" fg:w="395348776"/><text x="37.9083%" y="575.50">alloc::vec::Ve..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4,444,819 samples, 0.11%)</title><rect x="47.0174%" y="549" width="0.1064%" height="15" fill="rgb(229,146,28)" fg:x="1963789285" fg:w="4444819"/><text x="47.2674%" y="559.50"></text></g><g><title>__GI___libc_malloc (8,800,747 samples, 0.21%)</title><rect x="47.1238%" y="629" width="0.2107%" height="15" fill="rgb(225,31,38)" fg:x="1968234104" fg:w="8800747"/><text x="47.3738%" y="639.50"></text></g><g><title>tcache_get (8,800,747 samples, 0.21%)</title><rect x="47.1238%" y="613" width="0.2107%" height="15" fill="rgb(250,208,3)" fg:x="1968234104" fg:w="8800747"/><text x="47.3738%" y="623.50"></text></g><g><title>tcache_get_n (8,800,747 samples, 0.21%)</title><rect x="47.1238%" y="597" width="0.2107%" height="15" fill="rgb(246,54,23)" fg:x="1968234104" fg:w="8800747"/><text x="47.3738%" y="607.50"></text></g><g><title>__GI___libc_realloc (8,897,446 samples, 0.21%)</title><rect x="47.3346%" y="629" width="0.2130%" height="15" fill="rgb(243,76,11)" fg:x="1977034851" fg:w="8897446"/><text x="47.5846%" y="639.50"></text></g><g><title>__rdl_realloc (4,430,170 samples, 0.11%)</title><rect x="47.5476%" y="629" width="0.1061%" height="15" fill="rgb(245,21,50)" fg:x="1985932297" fg:w="4430170"/><text x="47.7976%" y="639.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4,430,170 samples, 0.11%)</title><rect x="47.5476%" y="613" width="0.1061%" height="15" fill="rgb(228,9,43)" fg:x="1985932297" fg:w="4430170"/><text x="47.7976%" y="623.50"></text></g><g><title>_int_free (8,512,242 samples, 0.20%)</title><rect x="47.6537%" y="629" width="0.2038%" height="15" fill="rgb(208,100,47)" fg:x="1990362467" fg:w="8512242"/><text x="47.9037%" y="639.50"></text></g><g><title>_int_malloc (43,331,214 samples, 1.04%)</title><rect x="47.8575%" y="629" width="1.0374%" height="15" fill="rgb(232,26,8)" fg:x="1998874709" fg:w="43331214"/><text x="48.1075%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (4,444,375 samples, 0.11%)</title><rect x="48.8949%" y="629" width="0.1064%" height="15" fill="rgb(216,166,38)" fg:x="2042205923" fg:w="4444375"/><text x="49.1449%" y="639.50"></text></g><g><title>alloc::string::String::with_capacity (4,444,375 samples, 0.11%)</title><rect x="48.8949%" y="613" width="0.1064%" height="15" fill="rgb(251,202,51)" fg:x="2042205923" fg:w="4444375"/><text x="49.1449%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4,082,163 samples, 0.10%)</title><rect x="49.0013%" y="597" width="0.0977%" height="15" fill="rgb(254,216,34)" fg:x="2046650298" fg:w="4082163"/><text x="49.2513%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8,270,227 samples, 0.20%)</title><rect x="49.0013%" y="629" width="0.1980%" height="15" fill="rgb(251,32,27)" fg:x="2046650298" fg:w="8270227"/><text x="49.2513%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8,270,227 samples, 0.20%)</title><rect x="49.0013%" y="613" width="0.1980%" height="15" fill="rgb(208,127,28)" fg:x="2046650298" fg:w="8270227"/><text x="49.2513%" y="623.50"></text></g><g><title>core::alloc::layout::Layout::array (4,188,064 samples, 0.10%)</title><rect x="49.0990%" y="597" width="0.1003%" height="15" fill="rgb(224,137,22)" fg:x="2050732461" fg:w="4188064"/><text x="49.3490%" y="607.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (4,188,064 samples, 0.10%)</title><rect x="49.0990%" y="581" width="0.1003%" height="15" fill="rgb(254,70,32)" fg:x="2050732461" fg:w="4188064"/><text x="49.3490%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (13,320,643 samples, 0.32%)</title><rect x="49.1993%" y="629" width="0.3189%" height="15" fill="rgb(229,75,37)" fg:x="2054920525" fg:w="13320643"/><text x="49.4493%" y="639.50"></text></g><g><title>core::fmt::Formatter::pad (4,078,048 samples, 0.10%)</title><rect x="49.5182%" y="629" width="0.0976%" height="15" fill="rgb(252,64,23)" fg:x="2068241168" fg:w="4078048"/><text x="49.7682%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,341,141 samples, 0.10%)</title><rect x="49.6159%" y="613" width="0.1039%" height="15" fill="rgb(232,162,48)" fg:x="2072319216" fg:w="4341141"/><text x="49.8659%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,341,141 samples, 0.10%)</title><rect x="49.6159%" y="597" width="0.1039%" height="15" fill="rgb(246,160,12)" fg:x="2072319216" fg:w="4341141"/><text x="49.8659%" y="607.50"></text></g><g><title>core::fmt::Formatter::new (4,414,787 samples, 0.11%)</title><rect x="49.7198%" y="613" width="0.1057%" height="15" fill="rgb(247,166,0)" fg:x="2076660357" fg:w="4414787"/><text x="49.9698%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (750,194,548 samples, 17.96%)</title><rect x="31.9704%" y="709" width="17.9613%" height="15" fill="rgb(249,219,21)" fg:x="1335315285" fg:w="750194548"/><text x="32.2204%" y="719.50">alloc::fmt::format::format_i..</text></g><g><title>core::fmt::Write::write_fmt (745,825,018 samples, 17.86%)</title><rect x="32.0750%" y="693" width="17.8567%" height="15" fill="rgb(205,209,3)" fg:x="1339684815" fg:w="745825018"/><text x="32.3250%" y="703.50">core::fmt::Write::write_fmt</text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (745,825,018 samples, 17.86%)</title><rect x="32.0750%" y="677" width="17.8567%" height="15" fill="rgb(243,44,1)" fg:x="1339684815" fg:w="745825018"/><text x="32.3250%" y="687.50">&lt;&amp;mut W as core::fmt::Write:..</text></g><g><title>core::fmt::write (674,807,381 samples, 16.16%)</title><rect x="33.7753%" y="661" width="16.1564%" height="15" fill="rgb(206,159,16)" fg:x="1410702452" fg:w="674807381"/><text x="34.0253%" y="671.50">core::fmt::write</text></g><g><title>core::fmt::rt::Argument::fmt (517,068,302 samples, 12.38%)</title><rect x="37.5519%" y="645" width="12.3798%" height="15" fill="rgb(244,77,30)" fg:x="1568441531" fg:w="517068302"/><text x="37.8019%" y="655.50">core::fmt::rt::Arg..</text></g><g><title>core::fmt::write (13,190,617 samples, 0.32%)</title><rect x="49.6159%" y="629" width="0.3158%" height="15" fill="rgb(218,69,12)" fg:x="2072319216" fg:w="13190617"/><text x="49.8659%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4,434,689 samples, 0.11%)</title><rect x="49.8255%" y="613" width="0.1062%" height="15" fill="rgb(212,87,7)" fg:x="2081075144" fg:w="4434689"/><text x="50.0755%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (1,099,799,797 samples, 26.33%)</title><rect x="23.8123%" y="805" width="26.3316%" height="15" fill="rgb(245,114,25)" fg:x="994574936" fg:w="1099799797"/><text x="24.0623%" y="815.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter:..</text></g><g><title>workload_gen::generate_workload::_{{closure}} (1,099,799,797 samples, 26.33%)</title><rect x="23.8123%" y="789" width="26.3316%" height="15" fill="rgb(210,61,42)" fg:x="994574936" fg:w="1099799797"/><text x="24.0623%" y="799.50">workload_gen::generate_workload::_{{closur..</text></g><g><title>workload_gen::spec::Operation::to_str (780,834,145 samples, 18.69%)</title><rect x="31.4490%" y="773" width="18.6949%" height="15" fill="rgb(211,52,33)" fg:x="1313540588" fg:w="780834145"/><text x="31.6990%" y="783.50">workload_gen::spec::Operation..</text></g><g><title>alloc::fmt::format (780,834,145 samples, 18.69%)</title><rect x="31.4490%" y="757" width="18.6949%" height="15" fill="rgb(234,58,33)" fg:x="1313540588" fg:w="780834145"/><text x="31.6990%" y="767.50">alloc::fmt::format</text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (780,834,145 samples, 18.69%)</title><rect x="31.4490%" y="741" width="18.6949%" height="15" fill="rgb(220,115,36)" fg:x="1313540588" fg:w="780834145"/><text x="31.6990%" y="751.50">core::option::Option&lt;T&gt;::map_..</text></g><g><title>alloc::fmt::format::_{{closure}} (780,834,145 samples, 18.69%)</title><rect x="31.4490%" y="725" width="18.6949%" height="15" fill="rgb(243,153,54)" fg:x="1313540588" fg:w="780834145"/><text x="31.6990%" y="735.50">alloc::fmt::format::_{{closur..</text></g><g><title>unlink_chunk (8,864,900 samples, 0.21%)</title><rect x="49.9317%" y="709" width="0.2122%" height="15" fill="rgb(251,47,18)" fg:x="2085509833" fg:w="8864900"/><text x="50.1817%" y="719.50"></text></g><g><title>ext4_io_submit (4,429,501 samples, 0.11%)</title><rect x="50.1439%" y="565" width="0.1061%" height="15" fill="rgb(242,102,42)" fg:x="2094374733" fg:w="4429501"/><text x="50.3939%" y="575.50"></text></g><g><title>submit_bio (4,429,501 samples, 0.11%)</title><rect x="50.1439%" y="549" width="0.1061%" height="15" fill="rgb(234,31,38)" fg:x="2094374733" fg:w="4429501"/><text x="50.3939%" y="559.50"></text></g><g><title>submit_bio_noacct (4,429,501 samples, 0.11%)</title><rect x="50.1439%" y="533" width="0.1061%" height="15" fill="rgb(221,117,51)" fg:x="2094374733" fg:w="4429501"/><text x="50.3939%" y="543.50"></text></g><g><title>submit_bio_noacct_nocheck (4,429,501 samples, 0.11%)</title><rect x="50.1439%" y="517" width="0.1061%" height="15" fill="rgb(212,20,18)" fg:x="2094374733" fg:w="4429501"/><text x="50.3939%" y="527.50"></text></g><g><title>__submit_bio (4,429,501 samples, 0.11%)</title><rect x="50.1439%" y="501" width="0.1061%" height="15" fill="rgb(245,133,36)" fg:x="2094374733" fg:w="4429501"/><text x="50.3939%" y="511.50"></text></g><g><title>blk_mq_submit_bio (4,429,501 samples, 0.11%)</title><rect x="50.1439%" y="485" width="0.1061%" height="15" fill="rgb(212,6,19)" fg:x="2094374733" fg:w="4429501"/><text x="50.3939%" y="495.50"></text></g><g><title>blk_add_rq_to_plug (4,429,501 samples, 0.11%)</title><rect x="50.1439%" y="469" width="0.1061%" height="15" fill="rgb(218,1,36)" fg:x="2094374733" fg:w="4429501"/><text x="50.3939%" y="479.50"></text></g><g><title>blk_mq_flush_plug_list.part.0 (4,429,501 samples, 0.11%)</title><rect x="50.1439%" y="453" width="0.1061%" height="15" fill="rgb(246,84,54)" fg:x="2094374733" fg:w="4429501"/><text x="50.3939%" y="463.50"></text></g><g><title>nvme_queue_rqs (4,429,501 samples, 0.11%)</title><rect x="50.1439%" y="437" width="0.1061%" height="15" fill="rgb(242,110,6)" fg:x="2094374733" fg:w="4429501"/><text x="50.3939%" y="447.50"></text></g><g><title>nvme_prep_rq.part.0 (4,429,501 samples, 0.11%)</title><rect x="50.1439%" y="421" width="0.1061%" height="15" fill="rgb(214,47,5)" fg:x="2094374733" fg:w="4429501"/><text x="50.3939%" y="431.50"></text></g><g><title>nvme_map_data (4,429,501 samples, 0.11%)</title><rect x="50.1439%" y="405" width="0.1061%" height="15" fill="rgb(218,159,25)" fg:x="2094374733" fg:w="4429501"/><text x="50.3939%" y="415.50"></text></g><g><title>dma_map_sgtable (4,429,501 samples, 0.11%)</title><rect x="50.1439%" y="389" width="0.1061%" height="15" fill="rgb(215,211,28)" fg:x="2094374733" fg:w="4429501"/><text x="50.3939%" y="399.50"></text></g><g><title>__dma_map_sg_attrs (4,429,501 samples, 0.11%)</title><rect x="50.1439%" y="373" width="0.1061%" height="15" fill="rgb(238,59,32)" fg:x="2094374733" fg:w="4429501"/><text x="50.3939%" y="383.50"></text></g><g><title>iommu_dma_map_sg (4,429,501 samples, 0.11%)</title><rect x="50.1439%" y="357" width="0.1061%" height="15" fill="rgb(226,82,3)" fg:x="2094374733" fg:w="4429501"/><text x="50.3939%" y="367.50"></text></g><g><title>iommu_map_sg (4,429,501 samples, 0.11%)</title><rect x="50.1439%" y="341" width="0.1061%" height="15" fill="rgb(240,164,32)" fg:x="2094374733" fg:w="4429501"/><text x="50.3939%" y="351.50"></text></g><g><title>__iommu_map (4,429,501 samples, 0.11%)</title><rect x="50.1439%" y="325" width="0.1061%" height="15" fill="rgb(232,46,7)" fg:x="2094374733" fg:w="4429501"/><text x="50.3939%" y="335.50"></text></g><g><title>amd_iommu_map_pages (4,429,501 samples, 0.11%)</title><rect x="50.1439%" y="309" width="0.1061%" height="15" fill="rgb(229,129,53)" fg:x="2094374733" fg:w="4429501"/><text x="50.3939%" y="319.50"></text></g><g><title>iommu_v1_map_pages (4,429,501 samples, 0.11%)</title><rect x="50.1439%" y="293" width="0.1061%" height="15" fill="rgb(234,188,29)" fg:x="2094374733" fg:w="4429501"/><text x="50.3939%" y="303.50"></text></g><g><title>filemap_get_folios (3,867,280 samples, 0.09%)</title><rect x="50.2500%" y="533" width="0.0926%" height="15" fill="rgb(246,141,4)" fg:x="2098804234" fg:w="3867280"/><text x="50.5000%" y="543.50"></text></g><g><title>filemap_get_folios_tag (3,867,280 samples, 0.09%)</title><rect x="50.2500%" y="517" width="0.0926%" height="15" fill="rgb(229,23,39)" fg:x="2098804234" fg:w="3867280"/><text x="50.5000%" y="527.50"></text></g><g><title>_raw_spin_lock_irqsave (7,845,001 samples, 0.19%)</title><rect x="50.5161%" y="485" width="0.1878%" height="15" fill="rgb(206,12,3)" fg:x="2109919410" fg:w="7845001"/><text x="50.7661%" y="495.50"></text></g><g><title>__raw_spin_lock_irqsave (7,845,001 samples, 0.19%)</title><rect x="50.5161%" y="469" width="0.1878%" height="15" fill="rgb(252,226,20)" fg:x="2109919410" fg:w="7845001"/><text x="50.7661%" y="479.50"></text></g><g><title>native_queued_spin_lock_slowpath (7,845,001 samples, 0.19%)</title><rect x="50.5161%" y="453" width="0.1878%" height="15" fill="rgb(216,123,35)" fg:x="2109919410" fg:w="7845001"/><text x="50.7661%" y="463.50"></text></g><g><title>__folio_start_writeback (18,589,357 samples, 0.45%)</title><rect x="50.3426%" y="501" width="0.4451%" height="15" fill="rgb(212,68,40)" fg:x="2102671514" fg:w="18589357"/><text x="50.5926%" y="511.50"></text></g><g><title>lruvec_stat_mod_folio (3,496,460 samples, 0.08%)</title><rect x="50.7039%" y="485" width="0.0837%" height="15" fill="rgb(254,125,32)" fg:x="2117764411" fg:w="3496460"/><text x="50.9539%" y="495.50"></text></g><g><title>__lruvec_stat_mod_folio (3,496,460 samples, 0.08%)</title><rect x="50.7039%" y="469" width="0.0837%" height="15" fill="rgb(253,97,22)" fg:x="2117764411" fg:w="3496460"/><text x="50.9539%" y="479.50"></text></g><g><title>__mod_lruvec_state (3,496,460 samples, 0.08%)</title><rect x="50.7039%" y="453" width="0.0837%" height="15" fill="rgb(241,101,14)" fg:x="2117764411" fg:w="3496460"/><text x="50.9539%" y="463.50"></text></g><g><title>__mod_memcg_lruvec_state (3,496,460 samples, 0.08%)</title><rect x="50.7039%" y="437" width="0.0837%" height="15" fill="rgb(238,103,29)" fg:x="2117764411" fg:w="3496460"/><text x="50.9539%" y="447.50"></text></g><g><title>__bio_split_to_limits (7,806,263 samples, 0.19%)</title><rect x="50.7876%" y="421" width="0.1869%" height="15" fill="rgb(233,195,47)" fg:x="2121260871" fg:w="7806263"/><text x="51.0376%" y="431.50"></text></g><g><title>bio_split_rw (7,806,263 samples, 0.19%)</title><rect x="50.7876%" y="405" width="0.1869%" height="15" fill="rgb(246,218,30)" fg:x="2121260871" fg:w="7806263"/><text x="51.0376%" y="415.50"></text></g><g><title>ext4_bio_write_folio (34,604,786 samples, 0.83%)</title><rect x="50.3426%" y="517" width="0.8285%" height="15" fill="rgb(219,145,47)" fg:x="2102671514" fg:w="34604786"/><text x="50.5926%" y="527.50"></text></g><g><title>submit_bio (16,015,429 samples, 0.38%)</title><rect x="50.7876%" y="501" width="0.3834%" height="15" fill="rgb(243,12,26)" fg:x="2121260871" fg:w="16015429"/><text x="51.0376%" y="511.50"></text></g><g><title>submit_bio_noacct (16,015,429 samples, 0.38%)</title><rect x="50.7876%" y="485" width="0.3834%" height="15" fill="rgb(214,87,16)" fg:x="2121260871" fg:w="16015429"/><text x="51.0376%" y="495.50"></text></g><g><title>submit_bio_noacct_nocheck (16,015,429 samples, 0.38%)</title><rect x="50.7876%" y="469" width="0.3834%" height="15" fill="rgb(208,99,42)" fg:x="2121260871" fg:w="16015429"/><text x="51.0376%" y="479.50"></text></g><g><title>__submit_bio (16,015,429 samples, 0.38%)</title><rect x="50.7876%" y="453" width="0.3834%" height="15" fill="rgb(253,99,2)" fg:x="2121260871" fg:w="16015429"/><text x="51.0376%" y="463.50"></text></g><g><title>blk_mq_submit_bio (16,015,429 samples, 0.38%)</title><rect x="50.7876%" y="437" width="0.3834%" height="15" fill="rgb(220,168,23)" fg:x="2121260871" fg:w="16015429"/><text x="51.0376%" y="447.50"></text></g><g><title>blk_add_rq_to_plug (8,209,166 samples, 0.20%)</title><rect x="50.9745%" y="421" width="0.1965%" height="15" fill="rgb(242,38,24)" fg:x="2129067134" fg:w="8209166"/><text x="51.2245%" y="431.50"></text></g><g><title>blk_mq_flush_plug_list.part.0 (8,209,166 samples, 0.20%)</title><rect x="50.9745%" y="405" width="0.1965%" height="15" fill="rgb(225,182,9)" fg:x="2129067134" fg:w="8209166"/><text x="51.2245%" y="415.50"></text></g><g><title>nvme_queue_rqs (8,209,166 samples, 0.20%)</title><rect x="50.9745%" y="389" width="0.1965%" height="15" fill="rgb(243,178,37)" fg:x="2129067134" fg:w="8209166"/><text x="51.2245%" y="399.50"></text></g><g><title>nvme_prep_rq.part.0 (8,209,166 samples, 0.20%)</title><rect x="50.9745%" y="373" width="0.1965%" height="15" fill="rgb(232,139,19)" fg:x="2129067134" fg:w="8209166"/><text x="51.2245%" y="383.50"></text></g><g><title>nvme_map_data (8,209,166 samples, 0.20%)</title><rect x="50.9745%" y="357" width="0.1965%" height="15" fill="rgb(225,201,24)" fg:x="2129067134" fg:w="8209166"/><text x="51.2245%" y="367.50"></text></g><g><title>dma_map_sgtable (8,209,166 samples, 0.20%)</title><rect x="50.9745%" y="341" width="0.1965%" height="15" fill="rgb(221,47,46)" fg:x="2129067134" fg:w="8209166"/><text x="51.2245%" y="351.50"></text></g><g><title>__dma_map_sg_attrs (8,209,166 samples, 0.20%)</title><rect x="50.9745%" y="325" width="0.1965%" height="15" fill="rgb(249,23,13)" fg:x="2129067134" fg:w="8209166"/><text x="51.2245%" y="335.50"></text></g><g><title>iommu_dma_map_sg (8,209,166 samples, 0.20%)</title><rect x="50.9745%" y="309" width="0.1965%" height="15" fill="rgb(219,9,5)" fg:x="2129067134" fg:w="8209166"/><text x="51.2245%" y="319.50"></text></g><g><title>iommu_map_sg (8,209,166 samples, 0.20%)</title><rect x="50.9745%" y="293" width="0.1965%" height="15" fill="rgb(254,171,16)" fg:x="2129067134" fg:w="8209166"/><text x="51.2245%" y="303.50"></text></g><g><title>__iommu_map (3,774,150 samples, 0.09%)</title><rect x="51.0807%" y="277" width="0.0904%" height="15" fill="rgb(230,171,20)" fg:x="2133502150" fg:w="3774150"/><text x="51.3307%" y="287.50"></text></g><g><title>amd_iommu_map_pages (3,774,150 samples, 0.09%)</title><rect x="51.0807%" y="261" width="0.0904%" height="15" fill="rgb(210,71,41)" fg:x="2133502150" fg:w="3774150"/><text x="51.3307%" y="271.50"></text></g><g><title>folio_clear_dirty_for_io (4,693,579 samples, 0.11%)</title><rect x="51.1711%" y="517" width="0.1124%" height="15" fill="rgb(206,173,20)" fg:x="2137276300" fg:w="4693579"/><text x="51.4211%" y="527.50"></text></g><g><title>lruvec_stat_mod_folio (4,693,579 samples, 0.11%)</title><rect x="51.1711%" y="501" width="0.1124%" height="15" fill="rgb(233,88,34)" fg:x="2137276300" fg:w="4693579"/><text x="51.4211%" y="511.50"></text></g><g><title>__lruvec_stat_mod_folio (4,693,579 samples, 0.11%)</title><rect x="51.1711%" y="485" width="0.1124%" height="15" fill="rgb(223,209,46)" fg:x="2137276300" fg:w="4693579"/><text x="51.4211%" y="495.50"></text></g><g><title>__mod_lruvec_state (4,693,579 samples, 0.11%)</title><rect x="51.1711%" y="469" width="0.1124%" height="15" fill="rgb(250,43,18)" fg:x="2137276300" fg:w="4693579"/><text x="51.4211%" y="479.50"></text></g><g><title>__mod_memcg_lruvec_state (4,693,579 samples, 0.11%)</title><rect x="51.1711%" y="453" width="0.1124%" height="15" fill="rgb(208,13,10)" fg:x="2137276300" fg:w="4693579"/><text x="51.4211%" y="463.50"></text></g><g><title>mpage_map_and_submit_extent (47,609,197 samples, 1.14%)</title><rect x="50.2500%" y="565" width="1.1399%" height="15" fill="rgb(212,200,36)" fg:x="2098804234" fg:w="47609197"/><text x="50.5000%" y="575.50"></text></g><g><title>mpage_map_and_submit_buffers (47,609,197 samples, 1.14%)</title><rect x="50.2500%" y="549" width="1.1399%" height="15" fill="rgb(225,90,30)" fg:x="2098804234" fg:w="47609197"/><text x="50.5000%" y="559.50"></text></g><g><title>mpage_submit_folio (43,741,917 samples, 1.05%)</title><rect x="50.3426%" y="533" width="1.0473%" height="15" fill="rgb(236,182,39)" fg:x="2102671514" fg:w="43741917"/><text x="50.5926%" y="543.50"></text></g><g><title>srso_alias_safe_ret (4,443,552 samples, 0.11%)</title><rect x="51.2835%" y="517" width="0.1064%" height="15" fill="rgb(212,144,35)" fg:x="2141969879" fg:w="4443552"/><text x="51.5335%" y="527.50"></text></g><g><title>__GI___close (56,471,766 samples, 1.35%)</title><rect x="50.1439%" y="805" width="1.3521%" height="15" fill="rgb(228,63,44)" fg:x="2094374733" fg:w="56471766"/><text x="50.3939%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (56,471,766 samples, 1.35%)</title><rect x="50.1439%" y="789" width="1.3521%" height="15" fill="rgb(228,109,6)" fg:x="2094374733" fg:w="56471766"/><text x="50.3939%" y="799.50"></text></g><g><title>do_syscall_64 (56,471,766 samples, 1.35%)</title><rect x="50.1439%" y="773" width="1.3521%" height="15" fill="rgb(238,117,24)" fg:x="2094374733" fg:w="56471766"/><text x="50.3939%" y="783.50"></text></g><g><title>x64_sys_call (56,471,766 samples, 1.35%)</title><rect x="50.1439%" y="757" width="1.3521%" height="15" fill="rgb(242,26,26)" fg:x="2094374733" fg:w="56471766"/><text x="50.3939%" y="767.50"></text></g><g><title>__x64_sys_close (56,471,766 samples, 1.35%)</title><rect x="50.1439%" y="741" width="1.3521%" height="15" fill="rgb(221,92,48)" fg:x="2094374733" fg:w="56471766"/><text x="50.3939%" y="751.50"></text></g><g><title>__fput_sync (56,471,766 samples, 1.35%)</title><rect x="50.1439%" y="725" width="1.3521%" height="15" fill="rgb(209,209,32)" fg:x="2094374733" fg:w="56471766"/><text x="50.3939%" y="735.50"></text></g><g><title>__fput (56,471,766 samples, 1.35%)</title><rect x="50.1439%" y="709" width="1.3521%" height="15" fill="rgb(221,70,22)" fg:x="2094374733" fg:w="56471766"/><text x="50.3939%" y="719.50"></text></g><g><title>ext4_release_file (56,471,766 samples, 1.35%)</title><rect x="50.1439%" y="693" width="1.3521%" height="15" fill="rgb(248,145,5)" fg:x="2094374733" fg:w="56471766"/><text x="50.3939%" y="703.50"></text></g><g><title>ext4_alloc_da_blocks (56,471,766 samples, 1.35%)</title><rect x="50.1439%" y="677" width="1.3521%" height="15" fill="rgb(226,116,26)" fg:x="2094374733" fg:w="56471766"/><text x="50.3939%" y="687.50"></text></g><g><title>filemap_flush (56,471,766 samples, 1.35%)</title><rect x="50.1439%" y="661" width="1.3521%" height="15" fill="rgb(244,5,17)" fg:x="2094374733" fg:w="56471766"/><text x="50.3939%" y="671.50"></text></g><g><title>__filemap_fdatawrite_range (56,471,766 samples, 1.35%)</title><rect x="50.1439%" y="645" width="1.3521%" height="15" fill="rgb(252,159,33)" fg:x="2094374733" fg:w="56471766"/><text x="50.3939%" y="655.50"></text></g><g><title>filemap_fdatawrite_wbc (56,471,766 samples, 1.35%)</title><rect x="50.1439%" y="629" width="1.3521%" height="15" fill="rgb(206,71,0)" fg:x="2094374733" fg:w="56471766"/><text x="50.3939%" y="639.50"></text></g><g><title>do_writepages (56,471,766 samples, 1.35%)</title><rect x="50.1439%" y="613" width="1.3521%" height="15" fill="rgb(233,118,54)" fg:x="2094374733" fg:w="56471766"/><text x="50.3939%" y="623.50"></text></g><g><title>ext4_writepages (56,471,766 samples, 1.35%)</title><rect x="50.1439%" y="597" width="1.3521%" height="15" fill="rgb(234,83,48)" fg:x="2094374733" fg:w="56471766"/><text x="50.3939%" y="607.50"></text></g><g><title>ext4_do_writepages (56,471,766 samples, 1.35%)</title><rect x="50.1439%" y="581" width="1.3521%" height="15" fill="rgb(228,3,54)" fg:x="2094374733" fg:w="56471766"/><text x="50.3939%" y="591.50"></text></g><g><title>mpage_prepare_extent_to_map (4,433,068 samples, 0.11%)</title><rect x="51.3899%" y="565" width="0.1061%" height="15" fill="rgb(226,155,13)" fg:x="2146413431" fg:w="4433068"/><text x="51.6399%" y="575.50"></text></g><g><title>mpage_process_page_bufs (4,433,068 samples, 0.11%)</title><rect x="51.3899%" y="549" width="0.1061%" height="15" fill="rgb(241,28,37)" fg:x="2146413431" fg:w="4433068"/><text x="51.6399%" y="559.50"></text></g><g><title>__GI___libc_free (39,614,299 samples, 0.95%)</title><rect x="51.4960%" y="757" width="0.9485%" height="15" fill="rgb(233,93,10)" fg:x="2150846499" fg:w="39614299"/><text x="51.7460%" y="767.50"></text></g><g><title>_int_free (39,614,299 samples, 0.95%)</title><rect x="51.4960%" y="741" width="0.9485%" height="15" fill="rgb(225,113,19)" fg:x="2150846499" fg:w="39614299"/><text x="51.7460%" y="751.50"></text></g><g><title>_int_free (4,208,015 samples, 0.10%)</title><rect x="52.4444%" y="757" width="0.1007%" height="15" fill="rgb(241,2,18)" fg:x="2190460798" fg:w="4208015"/><text x="52.6944%" y="767.50"></text></g><g><title>_int_free (20,961,019 samples, 0.50%)</title><rect x="52.8547%" y="629" width="0.5019%" height="15" fill="rgb(228,207,21)" fg:x="2207595204" fg:w="20961019"/><text x="53.1047%" y="639.50"></text></g><g><title>arena_for_chunk (4,349,218 samples, 0.10%)</title><rect x="53.3565%" y="629" width="0.1041%" height="15" fill="rgb(213,211,35)" fg:x="2228556223" fg:w="4349218"/><text x="53.6065%" y="639.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4,439,636 samples, 0.11%)</title><rect x="53.4607%" y="629" width="0.1063%" height="15" fill="rgb(209,83,10)" fg:x="2232905441" fg:w="4439636"/><text x="53.7107%" y="639.50"></text></g><g><title>sysvec_apic_timer_interrupt (4,439,636 samples, 0.11%)</title><rect x="53.4607%" y="613" width="0.1063%" height="15" fill="rgb(209,164,1)" fg:x="2232905441" fg:w="4439636"/><text x="53.7107%" y="623.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4,439,636 samples, 0.11%)</title><rect x="53.4607%" y="597" width="0.1063%" height="15" fill="rgb(213,184,43)" fg:x="2232905441" fg:w="4439636"/><text x="53.7107%" y="607.50"></text></g><g><title>hrtimer_interrupt (4,439,636 samples, 0.11%)</title><rect x="53.4607%" y="581" width="0.1063%" height="15" fill="rgb(231,61,34)" fg:x="2232905441" fg:w="4439636"/><text x="53.7107%" y="591.50"></text></g><g><title>__hrtimer_run_queues (4,439,636 samples, 0.11%)</title><rect x="53.4607%" y="565" width="0.1063%" height="15" fill="rgb(235,75,3)" fg:x="2232905441" fg:w="4439636"/><text x="53.7107%" y="575.50"></text></g><g><title>tick_nohz_highres_handler (4,439,636 samples, 0.11%)</title><rect x="53.4607%" y="549" width="0.1063%" height="15" fill="rgb(220,106,47)" fg:x="2232905441" fg:w="4439636"/><text x="53.7107%" y="559.50"></text></g><g><title>tick_sched_handle (4,439,636 samples, 0.11%)</title><rect x="53.4607%" y="533" width="0.1063%" height="15" fill="rgb(210,196,33)" fg:x="2232905441" fg:w="4439636"/><text x="53.7107%" y="543.50"></text></g><g><title>update_process_times (4,439,636 samples, 0.11%)</title><rect x="53.4607%" y="517" width="0.1063%" height="15" fill="rgb(229,154,42)" fg:x="2232905441" fg:w="4439636"/><text x="53.7107%" y="527.50"></text></g><g><title>scheduler_tick (4,439,636 samples, 0.11%)</title><rect x="53.4607%" y="501" width="0.1063%" height="15" fill="rgb(228,114,26)" fg:x="2232905441" fg:w="4439636"/><text x="53.7107%" y="511.50"></text></g><g><title>perf_event_task_tick (4,439,636 samples, 0.11%)</title><rect x="53.4607%" y="485" width="0.1063%" height="15" fill="rgb(208,144,1)" fg:x="2232905441" fg:w="4439636"/><text x="53.7107%" y="495.50"></text></g><g><title>perf_adjust_freq_unthr_context (4,439,636 samples, 0.11%)</title><rect x="53.4607%" y="469" width="0.1063%" height="15" fill="rgb(239,112,37)" fg:x="2232905441" fg:w="4439636"/><text x="53.7107%" y="479.50"></text></g><g><title>perf_ibs_stop (4,439,636 samples, 0.11%)</title><rect x="53.4607%" y="453" width="0.1063%" height="15" fill="rgb(210,96,50)" fg:x="2232905441" fg:w="4439636"/><text x="53.7107%" y="463.50"></text></g><g><title>__GI___libc_free (51,119,391 samples, 1.22%)</title><rect x="52.5452%" y="645" width="1.2239%" height="15" fill="rgb(222,178,2)" fg:x="2194668813" fg:w="51119391"/><text x="52.7952%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;workload_gen::spec::Operation&gt; (8,443,127 samples, 0.20%)</title><rect x="53.5670%" y="629" width="0.2021%" height="15" fill="rgb(226,74,18)" fg:x="2237345077" fg:w="8443127"/><text x="53.8170%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4,437,777 samples, 0.11%)</title><rect x="53.6629%" y="613" width="0.1063%" height="15" fill="rgb(225,67,54)" fg:x="2241350427" fg:w="4437777"/><text x="53.9129%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4,437,777 samples, 0.11%)</title><rect x="53.6629%" y="597" width="0.1063%" height="15" fill="rgb(251,92,32)" fg:x="2241350427" fg:w="4437777"/><text x="53.9129%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4,437,777 samples, 0.11%)</title><rect x="53.6629%" y="581" width="0.1063%" height="15" fill="rgb(228,149,22)" fg:x="2241350427" fg:w="4437777"/><text x="53.9129%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,437,777 samples, 0.11%)</title><rect x="53.6629%" y="565" width="0.1063%" height="15" fill="rgb(243,54,13)" fg:x="2241350427" fg:w="4437777"/><text x="53.9129%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,437,777 samples, 0.11%)</title><rect x="53.6629%" y="549" width="0.1063%" height="15" fill="rgb(243,180,28)" fg:x="2241350427" fg:w="4437777"/><text x="53.9129%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (4,437,777 samples, 0.11%)</title><rect x="53.6629%" y="533" width="0.1063%" height="15" fill="rgb(208,167,24)" fg:x="2241350427" fg:w="4437777"/><text x="53.9129%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (304,153,789 samples, 7.28%)</title><rect x="51.4960%" y="789" width="7.2821%" height="15" fill="rgb(245,73,45)" fg:x="2150846499" fg:w="304153789"/><text x="51.7460%" y="799.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[workload_gen::spec::Operation]&gt; (304,153,789 samples, 7.28%)</title><rect x="51.4960%" y="773" width="7.2821%" height="15" fill="rgb(237,203,48)" fg:x="2150846499" fg:w="304153789"/><text x="51.7460%" y="783.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;workload_gen::spec::Operation&gt; (260,331,475 samples, 6.23%)</title><rect x="52.5452%" y="757" width="6.2329%" height="15" fill="rgb(211,197,16)" fg:x="2194668813" fg:w="260331475"/><text x="52.7952%" y="767.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (260,331,475 samples, 6.23%)</title><rect x="52.5452%" y="741" width="6.2329%" height="15" fill="rgb(243,99,51)" fg:x="2194668813" fg:w="260331475"/><text x="52.7952%" y="751.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (260,331,475 samples, 6.23%)</title><rect x="52.5452%" y="725" width="6.2329%" height="15" fill="rgb(215,123,29)" fg:x="2194668813" fg:w="260331475"/><text x="52.7952%" y="735.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (260,331,475 samples, 6.23%)</title><rect x="52.5452%" y="709" width="6.2329%" height="15" fill="rgb(239,186,37)" fg:x="2194668813" fg:w="260331475"/><text x="52.7952%" y="719.50">core::pt..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (260,331,475 samples, 6.23%)</title><rect x="52.5452%" y="693" width="6.2329%" height="15" fill="rgb(252,136,39)" fg:x="2194668813" fg:w="260331475"/><text x="52.7952%" y="703.50">&lt;alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (260,331,475 samples, 6.23%)</title><rect x="52.5452%" y="677" width="6.2329%" height="15" fill="rgb(223,213,32)" fg:x="2194668813" fg:w="260331475"/><text x="52.7952%" y="687.50">&lt;alloc::..</text></g><g><title>alloc::alloc::dealloc (260,331,475 samples, 6.23%)</title><rect x="52.5452%" y="661" width="6.2329%" height="15" fill="rgb(233,115,5)" fg:x="2194668813" fg:w="260331475"/><text x="52.7952%" y="671.50">alloc::a..</text></g><g><title>_int_free (209,212,084 samples, 5.01%)</title><rect x="53.7691%" y="645" width="5.0090%" height="15" fill="rgb(207,226,44)" fg:x="2245788204" fg:w="209212084"/><text x="54.0191%" y="655.50">_int_f..</text></g><g><title>get_max_fast (12,385,766 samples, 0.30%)</title><rect x="58.4816%" y="629" width="0.2965%" height="15" fill="rgb(208,126,0)" fg:x="2442614522" fg:w="12385766"/><text x="58.7316%" y="639.50"></text></g><g><title>tlb_finish_mmu (3,570,587 samples, 0.09%)</title><rect x="58.7781%" y="565" width="0.0855%" height="15" fill="rgb(244,66,21)" fg:x="2455000288" fg:w="3570587"/><text x="59.0281%" y="575.50"></text></g><g><title>tlb_batch_pages_flush (3,570,587 samples, 0.09%)</title><rect x="58.7781%" y="549" width="0.0855%" height="15" fill="rgb(222,97,12)" fg:x="2455000288" fg:w="3570587"/><text x="59.0281%" y="559.50"></text></g><g><title>free_pages_and_swap_cache (3,570,587 samples, 0.09%)</title><rect x="58.7781%" y="533" width="0.0855%" height="15" fill="rgb(219,213,19)" fg:x="2455000288" fg:w="3570587"/><text x="59.0281%" y="543.50"></text></g><g><title>release_pages (3,570,587 samples, 0.09%)</title><rect x="58.7781%" y="517" width="0.0855%" height="15" fill="rgb(252,169,30)" fg:x="2455000288" fg:w="3570587"/><text x="59.0281%" y="527.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (3,570,587 samples, 0.09%)</title><rect x="58.7781%" y="501" width="0.0855%" height="15" fill="rgb(206,32,51)" fg:x="2455000288" fg:w="3570587"/><text x="59.0281%" y="511.50"></text></g><g><title>__tlb_remove_page_size (3,719,322 samples, 0.09%)</title><rect x="58.8636%" y="501" width="0.0890%" height="15" fill="rgb(250,172,42)" fg:x="2458570875" fg:w="3719322"/><text x="59.1136%" y="511.50"></text></g><g><title>__mem_cgroup_uncharge_list (3,299,623 samples, 0.08%)</title><rect x="58.9526%" y="421" width="0.0790%" height="15" fill="rgb(209,34,43)" fg:x="2462290197" fg:w="3299623"/><text x="59.2026%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;workload_gen::spec::Operation&gt;&gt; (318,052,221 samples, 7.61%)</title><rect x="51.4960%" y="805" width="7.6149%" height="15" fill="rgb(223,11,35)" fg:x="2150846499" fg:w="318052221"/><text x="51.7460%" y="815.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;workload_gen::spec::Operation&gt;&gt; (13,898,432 samples, 0.33%)</title><rect x="58.7781%" y="789" width="0.3328%" height="15" fill="rgb(251,219,26)" fg:x="2455000288" fg:w="13898432"/><text x="59.0281%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,898,432 samples, 0.33%)</title><rect x="58.7781%" y="773" width="0.3328%" height="15" fill="rgb(231,119,3)" fg:x="2455000288" fg:w="13898432"/><text x="59.0281%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13,898,432 samples, 0.33%)</title><rect x="58.7781%" y="757" width="0.3328%" height="15" fill="rgb(216,97,11)" fg:x="2455000288" fg:w="13898432"/><text x="59.0281%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (13,898,432 samples, 0.33%)</title><rect x="58.7781%" y="741" width="0.3328%" height="15" fill="rgb(223,59,9)" fg:x="2455000288" fg:w="13898432"/><text x="59.0281%" y="751.50"></text></g><g><title>__GI___libc_free (13,898,432 samples, 0.33%)</title><rect x="58.7781%" y="725" width="0.3328%" height="15" fill="rgb(233,93,31)" fg:x="2455000288" fg:w="13898432"/><text x="59.0281%" y="735.50"></text></g><g><title>__GI_munmap (13,898,432 samples, 0.33%)</title><rect x="58.7781%" y="709" width="0.3328%" height="15" fill="rgb(239,81,33)" fg:x="2455000288" fg:w="13898432"/><text x="59.0281%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13,898,432 samples, 0.33%)</title><rect x="58.7781%" y="693" width="0.3328%" height="15" fill="rgb(213,120,34)" fg:x="2455000288" fg:w="13898432"/><text x="59.0281%" y="703.50"></text></g><g><title>do_syscall_64 (13,898,432 samples, 0.33%)</title><rect x="58.7781%" y="677" width="0.3328%" height="15" fill="rgb(243,49,53)" fg:x="2455000288" fg:w="13898432"/><text x="59.0281%" y="687.50"></text></g><g><title>x64_sys_call (13,898,432 samples, 0.33%)</title><rect x="58.7781%" y="661" width="0.3328%" height="15" fill="rgb(247,216,33)" fg:x="2455000288" fg:w="13898432"/><text x="59.0281%" y="671.50"></text></g><g><title>__x64_sys_munmap (13,898,432 samples, 0.33%)</title><rect x="58.7781%" y="645" width="0.3328%" height="15" fill="rgb(226,26,14)" fg:x="2455000288" fg:w="13898432"/><text x="59.0281%" y="655.50"></text></g><g><title>__vm_munmap (13,898,432 samples, 0.33%)</title><rect x="58.7781%" y="629" width="0.3328%" height="15" fill="rgb(215,49,53)" fg:x="2455000288" fg:w="13898432"/><text x="59.0281%" y="639.50"></text></g><g><title>do_vmi_munmap (13,898,432 samples, 0.33%)</title><rect x="58.7781%" y="613" width="0.3328%" height="15" fill="rgb(245,162,40)" fg:x="2455000288" fg:w="13898432"/><text x="59.0281%" y="623.50"></text></g><g><title>do_vmi_align_munmap (13,898,432 samples, 0.33%)</title><rect x="58.7781%" y="597" width="0.3328%" height="15" fill="rgb(229,68,17)" fg:x="2455000288" fg:w="13898432"/><text x="59.0281%" y="607.50"></text></g><g><title>unmap_region (13,898,432 samples, 0.33%)</title><rect x="58.7781%" y="581" width="0.3328%" height="15" fill="rgb(213,182,10)" fg:x="2455000288" fg:w="13898432"/><text x="59.0281%" y="591.50"></text></g><g><title>unmap_vmas (10,327,845 samples, 0.25%)</title><rect x="58.8636%" y="565" width="0.2473%" height="15" fill="rgb(245,125,30)" fg:x="2458570875" fg:w="10327845"/><text x="59.1136%" y="575.50"></text></g><g><title>unmap_single_vma (10,327,845 samples, 0.25%)</title><rect x="58.8636%" y="549" width="0.2473%" height="15" fill="rgb(232,202,2)" fg:x="2458570875" fg:w="10327845"/><text x="59.1136%" y="559.50"></text></g><g><title>unmap_page_range (10,327,845 samples, 0.25%)</title><rect x="58.8636%" y="533" width="0.2473%" height="15" fill="rgb(237,140,51)" fg:x="2458570875" fg:w="10327845"/><text x="59.1136%" y="543.50"></text></g><g><title>zap_pmd_range.isra.0 (10,327,845 samples, 0.25%)</title><rect x="58.8636%" y="517" width="0.2473%" height="15" fill="rgb(236,157,25)" fg:x="2458570875" fg:w="10327845"/><text x="59.1136%" y="527.50"></text></g><g><title>zap_pte_range (6,608,523 samples, 0.16%)</title><rect x="58.9526%" y="501" width="0.1582%" height="15" fill="rgb(219,209,0)" fg:x="2462290197" fg:w="6608523"/><text x="59.2026%" y="511.50"></text></g><g><title>tlb_flush_mmu (6,608,523 samples, 0.16%)</title><rect x="58.9526%" y="485" width="0.1582%" height="15" fill="rgb(240,116,54)" fg:x="2462290197" fg:w="6608523"/><text x="59.2026%" y="495.50"></text></g><g><title>tlb_batch_pages_flush (6,608,523 samples, 0.16%)</title><rect x="58.9526%" y="469" width="0.1582%" height="15" fill="rgb(216,10,36)" fg:x="2462290197" fg:w="6608523"/><text x="59.2026%" y="479.50"></text></g><g><title>free_pages_and_swap_cache (6,608,523 samples, 0.16%)</title><rect x="58.9526%" y="453" width="0.1582%" height="15" fill="rgb(222,72,44)" fg:x="2462290197" fg:w="6608523"/><text x="59.2026%" y="463.50"></text></g><g><title>release_pages (6,608,523 samples, 0.16%)</title><rect x="58.9526%" y="437" width="0.1582%" height="15" fill="rgb(232,159,9)" fg:x="2462290197" fg:w="6608523"/><text x="59.2026%" y="447.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (3,308,900 samples, 0.08%)</title><rect x="59.0316%" y="421" width="0.0792%" height="15" fill="rgb(210,39,32)" fg:x="2465589820" fg:w="3308900"/><text x="59.2816%" y="431.50"></text></g><g><title>__mem_cgroup_uncharge_list (4,453,934 samples, 0.11%)</title><rect x="59.1109%" y="373" width="0.1066%" height="15" fill="rgb(216,194,45)" fg:x="2468898720" fg:w="4453934"/><text x="59.3609%" y="383.50"></text></g><g><title>__rcu_read_lock (4,453,934 samples, 0.11%)</title><rect x="59.1109%" y="357" width="0.1066%" height="15" fill="rgb(218,18,35)" fg:x="2468898720" fg:w="4453934"/><text x="59.3609%" y="367.50"></text></g><g><title>free_unref_page_prepare (4,424,526 samples, 0.11%)</title><rect x="59.2175%" y="357" width="0.1059%" height="15" fill="rgb(207,83,51)" fg:x="2473352654" fg:w="4424526"/><text x="59.4675%" y="367.50"></text></g><g><title>__folio_batch_release (13,321,165 samples, 0.32%)</title><rect x="59.1109%" y="405" width="0.3189%" height="15" fill="rgb(225,63,43)" fg:x="2468898720" fg:w="13321165"/><text x="59.3609%" y="415.50"></text></g><g><title>release_pages (13,321,165 samples, 0.32%)</title><rect x="59.1109%" y="389" width="0.3189%" height="15" fill="rgb(207,57,36)" fg:x="2468898720" fg:w="13321165"/><text x="59.3609%" y="399.50"></text></g><g><title>free_unref_page_list (8,867,231 samples, 0.21%)</title><rect x="59.2175%" y="373" width="0.2123%" height="15" fill="rgb(216,99,33)" fg:x="2473352654" fg:w="8867231"/><text x="59.4675%" y="383.50"></text></g><g><title>get_pfnblock_flags_mask (4,442,705 samples, 0.11%)</title><rect x="59.3234%" y="357" width="0.1064%" height="15" fill="rgb(225,42,16)" fg:x="2477777180" fg:w="4442705"/><text x="59.5734%" y="367.50"></text></g><g><title>delete_from_page_cache_batch (4,436,704 samples, 0.11%)</title><rect x="59.4298%" y="405" width="0.1062%" height="15" fill="rgb(220,201,45)" fg:x="2482219885" fg:w="4436704"/><text x="59.6798%" y="415.50"></text></g><g><title>xas_store (4,436,704 samples, 0.11%)</title><rect x="59.4298%" y="389" width="0.1062%" height="15" fill="rgb(225,33,4)" fg:x="2482219885" fg:w="4436704"/><text x="59.6798%" y="399.50"></text></g><g><title>find_lock_entries (4,445,425 samples, 0.11%)</title><rect x="59.5360%" y="405" width="0.1064%" height="15" fill="rgb(224,33,50)" fg:x="2486656589" fg:w="4445425"/><text x="59.7860%" y="415.50"></text></g><g><title>jbd2_journal_grab_journal_head (4,452,693 samples, 0.11%)</title><rect x="59.8550%" y="309" width="0.1066%" height="15" fill="rgb(246,198,51)" fg:x="2499978354" fg:w="4452693"/><text x="60.1050%" y="319.50"></text></g><g><title>std::fs::File::create (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="805" width="1.0623%" height="15" fill="rgb(205,22,4)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="815.50"></text></g><g><title>std::fs::OpenOptions::open (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="789" width="1.0623%" height="15" fill="rgb(206,3,8)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="799.50"></text></g><g><title>std::fs::OpenOptions::_open (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="773" width="1.0623%" height="15" fill="rgb(251,23,15)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="783.50"></text></g><g><title>std::sys::pal::unix::fs::File::open (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="757" width="1.0623%" height="15" fill="rgb(252,88,28)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="767.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_path_with_cstr (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="741" width="1.0623%" height="15" fill="rgb(212,127,14)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="751.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="725" width="1.0623%" height="15" fill="rgb(247,145,37)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="735.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr_stack (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="709" width="1.0623%" height="15" fill="rgb(209,117,53)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="719.50"></text></g><g><title>std::sys::pal::unix::fs::File::open::_{{closure}} (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="693" width="1.0623%" height="15" fill="rgb(212,90,42)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="703.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="677" width="1.0623%" height="15" fill="rgb(218,164,37)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="687.50"></text></g><g><title>std::sys::pal::unix::cvt_r (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="661" width="1.0623%" height="15" fill="rgb(246,65,34)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="671.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c::_{{closure}} (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="645" width="1.0623%" height="15" fill="rgb(231,100,33)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="655.50"></text></g><g><title>__libc_open64 (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="629" width="1.0623%" height="15" fill="rgb(228,126,14)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="613" width="1.0623%" height="15" fill="rgb(215,173,21)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="623.50"></text></g><g><title>do_syscall_64 (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="597" width="1.0623%" height="15" fill="rgb(210,6,40)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="607.50"></text></g><g><title>x64_sys_call (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="581" width="1.0623%" height="15" fill="rgb(212,48,18)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="591.50"></text></g><g><title>__x64_sys_openat (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="565" width="1.0623%" height="15" fill="rgb(230,214,11)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="575.50"></text></g><g><title>do_sys_openat2 (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="549" width="1.0623%" height="15" fill="rgb(254,105,39)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="559.50"></text></g><g><title>do_filp_open (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="533" width="1.0623%" height="15" fill="rgb(245,158,5)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="543.50"></text></g><g><title>path_openat (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="517" width="1.0623%" height="15" fill="rgb(249,208,11)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="527.50"></text></g><g><title>do_open (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="501" width="1.0623%" height="15" fill="rgb(210,39,28)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="511.50"></text></g><g><title>do_truncate (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="485" width="1.0623%" height="15" fill="rgb(211,56,53)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="495.50"></text></g><g><title>notify_change (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="469" width="1.0623%" height="15" fill="rgb(226,201,30)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="479.50"></text></g><g><title>ext4_setattr (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="453" width="1.0623%" height="15" fill="rgb(239,101,34)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="463.50"></text></g><g><title>truncate_pagecache (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="437" width="1.0623%" height="15" fill="rgb(226,209,5)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="447.50"></text></g><g><title>truncate_inode_pages_range (44,369,768 samples, 1.06%)</title><rect x="59.1109%" y="421" width="1.0623%" height="15" fill="rgb(250,105,47)" fg:x="2468898720" fg:w="44369768"/><text x="59.3609%" y="431.50"></text></g><g><title>truncate_cleanup_folio (22,166,474 samples, 0.53%)</title><rect x="59.6425%" y="405" width="0.5307%" height="15" fill="rgb(230,72,3)" fg:x="2491102014" fg:w="22166474"/><text x="59.8925%" y="415.50"></text></g><g><title>ext4_invalidate_folio (22,166,474 samples, 0.53%)</title><rect x="59.6425%" y="389" width="0.5307%" height="15" fill="rgb(232,218,39)" fg:x="2491102014" fg:w="22166474"/><text x="59.8925%" y="399.50"></text></g><g><title>block_invalidate_folio (22,166,474 samples, 0.53%)</title><rect x="59.6425%" y="373" width="0.5307%" height="15" fill="rgb(248,166,6)" fg:x="2491102014" fg:w="22166474"/><text x="59.8925%" y="383.50"></text></g><g><title>filemap_release_folio (13,290,134 samples, 0.32%)</title><rect x="59.8550%" y="357" width="0.3182%" height="15" fill="rgb(247,89,20)" fg:x="2499978354" fg:w="13290134"/><text x="60.1050%" y="367.50"></text></g><g><title>ext4_release_folio (13,290,134 samples, 0.32%)</title><rect x="59.8550%" y="341" width="0.3182%" height="15" fill="rgb(248,130,54)" fg:x="2499978354" fg:w="13290134"/><text x="60.1050%" y="351.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (13,290,134 samples, 0.32%)</title><rect x="59.8550%" y="325" width="0.3182%" height="15" fill="rgb(234,196,4)" fg:x="2499978354" fg:w="13290134"/><text x="60.1050%" y="335.50"></text></g><g><title>try_to_free_buffers (8,837,441 samples, 0.21%)</title><rect x="59.9616%" y="309" width="0.2116%" height="15" fill="rgb(250,143,31)" fg:x="2504431047" fg:w="8837441"/><text x="60.2116%" y="319.50"></text></g><g><title>free_buffer_head (8,837,441 samples, 0.21%)</title><rect x="59.9616%" y="293" width="0.2116%" height="15" fill="rgb(211,110,34)" fg:x="2504431047" fg:w="8837441"/><text x="60.2116%" y="303.50"></text></g><g><title>kmem_cache_free (8,837,441 samples, 0.21%)</title><rect x="59.9616%" y="277" width="0.2116%" height="15" fill="rgb(215,124,48)" fg:x="2504431047" fg:w="8837441"/><text x="60.2116%" y="287.50"></text></g><g><title>__slab_free (8,837,441 samples, 0.21%)</title><rect x="59.9616%" y="261" width="0.2116%" height="15" fill="rgb(216,46,13)" fg:x="2504431047" fg:w="8837441"/><text x="60.2116%" y="271.50"></text></g><g><title>slab_update_freelist.isra.0 (4,427,973 samples, 0.11%)</title><rect x="60.0672%" y="245" width="0.1060%" height="15" fill="rgb(205,184,25)" fg:x="2508840515" fg:w="4427973"/><text x="60.3172%" y="255.50"></text></g><g><title>malloc_consolidate (76,121,421 samples, 1.82%)</title><rect x="63.8428%" y="613" width="1.8225%" height="15" fill="rgb(228,1,10)" fg:x="2666539916" fg:w="76121421"/><text x="64.0928%" y="623.50">m..</text></g><g><title>malloc_consolidate (237,966,636 samples, 5.70%)</title><rect x="60.1732%" y="629" width="5.6974%" height="15" fill="rgb(213,116,27)" fg:x="2513268488" fg:w="237966636"/><text x="60.4232%" y="639.50">malloc_..</text></g><g><title>unlink_chunk (8,573,787 samples, 0.21%)</title><rect x="65.6653%" y="613" width="0.2053%" height="15" fill="rgb(241,95,50)" fg:x="2742661337" fg:w="8573787"/><text x="65.9153%" y="623.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::new (245,092,395 samples, 5.87%)</title><rect x="60.1732%" y="805" width="5.8681%" height="15" fill="rgb(238,48,32)" fg:x="2513268488" fg:w="245092395"/><text x="60.4232%" y="815.50">std::io..</text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::with_capacity (245,092,395 samples, 5.87%)</title><rect x="60.1732%" y="789" width="5.8681%" height="15" fill="rgb(235,113,49)" fg:x="2513268488" fg:w="245092395"/><text x="60.4232%" y="799.50">std::io..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (245,092,395 samples, 5.87%)</title><rect x="60.1732%" y="773" width="5.8681%" height="15" fill="rgb(205,127,43)" fg:x="2513268488" fg:w="245092395"/><text x="60.4232%" y="783.50">alloc::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (245,092,395 samples, 5.87%)</title><rect x="60.1732%" y="757" width="5.8681%" height="15" fill="rgb(250,162,2)" fg:x="2513268488" fg:w="245092395"/><text x="60.4232%" y="767.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (245,092,395 samples, 5.87%)</title><rect x="60.1732%" y="741" width="5.8681%" height="15" fill="rgb(220,13,41)" fg:x="2513268488" fg:w="245092395"/><text x="60.4232%" y="751.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (245,092,395 samples, 5.87%)</title><rect x="60.1732%" y="725" width="5.8681%" height="15" fill="rgb(249,221,25)" fg:x="2513268488" fg:w="245092395"/><text x="60.4232%" y="735.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (245,092,395 samples, 5.87%)</title><rect x="60.1732%" y="709" width="5.8681%" height="15" fill="rgb(215,208,19)" fg:x="2513268488" fg:w="245092395"/><text x="60.4232%" y="719.50">&lt;alloc:..</text></g><g><title>alloc::alloc::Global::alloc_impl (245,092,395 samples, 5.87%)</title><rect x="60.1732%" y="693" width="5.8681%" height="15" fill="rgb(236,175,2)" fg:x="2513268488" fg:w="245092395"/><text x="60.4232%" y="703.50">alloc::..</text></g><g><title>alloc::alloc::alloc (245,092,395 samples, 5.87%)</title><rect x="60.1732%" y="677" width="5.8681%" height="15" fill="rgb(241,52,2)" fg:x="2513268488" fg:w="245092395"/><text x="60.4232%" y="687.50">alloc::..</text></g><g><title>__GI___libc_malloc (245,092,395 samples, 5.87%)</title><rect x="60.1732%" y="661" width="5.8681%" height="15" fill="rgb(248,140,14)" fg:x="2513268488" fg:w="245092395"/><text x="60.4232%" y="671.50">__GI___..</text></g><g><title>_int_malloc (245,092,395 samples, 5.87%)</title><rect x="60.1732%" y="645" width="5.8681%" height="15" fill="rgb(253,22,42)" fg:x="2513268488" fg:w="245092395"/><text x="60.4232%" y="655.50">_int_ma..</text></g><g><title>unlink_chunk (7,125,759 samples, 0.17%)</title><rect x="65.8706%" y="629" width="0.1706%" height="15" fill="rgb(234,61,47)" fg:x="2751235124" fg:w="7125759"/><text x="66.1206%" y="639.50"></text></g><g><title>core::intrinsics::copy (21,510,448 samples, 0.52%)</title><rect x="66.0412%" y="741" width="0.5150%" height="15" fill="rgb(208,226,15)" fg:x="2758360883" fg:w="21510448"/><text x="66.2912%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (58,720,759 samples, 1.41%)</title><rect x="66.0412%" y="773" width="1.4059%" height="15" fill="rgb(217,221,4)" fg:x="2758360883" fg:w="58720759"/><text x="66.2912%" y="783.50"></text></g><g><title>core::ptr::swap (58,720,759 samples, 1.41%)</title><rect x="66.0412%" y="757" width="1.4059%" height="15" fill="rgb(212,174,34)" fg:x="2758360883" fg:w="58720759"/><text x="66.2912%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37,210,311 samples, 0.89%)</title><rect x="66.5562%" y="741" width="0.8909%" height="15" fill="rgb(253,83,4)" fg:x="2779871331" fg:w="37210311"/><text x="66.8062%" y="751.50"></text></g><g><title>&lt;u32 as rand::distributions::utils::WideningMultiply&gt;::wmul (8,800,419 samples, 0.21%)</title><rect x="67.5423%" y="693" width="0.2107%" height="15" fill="rgb(250,195,49)" fg:x="2821057007" fg:w="8800419"/><text x="67.7923%" y="703.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (4,266,994 samples, 0.10%)</title><rect x="67.7530%" y="693" width="0.1022%" height="15" fill="rgb(241,192,25)" fg:x="2829857426" fg:w="4266994"/><text x="68.0030%" y="703.50"></text></g><g><title>rand_chacha::guts::round (4,099,710 samples, 0.10%)</title><rect x="68.1728%" y="501" width="0.0982%" height="15" fill="rgb(208,124,10)" fg:x="2847389133" fg:w="4099710"/><text x="68.4228%" y="511.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (4,099,710 samples, 0.10%)</title><rect x="68.1728%" y="485" width="0.0982%" height="15" fill="rgb(222,33,0)" fg:x="2847389133" fg:w="4099710"/><text x="68.4228%" y="495.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (4,099,710 samples, 0.10%)</title><rect x="68.1728%" y="469" width="0.0982%" height="15" fill="rgb(234,209,28)" fg:x="2847389133" fg:w="4099710"/><text x="68.4228%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4,099,710 samples, 0.10%)</title><rect x="68.1728%" y="453" width="0.0982%" height="15" fill="rgb(224,11,23)" fg:x="2847389133" fg:w="4099710"/><text x="68.4228%" y="463.50"></text></g><g><title>&lt;[T] as rand::seq::SliceRandom&gt;::shuffle (97,259,740 samples, 2.33%)</title><rect x="66.0412%" y="789" width="2.3286%" height="15" fill="rgb(232,99,1)" fg:x="2758360883" fg:w="97259740"/><text x="66.2912%" y="799.50">&lt;..</text></g><g><title>rand::seq::gen_index (38,538,981 samples, 0.92%)</title><rect x="67.4471%" y="773" width="0.9227%" height="15" fill="rgb(237,95,45)" fg:x="2817081642" fg:w="38538981"/><text x="67.6971%" y="783.50"></text></g><g><title>rand::rng::Rng::gen_range (34,563,616 samples, 0.83%)</title><rect x="67.5423%" y="757" width="0.8275%" height="15" fill="rgb(208,109,11)" fg:x="2821057007" fg:w="34563616"/><text x="67.7923%" y="767.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (34,563,616 samples, 0.83%)</title><rect x="67.5423%" y="741" width="0.8275%" height="15" fill="rgb(216,190,48)" fg:x="2821057007" fg:w="34563616"/><text x="67.7923%" y="751.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (34,563,616 samples, 0.83%)</title><rect x="67.5423%" y="725" width="0.8275%" height="15" fill="rgb(251,171,36)" fg:x="2821057007" fg:w="34563616"/><text x="67.7923%" y="735.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (34,563,616 samples, 0.83%)</title><rect x="67.5423%" y="709" width="0.8275%" height="15" fill="rgb(230,62,22)" fg:x="2821057007" fg:w="34563616"/><text x="67.7923%" y="719.50"></text></g><g><title>rand::rng::Rng::gen (21,496,203 samples, 0.51%)</title><rect x="67.8552%" y="693" width="0.5147%" height="15" fill="rgb(225,114,35)" fg:x="2834124420" fg:w="21496203"/><text x="68.1052%" y="703.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (21,496,203 samples, 0.51%)</title><rect x="67.8552%" y="677" width="0.5147%" height="15" fill="rgb(215,118,42)" fg:x="2834124420" fg:w="21496203"/><text x="68.1052%" y="687.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (21,496,203 samples, 0.51%)</title><rect x="67.8552%" y="661" width="0.5147%" height="15" fill="rgb(243,119,21)" fg:x="2834124420" fg:w="21496203"/><text x="68.1052%" y="671.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (21,496,203 samples, 0.51%)</title><rect x="67.8552%" y="645" width="0.5147%" height="15" fill="rgb(252,177,53)" fg:x="2834124420" fg:w="21496203"/><text x="68.1052%" y="655.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (21,496,203 samples, 0.51%)</title><rect x="67.8552%" y="629" width="0.5147%" height="15" fill="rgb(237,209,29)" fg:x="2834124420" fg:w="21496203"/><text x="68.1052%" y="639.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (8,231,490 samples, 0.20%)</title><rect x="68.1728%" y="613" width="0.1971%" height="15" fill="rgb(212,65,23)" fg:x="2847389133" fg:w="8231490"/><text x="68.4228%" y="623.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (8,231,490 samples, 0.20%)</title><rect x="68.1728%" y="597" width="0.1971%" height="15" fill="rgb(230,222,46)" fg:x="2847389133" fg:w="8231490"/><text x="68.4228%" y="607.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (8,231,490 samples, 0.20%)</title><rect x="68.1728%" y="581" width="0.1971%" height="15" fill="rgb(215,135,32)" fg:x="2847389133" fg:w="8231490"/><text x="68.4228%" y="591.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (8,231,490 samples, 0.20%)</title><rect x="68.1728%" y="565" width="0.1971%" height="15" fill="rgb(246,101,22)" fg:x="2847389133" fg:w="8231490"/><text x="68.4228%" y="575.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (8,231,490 samples, 0.20%)</title><rect x="68.1728%" y="549" width="0.1971%" height="15" fill="rgb(206,107,13)" fg:x="2847389133" fg:w="8231490"/><text x="68.4228%" y="559.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (8,231,490 samples, 0.20%)</title><rect x="68.1728%" y="533" width="0.1971%" height="15" fill="rgb(250,100,44)" fg:x="2847389133" fg:w="8231490"/><text x="68.4228%" y="543.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (8,231,490 samples, 0.20%)</title><rect x="68.1728%" y="517" width="0.1971%" height="15" fill="rgb(231,147,38)" fg:x="2847389133" fg:w="8231490"/><text x="68.4228%" y="527.50"></text></g><g><title>rand_chacha::guts::undiagonalize (4,131,780 samples, 0.10%)</title><rect x="68.2709%" y="501" width="0.0989%" height="15" fill="rgb(229,8,40)" fg:x="2851488843" fg:w="4131780"/><text x="68.5209%" y="511.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (4,131,780 samples, 0.10%)</title><rect x="68.2709%" y="485" width="0.0989%" height="15" fill="rgb(221,135,30)" fg:x="2851488843" fg:w="4131780"/><text x="68.5209%" y="495.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (4,131,780 samples, 0.10%)</title><rect x="68.2709%" y="469" width="0.0989%" height="15" fill="rgb(249,193,18)" fg:x="2851488843" fg:w="4131780"/><text x="68.5209%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4,131,780 samples, 0.10%)</title><rect x="68.2709%" y="453" width="0.0989%" height="15" fill="rgb(209,133,39)" fg:x="2851488843" fg:w="4131780"/><text x="68.5209%" y="463.50"></text></g><g><title>__rcu_read_lock (3,977,283 samples, 0.10%)</title><rect x="69.2935%" y="661" width="0.0952%" height="15" fill="rgb(232,100,14)" fg:x="2894198945" fg:w="3977283"/><text x="69.5435%" y="671.50"></text></g><g><title>__rcu_read_unlock (8,629,232 samples, 0.21%)</title><rect x="69.3887%" y="661" width="0.2066%" height="15" fill="rgb(224,185,1)" fg:x="2898176228" fg:w="8629232"/><text x="69.6387%" y="671.50"></text></g><g><title>__rcu_read_unlock (4,449,559 samples, 0.11%)</title><rect x="70.3803%" y="581" width="0.1065%" height="15" fill="rgb(223,139,8)" fg:x="2939590640" fg:w="4449559"/><text x="70.6303%" y="591.50"></text></g><g><title>mem_cgroup_commit_charge (4,444,326 samples, 0.11%)</title><rect x="70.4868%" y="581" width="0.1064%" height="15" fill="rgb(232,213,38)" fg:x="2944040199" fg:w="4444326"/><text x="70.7368%" y="591.50"></text></g><g><title>__mem_cgroup_charge (17,805,347 samples, 0.43%)</title><rect x="70.2733%" y="597" width="0.4263%" height="15" fill="rgb(207,94,22)" fg:x="2935122366" fg:w="17805347"/><text x="70.5233%" y="607.50"></text></g><g><title>try_charge_memcg (4,443,188 samples, 0.11%)</title><rect x="70.5932%" y="581" width="0.1064%" height="15" fill="rgb(219,183,54)" fg:x="2948484525" fg:w="4443188"/><text x="70.8432%" y="591.50"></text></g><g><title>srso_alias_safe_ret (4,443,188 samples, 0.11%)</title><rect x="70.5932%" y="565" width="0.1064%" height="15" fill="rgb(216,185,54)" fg:x="2948484525" fg:w="4443188"/><text x="70.8432%" y="575.50"></text></g><g><title>_raw_spin_lock (4,443,624 samples, 0.11%)</title><rect x="70.6996%" y="597" width="0.1064%" height="15" fill="rgb(254,217,39)" fg:x="2952927713" fg:w="4443624"/><text x="70.9496%" y="607.50"></text></g><g><title>clear_page_erms (4,439,583 samples, 0.11%)</title><rect x="71.5250%" y="517" width="0.1063%" height="15" fill="rgb(240,178,23)" fg:x="2987401754" fg:w="4439583"/><text x="71.7750%" y="527.50"></text></g><g><title>alloc_anon_folio (38,918,830 samples, 0.93%)</title><rect x="70.8060%" y="597" width="0.9318%" height="15" fill="rgb(218,11,47)" fg:x="2957371337" fg:w="38918830"/><text x="71.0560%" y="607.50"></text></g><g><title>vma_alloc_folio (38,918,830 samples, 0.93%)</title><rect x="70.8060%" y="581" width="0.9318%" height="15" fill="rgb(218,51,51)" fg:x="2957371337" fg:w="38918830"/><text x="71.0560%" y="591.50"></text></g><g><title>alloc_pages_mpol (38,918,830 samples, 0.93%)</title><rect x="70.8060%" y="565" width="0.9318%" height="15" fill="rgb(238,126,27)" fg:x="2957371337" fg:w="38918830"/><text x="71.0560%" y="575.50"></text></g><g><title>__alloc_pages (38,918,830 samples, 0.93%)</title><rect x="70.8060%" y="549" width="0.9318%" height="15" fill="rgb(249,202,22)" fg:x="2957371337" fg:w="38918830"/><text x="71.0560%" y="559.50"></text></g><g><title>get_page_from_freelist (26,471,655 samples, 0.63%)</title><rect x="71.1040%" y="533" width="0.6338%" height="15" fill="rgb(254,195,49)" fg:x="2969818512" fg:w="26471655"/><text x="71.3540%" y="543.50"></text></g><g><title>rmqueue (4,448,830 samples, 0.11%)</title><rect x="71.6313%" y="517" width="0.1065%" height="15" fill="rgb(208,123,14)" fg:x="2991841337" fg:w="4448830"/><text x="71.8813%" y="527.50"></text></g><g><title>__rmqueue_pcplist (4,448,830 samples, 0.11%)</title><rect x="71.6313%" y="501" width="0.1065%" height="15" fill="rgb(224,200,8)" fg:x="2991841337" fg:w="4448830"/><text x="71.8813%" y="511.50"></text></g><g><title>folio_add_lru_vma (8,379,306 samples, 0.20%)</title><rect x="71.7378%" y="597" width="0.2006%" height="15" fill="rgb(217,61,36)" fg:x="2996290167" fg:w="8379306"/><text x="71.9878%" y="607.50"></text></g><g><title>folio_add_lru (8,379,306 samples, 0.20%)</title><rect x="71.7378%" y="581" width="0.2006%" height="15" fill="rgb(206,35,45)" fg:x="2996290167" fg:w="8379306"/><text x="71.9878%" y="591.50"></text></g><g><title>folio_batch_move_lru (8,379,306 samples, 0.20%)</title><rect x="71.7378%" y="565" width="0.2006%" height="15" fill="rgb(217,65,33)" fg:x="2996290167" fg:w="8379306"/><text x="71.9878%" y="575.50"></text></g><g><title>lru_add_fn (8,379,306 samples, 0.20%)</title><rect x="71.7378%" y="549" width="0.2006%" height="15" fill="rgb(222,158,48)" fg:x="2996290167" fg:w="8379306"/><text x="71.9878%" y="559.50"></text></g><g><title>lru_gen_add_folio (8,379,306 samples, 0.20%)</title><rect x="71.7378%" y="533" width="0.2006%" height="15" fill="rgb(254,2,54)" fg:x="2996290167" fg:w="8379306"/><text x="71.9878%" y="543.50"></text></g><g><title>__mod_lruvec_state (4,108,471 samples, 0.10%)</title><rect x="71.8400%" y="517" width="0.0984%" height="15" fill="rgb(250,143,38)" fg:x="3000561002" fg:w="4108471"/><text x="72.0900%" y="527.50"></text></g><g><title>__lruvec_stat_mod_folio (17,780,179 samples, 0.43%)</title><rect x="71.9384%" y="581" width="0.4257%" height="15" fill="rgb(248,25,0)" fg:x="3004669473" fg:w="17780179"/><text x="72.1884%" y="591.50"></text></g><g><title>__mod_lruvec_state (4,447,890 samples, 0.11%)</title><rect x="72.2576%" y="565" width="0.1065%" height="15" fill="rgb(206,152,27)" fg:x="3018001762" fg:w="4447890"/><text x="72.5076%" y="575.50"></text></g><g><title>folio_add_new_anon_rmap (26,188,560 samples, 0.63%)</title><rect x="71.9384%" y="597" width="0.6270%" height="15" fill="rgb(240,77,30)" fg:x="3004669473" fg:w="26188560"/><text x="72.1884%" y="607.50"></text></g><g><title>__rcu_read_unlock (8,408,381 samples, 0.20%)</title><rect x="72.3641%" y="581" width="0.2013%" height="15" fill="rgb(231,5,3)" fg:x="3022449652" fg:w="8408381"/><text x="72.6141%" y="591.50"></text></g><g><title>mem_cgroup_commit_charge (4,430,548 samples, 0.11%)</title><rect x="72.5654%" y="597" width="0.1061%" height="15" fill="rgb(207,226,32)" fg:x="3030858033" fg:w="4430548"/><text x="72.8154%" y="607.50"></text></g><g><title>__handle_mm_fault (132,932,717 samples, 3.18%)</title><rect x="69.5953%" y="645" width="3.1827%" height="15" fill="rgb(222,207,47)" fg:x="2906805460" fg:w="132932717"/><text x="69.8453%" y="655.50">__h..</text></g><g><title>handle_pte_fault (125,037,233 samples, 2.99%)</title><rect x="69.7843%" y="629" width="2.9937%" height="15" fill="rgb(229,115,45)" fg:x="2914700944" fg:w="125037233"/><text x="70.0343%" y="639.50">han..</text></g><g><title>do_anonymous_page (117,104,359 samples, 2.80%)</title><rect x="69.9743%" y="613" width="2.8037%" height="15" fill="rgb(224,191,6)" fg:x="2922633818" fg:w="117104359"/><text x="70.2243%" y="623.50">do..</text></g><g><title>try_charge_memcg (4,449,596 samples, 0.11%)</title><rect x="72.6715%" y="597" width="0.1065%" height="15" fill="rgb(230,227,24)" fg:x="3035288581" fg:w="4449596"/><text x="72.9215%" y="607.50"></text></g><g><title>handle_mm_fault (136,269,881 samples, 3.26%)</title><rect x="69.5953%" y="661" width="3.2626%" height="15" fill="rgb(228,80,19)" fg:x="2906805460" fg:w="136269881"/><text x="69.8453%" y="671.50">han..</text></g><g><title>p4d_offset (3,337,164 samples, 0.08%)</title><rect x="72.7780%" y="645" width="0.0799%" height="15" fill="rgb(247,229,0)" fg:x="3039738177" fg:w="3337164"/><text x="73.0280%" y="655.50"></text></g><g><title>do_user_addr_fault (157,729,587 samples, 3.78%)</title><rect x="69.1878%" y="677" width="3.7764%" height="15" fill="rgb(237,194,15)" fg:x="2889785385" fg:w="157729587"/><text x="69.4378%" y="687.50">do_u..</text></g><g><title>lock_vma_under_rcu (4,439,631 samples, 0.11%)</title><rect x="72.8579%" y="661" width="0.1063%" height="15" fill="rgb(219,203,20)" fg:x="3043075341" fg:w="4439631"/><text x="73.1079%" y="671.50"></text></g><g><title>mas_walk (4,439,631 samples, 0.11%)</title><rect x="72.8579%" y="645" width="0.1063%" height="15" fill="rgb(234,128,8)" fg:x="3043075341" fg:w="4439631"/><text x="73.1079%" y="655.50"></text></g><g><title>irqentry_exit (4,443,751 samples, 0.11%)</title><rect x="72.9642%" y="677" width="0.1064%" height="15" fill="rgb(248,202,8)" fg:x="3047514972" fg:w="4443751"/><text x="73.2142%" y="687.50"></text></g><g><title>fpregs_assert_state_consistent (4,443,751 samples, 0.11%)</title><rect x="72.9642%" y="661" width="0.1064%" height="15" fill="rgb(206,104,37)" fg:x="3047514972" fg:w="4443751"/><text x="73.2142%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (200,785,947 samples, 4.81%)</title><rect x="68.3698%" y="757" width="4.8073%" height="15" fill="rgb(223,8,27)" fg:x="2855620623" fg:w="200785947"/><text x="68.6198%" y="767.50">alloc:..</text></g><g><title>core::intrinsics::copy_nonoverlapping (200,785,947 samples, 4.81%)</title><rect x="68.3698%" y="741" width="4.8073%" height="15" fill="rgb(216,217,28)" fg:x="2855620623" fg:w="200785947"/><text x="68.6198%" y="751.50">core::..</text></g><g><title>__memcpy_avx512_unaligned_erms (200,785,947 samples, 4.81%)</title><rect x="68.3698%" y="725" width="4.8073%" height="15" fill="rgb(249,199,1)" fg:x="2855620623" fg:w="200785947"/><text x="68.6198%" y="735.50">__memc..</text></g><g><title>asm_exc_page_fault (171,061,334 samples, 4.10%)</title><rect x="69.0815%" y="709" width="4.0956%" height="15" fill="rgb(240,85,17)" fg:x="2885345236" fg:w="171061334"/><text x="69.3315%" y="719.50">asm_..</text></g><g><title>exc_page_fault (166,621,185 samples, 3.99%)</title><rect x="69.1878%" y="693" width="3.9893%" height="15" fill="rgb(206,108,45)" fg:x="2889785385" fg:w="166621185"/><text x="69.4378%" y="703.50">exc_..</text></g><g><title>srso_alias_safe_ret (4,447,847 samples, 0.11%)</title><rect x="73.0706%" y="677" width="0.1065%" height="15" fill="rgb(245,210,41)" fg:x="3051958723" fg:w="4447847"/><text x="73.3206%" y="687.50"></text></g><g><title>__tlb_remove_page_size (3,710,555 samples, 0.09%)</title><rect x="73.1771%" y="517" width="0.0888%" height="15" fill="rgb(206,13,37)" fg:x="3056406570" fg:w="3710555"/><text x="73.4271%" y="527.50"></text></g><g><title>folio_remove_rmap_ptes (4,444,437 samples, 0.11%)</title><rect x="73.3618%" y="501" width="0.1064%" height="15" fill="rgb(250,61,18)" fg:x="3064119579" fg:w="4444437"/><text x="73.6118%" y="511.50"></text></g><g><title>__rcu_read_unlock (4,444,437 samples, 0.11%)</title><rect x="73.3618%" y="485" width="0.1064%" height="15" fill="rgb(235,172,48)" fg:x="3064119579" fg:w="4444437"/><text x="73.6118%" y="495.50"></text></g><g><title>__mod_memcg_lruvec_state (3,905,883 samples, 0.09%)</title><rect x="73.5747%" y="405" width="0.0935%" height="15" fill="rgb(249,201,17)" fg:x="3073013915" fg:w="3905883"/><text x="73.8247%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (225,749,797 samples, 5.40%)</title><rect x="68.3698%" y="789" width="5.4049%" height="15" fill="rgb(219,208,6)" fg:x="2855620623" fg:w="225749797"/><text x="68.6198%" y="799.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (225,749,797 samples, 5.40%)</title><rect x="68.3698%" y="773" width="5.4049%" height="15" fill="rgb(248,31,23)" fg:x="2855620623" fg:w="225749797"/><text x="68.6198%" y="783.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;workload_gen::spec::Operation&gt;&gt; (24,963,850 samples, 0.60%)</title><rect x="73.1771%" y="757" width="0.5977%" height="15" fill="rgb(245,15,42)" fg:x="3056406570" fg:w="24963850"/><text x="73.4271%" y="767.50"></text></g><g><title>__GI___libc_free (24,963,850 samples, 0.60%)</title><rect x="73.1771%" y="741" width="0.5977%" height="15" fill="rgb(222,217,39)" fg:x="3056406570" fg:w="24963850"/><text x="73.4271%" y="751.50"></text></g><g><title>__GI_munmap (24,963,850 samples, 0.60%)</title><rect x="73.1771%" y="725" width="0.5977%" height="15" fill="rgb(210,219,27)" fg:x="3056406570" fg:w="24963850"/><text x="73.4271%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (24,963,850 samples, 0.60%)</title><rect x="73.1771%" y="709" width="0.5977%" height="15" fill="rgb(252,166,36)" fg:x="3056406570" fg:w="24963850"/><text x="73.4271%" y="719.50"></text></g><g><title>do_syscall_64 (24,963,850 samples, 0.60%)</title><rect x="73.1771%" y="693" width="0.5977%" height="15" fill="rgb(245,132,34)" fg:x="3056406570" fg:w="24963850"/><text x="73.4271%" y="703.50"></text></g><g><title>x64_sys_call (24,963,850 samples, 0.60%)</title><rect x="73.1771%" y="677" width="0.5977%" height="15" fill="rgb(236,54,3)" fg:x="3056406570" fg:w="24963850"/><text x="73.4271%" y="687.50"></text></g><g><title>__x64_sys_munmap (24,963,850 samples, 0.60%)</title><rect x="73.1771%" y="661" width="0.5977%" height="15" fill="rgb(241,173,43)" fg:x="3056406570" fg:w="24963850"/><text x="73.4271%" y="671.50"></text></g><g><title>__vm_munmap (24,963,850 samples, 0.60%)</title><rect x="73.1771%" y="645" width="0.5977%" height="15" fill="rgb(215,190,9)" fg:x="3056406570" fg:w="24963850"/><text x="73.4271%" y="655.50"></text></g><g><title>do_vmi_munmap (24,963,850 samples, 0.60%)</title><rect x="73.1771%" y="629" width="0.5977%" height="15" fill="rgb(242,101,16)" fg:x="3056406570" fg:w="24963850"/><text x="73.4271%" y="639.50"></text></g><g><title>do_vmi_align_munmap (24,963,850 samples, 0.60%)</title><rect x="73.1771%" y="613" width="0.5977%" height="15" fill="rgb(223,190,21)" fg:x="3056406570" fg:w="24963850"/><text x="73.4271%" y="623.50"></text></g><g><title>unmap_region (24,963,850 samples, 0.60%)</title><rect x="73.1771%" y="597" width="0.5977%" height="15" fill="rgb(215,228,25)" fg:x="3056406570" fg:w="24963850"/><text x="73.4271%" y="607.50"></text></g><g><title>unmap_vmas (24,963,850 samples, 0.60%)</title><rect x="73.1771%" y="581" width="0.5977%" height="15" fill="rgb(225,36,22)" fg:x="3056406570" fg:w="24963850"/><text x="73.4271%" y="591.50"></text></g><g><title>unmap_single_vma (24,963,850 samples, 0.60%)</title><rect x="73.1771%" y="565" width="0.5977%" height="15" fill="rgb(251,106,46)" fg:x="3056406570" fg:w="24963850"/><text x="73.4271%" y="575.50"></text></g><g><title>unmap_page_range (24,963,850 samples, 0.60%)</title><rect x="73.1771%" y="549" width="0.5977%" height="15" fill="rgb(208,90,1)" fg:x="3056406570" fg:w="24963850"/><text x="73.4271%" y="559.50"></text></g><g><title>zap_pmd_range.isra.0 (24,963,850 samples, 0.60%)</title><rect x="73.1771%" y="533" width="0.5977%" height="15" fill="rgb(243,10,4)" fg:x="3056406570" fg:w="24963850"/><text x="73.4271%" y="543.50"></text></g><g><title>zap_pte_range (21,253,295 samples, 0.51%)</title><rect x="73.2659%" y="517" width="0.5089%" height="15" fill="rgb(212,137,27)" fg:x="3060117125" fg:w="21253295"/><text x="73.5159%" y="527.50"></text></g><g><title>tlb_flush_mmu (12,806,404 samples, 0.31%)</title><rect x="73.4682%" y="501" width="0.3066%" height="15" fill="rgb(231,220,49)" fg:x="3068564016" fg:w="12806404"/><text x="73.7182%" y="511.50"></text></g><g><title>tlb_batch_pages_flush (12,806,404 samples, 0.31%)</title><rect x="73.4682%" y="485" width="0.3066%" height="15" fill="rgb(237,96,20)" fg:x="3068564016" fg:w="12806404"/><text x="73.7182%" y="495.50"></text></g><g><title>free_pages_and_swap_cache (12,806,404 samples, 0.31%)</title><rect x="73.4682%" y="469" width="0.3066%" height="15" fill="rgb(239,229,30)" fg:x="3068564016" fg:w="12806404"/><text x="73.7182%" y="479.50"></text></g><g><title>release_pages (12,806,404 samples, 0.31%)</title><rect x="73.4682%" y="453" width="0.3066%" height="15" fill="rgb(219,65,33)" fg:x="3068564016" fg:w="12806404"/><text x="73.7182%" y="463.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (12,806,404 samples, 0.31%)</title><rect x="73.4682%" y="437" width="0.3066%" height="15" fill="rgb(243,134,7)" fg:x="3068564016" fg:w="12806404"/><text x="73.7182%" y="447.50"></text></g><g><title>__mod_lruvec_state (8,356,505 samples, 0.20%)</title><rect x="73.5747%" y="421" width="0.2001%" height="15" fill="rgb(216,177,54)" fg:x="3073013915" fg:w="8356505"/><text x="73.8247%" y="431.50"></text></g><g><title>__mod_node_page_state (4,450,622 samples, 0.11%)</title><rect x="73.6682%" y="405" width="0.1066%" height="15" fill="rgb(211,160,20)" fg:x="3076919798" fg:w="4450622"/><text x="73.9182%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4,448,287 samples, 0.11%)</title><rect x="74.2009%" y="549" width="0.1065%" height="15" fill="rgb(239,85,39)" fg:x="3099169171" fg:w="4448287"/><text x="74.4509%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,448,287 samples, 0.11%)</title><rect x="74.2009%" y="533" width="0.1065%" height="15" fill="rgb(232,125,22)" fg:x="3099169171" fg:w="4448287"/><text x="74.4509%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (38,804,198 samples, 0.93%)</title><rect x="73.9878%" y="629" width="0.9291%" height="15" fill="rgb(244,57,34)" fg:x="3090268164" fg:w="38804198"/><text x="74.2378%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (29,903,191 samples, 0.72%)</title><rect x="74.2009%" y="613" width="0.7159%" height="15" fill="rgb(214,203,32)" fg:x="3099169171" fg:w="29903191"/><text x="74.4509%" y="623.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (29,903,191 samples, 0.72%)</title><rect x="74.2009%" y="597" width="0.7159%" height="15" fill="rgb(207,58,43)" fg:x="3099169171" fg:w="29903191"/><text x="74.4509%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (29,903,191 samples, 0.72%)</title><rect x="74.2009%" y="581" width="0.7159%" height="15" fill="rgb(215,193,15)" fg:x="3099169171" fg:w="29903191"/><text x="74.4509%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (29,903,191 samples, 0.72%)</title><rect x="74.2009%" y="565" width="0.7159%" height="15" fill="rgb(232,15,44)" fg:x="3099169171" fg:w="29903191"/><text x="74.4509%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (25,454,904 samples, 0.61%)</title><rect x="74.3074%" y="549" width="0.6094%" height="15" fill="rgb(212,3,48)" fg:x="3103617458" fg:w="25454904"/><text x="74.5574%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13,336,784 samples, 0.32%)</title><rect x="74.5976%" y="533" width="0.3193%" height="15" fill="rgb(218,128,7)" fg:x="3115735578" fg:w="13336784"/><text x="74.8476%" y="543.50"></text></g><g><title>__rcu_read_lock (4,237,621 samples, 0.10%)</title><rect x="75.1282%" y="437" width="0.1015%" height="15" fill="rgb(226,216,39)" fg:x="3137899860" fg:w="4237621"/><text x="75.3782%" y="447.50"></text></g><g><title>__rcu_read_unlock (4,298,969 samples, 0.10%)</title><rect x="75.2297%" y="437" width="0.1029%" height="15" fill="rgb(243,47,51)" fg:x="3142137481" fg:w="4298969"/><text x="75.4797%" y="447.50"></text></g><g><title>mem_cgroup_commit_charge (4,340,322 samples, 0.10%)</title><rect x="75.3326%" y="437" width="0.1039%" height="15" fill="rgb(241,183,40)" fg:x="3146436450" fg:w="4340322"/><text x="75.5826%" y="447.50"></text></g><g><title>__mem_cgroup_charge (21,668,066 samples, 0.52%)</title><rect x="75.0228%" y="453" width="0.5188%" height="15" fill="rgb(231,217,32)" fg:x="3133495501" fg:w="21668066"/><text x="75.2728%" y="463.50"></text></g><g><title>try_charge_memcg (4,386,795 samples, 0.11%)</title><rect x="75.4365%" y="437" width="0.1050%" height="15" fill="rgb(229,61,38)" fg:x="3150776772" fg:w="4386795"/><text x="75.6865%" y="447.50"></text></g><g><title>consume_stock (4,386,795 samples, 0.11%)</title><rect x="75.4365%" y="421" width="0.1050%" height="15" fill="rgb(225,210,5)" fg:x="3150776772" fg:w="4386795"/><text x="75.6865%" y="431.50"></text></g><g><title>__pte_offset_map_lock (4,166,936 samples, 0.10%)</title><rect x="75.5415%" y="453" width="0.0998%" height="15" fill="rgb(231,79,45)" fg:x="3155163567" fg:w="4166936"/><text x="75.7915%" y="463.50"></text></g><g><title>__pte_offset_map (4,166,936 samples, 0.10%)</title><rect x="75.5415%" y="437" width="0.0998%" height="15" fill="rgb(224,100,7)" fg:x="3155163567" fg:w="4166936"/><text x="75.7915%" y="447.50"></text></g><g><title>do_anonymous_page (34,315,238 samples, 0.82%)</title><rect x="74.9169%" y="469" width="0.8216%" height="15" fill="rgb(241,198,18)" fg:x="3129072362" fg:w="34315238"/><text x="75.1669%" y="479.50"></text></g><g><title>folio_add_lru_vma (4,057,097 samples, 0.10%)</title><rect x="75.6413%" y="453" width="0.0971%" height="15" fill="rgb(252,97,53)" fg:x="3159330503" fg:w="4057097"/><text x="75.8913%" y="463.50"></text></g><g><title>folio_add_lru (4,057,097 samples, 0.10%)</title><rect x="75.6413%" y="437" width="0.0971%" height="15" fill="rgb(220,88,7)" fg:x="3159330503" fg:w="4057097"/><text x="75.8913%" y="447.50"></text></g><g><title>folio_batch_move_lru (4,057,097 samples, 0.10%)</title><rect x="75.6413%" y="421" width="0.0971%" height="15" fill="rgb(213,176,14)" fg:x="3159330503" fg:w="4057097"/><text x="75.8913%" y="431.50"></text></g><g><title>lru_add_fn (4,057,097 samples, 0.10%)</title><rect x="75.6413%" y="405" width="0.0971%" height="15" fill="rgb(246,73,7)" fg:x="3159330503" fg:w="4057097"/><text x="75.8913%" y="415.50"></text></g><g><title>lru_gen_add_folio (4,057,097 samples, 0.10%)</title><rect x="75.6413%" y="389" width="0.0971%" height="15" fill="rgb(245,64,36)" fg:x="3159330503" fg:w="4057097"/><text x="75.8913%" y="399.50"></text></g><g><title>__mod_lruvec_state (4,057,097 samples, 0.10%)</title><rect x="75.6413%" y="373" width="0.0971%" height="15" fill="rgb(245,80,10)" fg:x="3159330503" fg:w="4057097"/><text x="75.8913%" y="383.50"></text></g><g><title>handle_mm_fault (38,755,859 samples, 0.93%)</title><rect x="74.9169%" y="517" width="0.9279%" height="15" fill="rgb(232,107,50)" fg:x="3129072362" fg:w="38755859"/><text x="75.1669%" y="527.50"></text></g><g><title>__handle_mm_fault (38,755,859 samples, 0.93%)</title><rect x="74.9169%" y="501" width="0.9279%" height="15" fill="rgb(253,3,0)" fg:x="3129072362" fg:w="38755859"/><text x="75.1669%" y="511.50"></text></g><g><title>handle_pte_fault (38,755,859 samples, 0.93%)</title><rect x="74.9169%" y="485" width="0.9279%" height="15" fill="rgb(212,99,53)" fg:x="3129072362" fg:w="38755859"/><text x="75.1669%" y="495.50"></text></g><g><title>pte_offset_map_nolock (4,440,621 samples, 0.11%)</title><rect x="75.7384%" y="469" width="0.1063%" height="15" fill="rgb(249,111,54)" fg:x="3163387600" fg:w="4440621"/><text x="75.9884%" y="479.50"></text></g><g><title>do_user_addr_fault (42,674,107 samples, 1.02%)</title><rect x="74.9169%" y="533" width="1.0217%" height="15" fill="rgb(249,55,30)" fg:x="3129072362" fg:w="42674107"/><text x="75.1669%" y="543.50"></text></g><g><title>up_read (3,918,248 samples, 0.09%)</title><rect x="75.8448%" y="517" width="0.0938%" height="15" fill="rgb(237,47,42)" fg:x="3167828221" fg:w="3918248"/><text x="76.0948%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (94,802,823 samples, 2.27%)</title><rect x="73.7748%" y="741" width="2.2698%" height="15" fill="rgb(211,20,18)" fg:x="3081370420" fg:w="94802823"/><text x="74.0248%" y="751.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (94,802,823 samples, 2.27%)</title><rect x="73.7748%" y="725" width="2.2698%" height="15" fill="rgb(231,203,46)" fg:x="3081370420" fg:w="94802823"/><text x="74.0248%" y="735.50">&lt;..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (94,802,823 samples, 2.27%)</title><rect x="73.7748%" y="709" width="2.2698%" height="15" fill="rgb(237,142,3)" fg:x="3081370420" fg:w="94802823"/><text x="74.0248%" y="719.50">&lt;..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (94,802,823 samples, 2.27%)</title><rect x="73.7748%" y="693" width="2.2698%" height="15" fill="rgb(241,107,1)" fg:x="3081370420" fg:w="94802823"/><text x="74.0248%" y="703.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (94,802,823 samples, 2.27%)</title><rect x="73.7748%" y="677" width="2.2698%" height="15" fill="rgb(229,83,13)" fg:x="3081370420" fg:w="94802823"/><text x="74.0248%" y="687.50">c..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (94,802,823 samples, 2.27%)</title><rect x="73.7748%" y="661" width="2.2698%" height="15" fill="rgb(241,91,40)" fg:x="3081370420" fg:w="94802823"/><text x="74.0248%" y="671.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (94,802,823 samples, 2.27%)</title><rect x="73.7748%" y="645" width="2.2698%" height="15" fill="rgb(225,3,45)" fg:x="3081370420" fg:w="94802823"/><text x="74.0248%" y="655.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (47,100,881 samples, 1.13%)</title><rect x="74.9169%" y="629" width="1.1277%" height="15" fill="rgb(244,223,14)" fg:x="3129072362" fg:w="47100881"/><text x="75.1669%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (47,100,881 samples, 1.13%)</title><rect x="74.9169%" y="613" width="1.1277%" height="15" fill="rgb(224,124,37)" fg:x="3129072362" fg:w="47100881"/><text x="75.1669%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (47,100,881 samples, 1.13%)</title><rect x="74.9169%" y="597" width="1.1277%" height="15" fill="rgb(251,171,30)" fg:x="3129072362" fg:w="47100881"/><text x="75.1669%" y="607.50"></text></g><g><title>core::ptr::write (47,100,881 samples, 1.13%)</title><rect x="74.9169%" y="581" width="1.1277%" height="15" fill="rgb(236,46,54)" fg:x="3129072362" fg:w="47100881"/><text x="75.1669%" y="591.50"></text></g><g><title>asm_exc_page_fault (47,100,881 samples, 1.13%)</title><rect x="74.9169%" y="565" width="1.1277%" height="15" fill="rgb(245,213,5)" fg:x="3129072362" fg:w="47100881"/><text x="75.1669%" y="575.50"></text></g><g><title>exc_page_fault (47,100,881 samples, 1.13%)</title><rect x="74.9169%" y="549" width="1.1277%" height="15" fill="rgb(230,144,27)" fg:x="3129072362" fg:w="47100881"/><text x="75.1669%" y="559.50"></text></g><g><title>irqentry_exit (4,426,774 samples, 0.11%)</title><rect x="75.9386%" y="533" width="0.1060%" height="15" fill="rgb(220,86,6)" fg:x="3171746469" fg:w="4426774"/><text x="76.1886%" y="543.50"></text></g><g><title>irqentry_exit_to_user_mode (4,426,774 samples, 0.11%)</title><rect x="75.9386%" y="517" width="0.1060%" height="15" fill="rgb(240,20,13)" fg:x="3171746469" fg:w="4426774"/><text x="76.1886%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (99,238,026 samples, 2.38%)</title><rect x="73.7748%" y="757" width="2.3760%" height="15" fill="rgb(217,89,34)" fg:x="3081370420" fg:w="99238026"/><text x="74.0248%" y="767.50">&lt;h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="741" width="0.1062%" height="15" fill="rgb(229,13,5)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="725" width="0.1062%" height="15" fill="rgb(244,67,35)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="709" width="0.1062%" height="15" fill="rgb(221,40,2)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="693" width="0.1062%" height="15" fill="rgb(237,157,21)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="677" width="0.1062%" height="15" fill="rgb(222,94,11)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="661" width="0.1062%" height="15" fill="rgb(249,113,6)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="645" width="0.1062%" height="15" fill="rgb(238,137,36)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="629" width="0.1062%" height="15" fill="rgb(210,102,26)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="639.50"></text></g><g><title>core::intrinsics::write_bytes (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="613" width="0.1062%" height="15" fill="rgb(218,30,30)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="623.50"></text></g><g><title>__memset_avx512_unaligned_erms (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="597" width="0.1062%" height="15" fill="rgb(214,67,26)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="607.50"></text></g><g><title>asm_exc_page_fault (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="581" width="0.1062%" height="15" fill="rgb(251,9,53)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="591.50"></text></g><g><title>exc_page_fault (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="565" width="0.1062%" height="15" fill="rgb(228,204,25)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="575.50"></text></g><g><title>do_user_addr_fault (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="549" width="0.1062%" height="15" fill="rgb(207,153,8)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="559.50"></text></g><g><title>handle_mm_fault (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="533" width="0.1062%" height="15" fill="rgb(242,9,16)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="543.50"></text></g><g><title>__handle_mm_fault (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="517" width="0.1062%" height="15" fill="rgb(217,211,10)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="527.50"></text></g><g><title>handle_pte_fault (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="501" width="0.1062%" height="15" fill="rgb(219,228,52)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="511.50"></text></g><g><title>do_anonymous_page (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="485" width="0.1062%" height="15" fill="rgb(231,92,29)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="495.50"></text></g><g><title>folio_add_new_anon_rmap (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="469" width="0.1062%" height="15" fill="rgb(232,8,23)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="479.50"></text></g><g><title>__lruvec_stat_mod_folio (4,435,203 samples, 0.11%)</title><rect x="76.0446%" y="453" width="0.1062%" height="15" fill="rgb(216,211,34)" fg:x="3176173243" fg:w="4435203"/><text x="76.2946%" y="463.50"></text></g><g><title>tlb_finish_mmu (4,447,804 samples, 0.11%)</title><rect x="76.1508%" y="597" width="0.1065%" height="15" fill="rgb(236,151,0)" fg:x="3180608446" fg:w="4447804"/><text x="76.4008%" y="607.50"></text></g><g><title>tlb_batch_pages_flush (4,447,804 samples, 0.11%)</title><rect x="76.1508%" y="581" width="0.1065%" height="15" fill="rgb(209,168,3)" fg:x="3180608446" fg:w="4447804"/><text x="76.4008%" y="591.50"></text></g><g><title>free_pages_and_swap_cache (4,447,804 samples, 0.11%)</title><rect x="76.1508%" y="565" width="0.1065%" height="15" fill="rgb(208,129,28)" fg:x="3180608446" fg:w="4447804"/><text x="76.4008%" y="575.50"></text></g><g><title>release_pages (4,447,804 samples, 0.11%)</title><rect x="76.1508%" y="549" width="0.1065%" height="15" fill="rgb(229,78,22)" fg:x="3180608446" fg:w="4447804"/><text x="76.4008%" y="559.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (4,447,804 samples, 0.11%)</title><rect x="76.1508%" y="533" width="0.1065%" height="15" fill="rgb(228,187,13)" fg:x="3180608446" fg:w="4447804"/><text x="76.4008%" y="543.50"></text></g><g><title>__mod_zone_page_state (4,447,804 samples, 0.11%)</title><rect x="76.1508%" y="517" width="0.1065%" height="15" fill="rgb(240,119,24)" fg:x="3180608446" fg:w="4447804"/><text x="76.4008%" y="527.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (108,133,250 samples, 2.59%)</title><rect x="73.7748%" y="789" width="2.5889%" height="15" fill="rgb(209,194,42)" fg:x="3081370420" fg:w="108133250"/><text x="74.0248%" y="799.50">&lt;s..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (108,133,250 samples, 2.59%)</title><rect x="73.7748%" y="773" width="2.5889%" height="15" fill="rgb(247,200,46)" fg:x="3081370420" fg:w="108133250"/><text x="74.0248%" y="783.50">&lt;h..</text></g><g><title>__GI___libc_free (8,895,224 samples, 0.21%)</title><rect x="76.1508%" y="757" width="0.2130%" height="15" fill="rgb(218,76,16)" fg:x="3180608446" fg:w="8895224"/><text x="76.4008%" y="767.50"></text></g><g><title>__GI_munmap (8,895,224 samples, 0.21%)</title><rect x="76.1508%" y="741" width="0.2130%" height="15" fill="rgb(225,21,48)" fg:x="3180608446" fg:w="8895224"/><text x="76.4008%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8,895,224 samples, 0.21%)</title><rect x="76.1508%" y="725" width="0.2130%" height="15" fill="rgb(239,223,50)" fg:x="3180608446" fg:w="8895224"/><text x="76.4008%" y="735.50"></text></g><g><title>do_syscall_64 (8,895,224 samples, 0.21%)</title><rect x="76.1508%" y="709" width="0.2130%" height="15" fill="rgb(244,45,21)" fg:x="3180608446" fg:w="8895224"/><text x="76.4008%" y="719.50"></text></g><g><title>x64_sys_call (8,895,224 samples, 0.21%)</title><rect x="76.1508%" y="693" width="0.2130%" height="15" fill="rgb(232,33,43)" fg:x="3180608446" fg:w="8895224"/><text x="76.4008%" y="703.50"></text></g><g><title>__x64_sys_munmap (8,895,224 samples, 0.21%)</title><rect x="76.1508%" y="677" width="0.2130%" height="15" fill="rgb(209,8,3)" fg:x="3180608446" fg:w="8895224"/><text x="76.4008%" y="687.50"></text></g><g><title>__vm_munmap (8,895,224 samples, 0.21%)</title><rect x="76.1508%" y="661" width="0.2130%" height="15" fill="rgb(214,25,53)" fg:x="3180608446" fg:w="8895224"/><text x="76.4008%" y="671.50"></text></g><g><title>do_vmi_munmap (8,895,224 samples, 0.21%)</title><rect x="76.1508%" y="645" width="0.2130%" height="15" fill="rgb(254,186,54)" fg:x="3180608446" fg:w="8895224"/><text x="76.4008%" y="655.50"></text></g><g><title>do_vmi_align_munmap (8,895,224 samples, 0.21%)</title><rect x="76.1508%" y="629" width="0.2130%" height="15" fill="rgb(208,174,49)" fg:x="3180608446" fg:w="8895224"/><text x="76.4008%" y="639.50"></text></g><g><title>unmap_region (8,895,224 samples, 0.21%)</title><rect x="76.1508%" y="613" width="0.2130%" height="15" fill="rgb(233,191,51)" fg:x="3180608446" fg:w="8895224"/><text x="76.4008%" y="623.50"></text></g><g><title>unmap_vmas (4,447,420 samples, 0.11%)</title><rect x="76.2572%" y="597" width="0.1065%" height="15" fill="rgb(222,134,10)" fg:x="3185056250" fg:w="4447420"/><text x="76.5072%" y="607.50"></text></g><g><title>unmap_single_vma (4,447,420 samples, 0.11%)</title><rect x="76.2572%" y="581" width="0.1065%" height="15" fill="rgb(230,226,20)" fg:x="3185056250" fg:w="4447420"/><text x="76.5072%" y="591.50"></text></g><g><title>unmap_page_range (4,447,420 samples, 0.11%)</title><rect x="76.2572%" y="565" width="0.1065%" height="15" fill="rgb(251,111,25)" fg:x="3185056250" fg:w="4447420"/><text x="76.5072%" y="575.50"></text></g><g><title>zap_pmd_range.isra.0 (4,447,420 samples, 0.11%)</title><rect x="76.2572%" y="549" width="0.1065%" height="15" fill="rgb(224,40,46)" fg:x="3185056250" fg:w="4447420"/><text x="76.5072%" y="559.50"></text></g><g><title>__tlb_remove_page_size (4,447,420 samples, 0.11%)</title><rect x="76.2572%" y="533" width="0.1065%" height="15" fill="rgb(236,108,47)" fg:x="3185056250" fg:w="4447420"/><text x="76.5072%" y="543.50"></text></g><g><title>_raw_spin_trylock (4,440,379 samples, 0.11%)</title><rect x="76.6825%" y="389" width="0.1063%" height="15" fill="rgb(234,93,0)" fg:x="3202818326" fg:w="4440379"/><text x="76.9325%" y="399.50"></text></g><g><title>__alloc_pages (13,333,928 samples, 0.32%)</title><rect x="76.5763%" y="421" width="0.3192%" height="15" fill="rgb(224,213,32)" fg:x="3198380624" fg:w="13333928"/><text x="76.8263%" y="431.50"></text></g><g><title>get_page_from_freelist (13,333,928 samples, 0.32%)</title><rect x="76.5763%" y="405" width="0.3192%" height="15" fill="rgb(251,11,48)" fg:x="3198380624" fg:w="13333928"/><text x="76.8263%" y="415.50"></text></g><g><title>rmqueue (4,455,847 samples, 0.11%)</title><rect x="76.7888%" y="389" width="0.1067%" height="15" fill="rgb(236,173,5)" fg:x="3207258705" fg:w="4455847"/><text x="77.0388%" y="399.50"></text></g><g><title>__rmqueue_pcplist (4,455,847 samples, 0.11%)</title><rect x="76.7888%" y="373" width="0.1067%" height="15" fill="rgb(230,95,12)" fg:x="3207258705" fg:w="4455847"/><text x="77.0388%" y="383.50"></text></g><g><title>alloc_anon_folio (17,762,650 samples, 0.43%)</title><rect x="76.5763%" y="469" width="0.4253%" height="15" fill="rgb(232,209,1)" fg:x="3198380624" fg:w="17762650"/><text x="76.8263%" y="479.50"></text></g><g><title>vma_alloc_folio (17,762,650 samples, 0.43%)</title><rect x="76.5763%" y="453" width="0.4253%" height="15" fill="rgb(232,6,1)" fg:x="3198380624" fg:w="17762650"/><text x="76.8263%" y="463.50"></text></g><g><title>alloc_pages_mpol (17,762,650 samples, 0.43%)</title><rect x="76.5763%" y="437" width="0.4253%" height="15" fill="rgb(210,224,50)" fg:x="3198380624" fg:w="17762650"/><text x="76.8263%" y="447.50"></text></g><g><title>policy_nodemask (4,428,722 samples, 0.11%)</title><rect x="76.8955%" y="421" width="0.1060%" height="15" fill="rgb(228,127,35)" fg:x="3211714552" fg:w="4428722"/><text x="77.1455%" y="431.50"></text></g><g><title>handle_mm_fault (26,637,835 samples, 0.64%)</title><rect x="76.4700%" y="533" width="0.6378%" height="15" fill="rgb(245,102,45)" fg:x="3193944475" fg:w="26637835"/><text x="76.7200%" y="543.50"></text></g><g><title>__handle_mm_fault (26,637,835 samples, 0.64%)</title><rect x="76.4700%" y="517" width="0.6378%" height="15" fill="rgb(214,1,49)" fg:x="3193944475" fg:w="26637835"/><text x="76.7200%" y="527.50"></text></g><g><title>handle_pte_fault (26,637,835 samples, 0.64%)</title><rect x="76.4700%" y="501" width="0.6378%" height="15" fill="rgb(226,163,40)" fg:x="3193944475" fg:w="26637835"/><text x="76.7200%" y="511.50"></text></g><g><title>do_anonymous_page (26,637,835 samples, 0.64%)</title><rect x="76.4700%" y="485" width="0.6378%" height="15" fill="rgb(239,212,28)" fg:x="3193944475" fg:w="26637835"/><text x="76.7200%" y="495.50"></text></g><g><title>folio_add_new_anon_rmap (4,439,036 samples, 0.11%)</title><rect x="77.0015%" y="469" width="0.1063%" height="15" fill="rgb(220,20,13)" fg:x="3216143274" fg:w="4439036"/><text x="77.2515%" y="479.50"></text></g><g><title>srso_alias_safe_ret (4,439,036 samples, 0.11%)</title><rect x="77.0015%" y="453" width="0.1063%" height="15" fill="rgb(210,164,35)" fg:x="3216143274" fg:w="4439036"/><text x="77.2515%" y="463.50"></text></g><g><title>exc_page_fault (31,078,080 samples, 0.74%)</title><rect x="76.4700%" y="565" width="0.7441%" height="15" fill="rgb(248,109,41)" fg:x="3193944475" fg:w="31078080"/><text x="76.7200%" y="575.50"></text></g><g><title>do_user_addr_fault (31,078,080 samples, 0.74%)</title><rect x="76.4700%" y="549" width="0.7441%" height="15" fill="rgb(238,23,50)" fg:x="3193944475" fg:w="31078080"/><text x="76.7200%" y="559.50"></text></g><g><title>lock_vma_under_rcu (4,440,245 samples, 0.11%)</title><rect x="77.1078%" y="533" width="0.1063%" height="15" fill="rgb(211,48,49)" fg:x="3220582310" fg:w="4440245"/><text x="77.3578%" y="543.50"></text></g><g><title>mas_walk (4,440,245 samples, 0.11%)</title><rect x="77.1078%" y="517" width="0.1063%" height="15" fill="rgb(223,36,21)" fg:x="3220582310" fg:w="4440245"/><text x="77.3578%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (39,959,971 samples, 0.96%)</title><rect x="76.3637%" y="629" width="0.9567%" height="15" fill="rgb(207,123,46)" fg:x="3189503670" fg:w="39959971"/><text x="76.6137%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (39,959,971 samples, 0.96%)</title><rect x="76.3637%" y="613" width="0.9567%" height="15" fill="rgb(240,218,32)" fg:x="3189503670" fg:w="39959971"/><text x="76.6137%" y="623.50"></text></g><g><title>core::ptr::write (39,959,971 samples, 0.96%)</title><rect x="76.3637%" y="597" width="0.9567%" height="15" fill="rgb(252,5,43)" fg:x="3189503670" fg:w="39959971"/><text x="76.6137%" y="607.50"></text></g><g><title>asm_exc_page_fault (35,519,166 samples, 0.85%)</title><rect x="76.4700%" y="581" width="0.8504%" height="15" fill="rgb(252,84,19)" fg:x="3193944475" fg:w="35519166"/><text x="76.7200%" y="591.50"></text></g><g><title>irqentry_exit (4,441,086 samples, 0.11%)</title><rect x="77.2141%" y="565" width="0.1063%" height="15" fill="rgb(243,152,39)" fg:x="3225022555" fg:w="4441086"/><text x="77.4641%" y="575.50"></text></g><g><title>__handle_mm_fault (17,795,507 samples, 0.43%)</title><rect x="77.9588%" y="341" width="0.4261%" height="15" fill="rgb(234,160,15)" fg:x="3256125620" fg:w="17795507"/><text x="78.2088%" y="351.50"></text></g><g><title>handle_pte_fault (13,351,140 samples, 0.32%)</title><rect x="78.0652%" y="325" width="0.3197%" height="15" fill="rgb(237,34,20)" fg:x="3260569987" fg:w="13351140"/><text x="78.3152%" y="335.50"></text></g><g><title>do_anonymous_page (13,351,140 samples, 0.32%)</title><rect x="78.0652%" y="309" width="0.3197%" height="15" fill="rgb(229,97,13)" fg:x="3260569987" fg:w="13351140"/><text x="78.3152%" y="319.50"></text></g><g><title>alloc_anon_folio (13,351,140 samples, 0.32%)</title><rect x="78.0652%" y="293" width="0.3197%" height="15" fill="rgb(234,71,50)" fg:x="3260569987" fg:w="13351140"/><text x="78.3152%" y="303.50"></text></g><g><title>vma_alloc_folio (13,351,140 samples, 0.32%)</title><rect x="78.0652%" y="277" width="0.3197%" height="15" fill="rgb(253,155,4)" fg:x="3260569987" fg:w="13351140"/><text x="78.3152%" y="287.50"></text></g><g><title>alloc_pages_mpol (13,351,140 samples, 0.32%)</title><rect x="78.0652%" y="261" width="0.3197%" height="15" fill="rgb(222,185,37)" fg:x="3260569987" fg:w="13351140"/><text x="78.3152%" y="271.50"></text></g><g><title>__alloc_pages (8,912,311 samples, 0.21%)</title><rect x="78.1715%" y="245" width="0.2134%" height="15" fill="rgb(251,177,13)" fg:x="3265008816" fg:w="8912311"/><text x="78.4215%" y="255.50"></text></g><g><title>get_page_from_freelist (8,912,311 samples, 0.21%)</title><rect x="78.1715%" y="229" width="0.2134%" height="15" fill="rgb(250,179,40)" fg:x="3265008816" fg:w="8912311"/><text x="78.4215%" y="239.50"></text></g><g><title>rmqueue (4,441,081 samples, 0.11%)</title><rect x="78.2785%" y="213" width="0.1063%" height="15" fill="rgb(242,44,2)" fg:x="3269480046" fg:w="4441081"/><text x="78.5285%" y="223.50"></text></g><g><title>__rmqueue_pcplist (4,441,081 samples, 0.11%)</title><rect x="78.2785%" y="197" width="0.1063%" height="15" fill="rgb(216,177,13)" fg:x="3269480046" fg:w="4441081"/><text x="78.5285%" y="207.50"></text></g><g><title>rmqueue_bulk (4,441,081 samples, 0.11%)</title><rect x="78.2785%" y="181" width="0.1063%" height="15" fill="rgb(216,106,43)" fg:x="3269480046" fg:w="4441081"/><text x="78.5285%" y="191.50"></text></g><g><title>asm_exc_page_fault (26,680,123 samples, 0.64%)</title><rect x="77.8523%" y="405" width="0.6388%" height="15" fill="rgb(216,183,2)" fg:x="3251677663" fg:w="26680123"/><text x="78.1023%" y="415.50"></text></g><g><title>exc_page_fault (26,680,123 samples, 0.64%)</title><rect x="77.8523%" y="389" width="0.6388%" height="15" fill="rgb(249,75,3)" fg:x="3251677663" fg:w="26680123"/><text x="78.1023%" y="399.50"></text></g><g><title>do_user_addr_fault (26,680,123 samples, 0.64%)</title><rect x="77.8523%" y="373" width="0.6388%" height="15" fill="rgb(219,67,39)" fg:x="3251677663" fg:w="26680123"/><text x="78.1023%" y="383.50"></text></g><g><title>handle_mm_fault (26,680,123 samples, 0.64%)</title><rect x="77.8523%" y="357" width="0.6388%" height="15" fill="rgb(253,228,2)" fg:x="3251677663" fg:w="26680123"/><text x="78.1023%" y="367.50"></text></g><g><title>count_memcg_events.constprop.0 (4,436,659 samples, 0.11%)</title><rect x="78.3849%" y="341" width="0.1062%" height="15" fill="rgb(235,138,27)" fg:x="3273921127" fg:w="4436659"/><text x="78.6349%" y="351.50"></text></g><g><title>__count_memcg_events (4,436,659 samples, 0.11%)</title><rect x="78.3849%" y="325" width="0.1062%" height="15" fill="rgb(236,97,51)" fg:x="3273921127" fg:w="4436659"/><text x="78.6349%" y="335.50"></text></g><g><title>do_brk_flags (4,451,392 samples, 0.11%)</title><rect x="78.4911%" y="261" width="0.1066%" height="15" fill="rgb(240,80,30)" fg:x="3278357786" fg:w="4451392"/><text x="78.7411%" y="271.50"></text></g><g><title>perf_event_mmap (4,451,392 samples, 0.11%)</title><rect x="78.4911%" y="245" width="0.1066%" height="15" fill="rgb(230,178,19)" fg:x="3278357786" fg:w="4451392"/><text x="78.7411%" y="255.50"></text></g><g><title>perf_event_mmap_event (4,451,392 samples, 0.11%)</title><rect x="78.4911%" y="229" width="0.1066%" height="15" fill="rgb(210,190,27)" fg:x="3278357786" fg:w="4451392"/><text x="78.7411%" y="239.50"></text></g><g><title>perf_iterate_sb.constprop.0 (4,451,392 samples, 0.11%)</title><rect x="78.4911%" y="213" width="0.1066%" height="15" fill="rgb(222,107,31)" fg:x="3278357786" fg:w="4451392"/><text x="78.7411%" y="223.50"></text></g><g><title>perf_iterate_ctx (4,451,392 samples, 0.11%)</title><rect x="78.4911%" y="197" width="0.1066%" height="15" fill="rgb(216,127,34)" fg:x="3278357786" fg:w="4451392"/><text x="78.7411%" y="207.50"></text></g><g><title>perf_event_mmap_output (4,451,392 samples, 0.11%)</title><rect x="78.4911%" y="181" width="0.1066%" height="15" fill="rgb(234,116,52)" fg:x="3278357786" fg:w="4451392"/><text x="78.7411%" y="191.50"></text></g><g><title>__GI___libc_malloc (53,337,726 samples, 1.28%)</title><rect x="77.4268%" y="437" width="1.2770%" height="15" fill="rgb(222,124,15)" fg:x="3233907117" fg:w="53337726"/><text x="77.6768%" y="447.50"></text></g><g><title>_int_malloc (48,899,365 samples, 1.17%)</title><rect x="77.5331%" y="421" width="1.1708%" height="15" fill="rgb(231,179,28)" fg:x="3238345478" fg:w="48899365"/><text x="77.7831%" y="431.50"></text></g><g><title>sysmalloc (8,887,057 samples, 0.21%)</title><rect x="78.4911%" y="405" width="0.2128%" height="15" fill="rgb(226,93,45)" fg:x="3278357786" fg:w="8887057"/><text x="78.7411%" y="415.50"></text></g><g><title>__glibc_morecore (8,887,057 samples, 0.21%)</title><rect x="78.4911%" y="389" width="0.2128%" height="15" fill="rgb(215,8,51)" fg:x="3278357786" fg:w="8887057"/><text x="78.7411%" y="399.50"></text></g><g><title>__GI___sbrk (8,887,057 samples, 0.21%)</title><rect x="78.4911%" y="373" width="0.2128%" height="15" fill="rgb(223,106,5)" fg:x="3278357786" fg:w="8887057"/><text x="78.7411%" y="383.50"></text></g><g><title>__brk (8,887,057 samples, 0.21%)</title><rect x="78.4911%" y="357" width="0.2128%" height="15" fill="rgb(250,191,5)" fg:x="3278357786" fg:w="8887057"/><text x="78.7411%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8,887,057 samples, 0.21%)</title><rect x="78.4911%" y="341" width="0.2128%" height="15" fill="rgb(242,132,44)" fg:x="3278357786" fg:w="8887057"/><text x="78.7411%" y="351.50"></text></g><g><title>do_syscall_64 (8,887,057 samples, 0.21%)</title><rect x="78.4911%" y="325" width="0.2128%" height="15" fill="rgb(251,152,29)" fg:x="3278357786" fg:w="8887057"/><text x="78.7411%" y="335.50"></text></g><g><title>x64_sys_call (8,887,057 samples, 0.21%)</title><rect x="78.4911%" y="309" width="0.2128%" height="15" fill="rgb(218,179,5)" fg:x="3278357786" fg:w="8887057"/><text x="78.7411%" y="319.50"></text></g><g><title>__x64_sys_brk (8,887,057 samples, 0.21%)</title><rect x="78.4911%" y="293" width="0.2128%" height="15" fill="rgb(227,67,19)" fg:x="3278357786" fg:w="8887057"/><text x="78.7411%" y="303.50"></text></g><g><title>__do_sys_brk (8,887,057 samples, 0.21%)</title><rect x="78.4911%" y="277" width="0.2128%" height="15" fill="rgb(233,119,31)" fg:x="3278357786" fg:w="8887057"/><text x="78.7411%" y="287.50"></text></g><g><title>up_write (4,435,665 samples, 0.11%)</title><rect x="78.5977%" y="261" width="0.1062%" height="15" fill="rgb(241,120,22)" fg:x="3282809178" fg:w="4435665"/><text x="78.8477%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (62,244,926 samples, 1.49%)</title><rect x="77.3205%" y="613" width="1.4903%" height="15" fill="rgb(224,102,30)" fg:x="3229463641" fg:w="62244926"/><text x="77.5705%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (57,801,450 samples, 1.38%)</title><rect x="77.4268%" y="597" width="1.3839%" height="15" fill="rgb(210,164,37)" fg:x="3233907117" fg:w="57801450"/><text x="77.6768%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (57,801,450 samples, 1.38%)</title><rect x="77.4268%" y="581" width="1.3839%" height="15" fill="rgb(226,191,16)" fg:x="3233907117" fg:w="57801450"/><text x="77.6768%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (57,801,450 samples, 1.38%)</title><rect x="77.4268%" y="565" width="1.3839%" height="15" fill="rgb(214,40,45)" fg:x="3233907117" fg:w="57801450"/><text x="77.6768%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (57,801,450 samples, 1.38%)</title><rect x="77.4268%" y="549" width="1.3839%" height="15" fill="rgb(244,29,26)" fg:x="3233907117" fg:w="57801450"/><text x="77.6768%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (57,801,450 samples, 1.38%)</title><rect x="77.4268%" y="533" width="1.3839%" height="15" fill="rgb(216,16,5)" fg:x="3233907117" fg:w="57801450"/><text x="77.6768%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (57,801,450 samples, 1.38%)</title><rect x="77.4268%" y="517" width="1.3839%" height="15" fill="rgb(249,76,35)" fg:x="3233907117" fg:w="57801450"/><text x="77.6768%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (57,801,450 samples, 1.38%)</title><rect x="77.4268%" y="501" width="1.3839%" height="15" fill="rgb(207,11,44)" fg:x="3233907117" fg:w="57801450"/><text x="77.6768%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (57,801,450 samples, 1.38%)</title><rect x="77.4268%" y="485" width="1.3839%" height="15" fill="rgb(228,190,49)" fg:x="3233907117" fg:w="57801450"/><text x="77.6768%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (57,801,450 samples, 1.38%)</title><rect x="77.4268%" y="469" width="1.3839%" height="15" fill="rgb(214,173,12)" fg:x="3233907117" fg:w="57801450"/><text x="77.6768%" y="479.50"></text></g><g><title>alloc::alloc::alloc (57,801,450 samples, 1.38%)</title><rect x="77.4268%" y="453" width="1.3839%" height="15" fill="rgb(218,26,35)" fg:x="3233907117" fg:w="57801450"/><text x="77.6768%" y="463.50"></text></g><g><title>_int_malloc (4,463,724 samples, 0.11%)</title><rect x="78.7039%" y="437" width="0.1069%" height="15" fill="rgb(220,200,19)" fg:x="3287244843" fg:w="4463724"/><text x="78.9539%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (106,648,508 samples, 2.55%)</title><rect x="76.3637%" y="789" width="2.5534%" height="15" fill="rgb(239,95,49)" fg:x="3189503670" fg:w="106648508"/><text x="76.6137%" y="799.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (106,648,508 samples, 2.55%)</title><rect x="76.3637%" y="773" width="2.5534%" height="15" fill="rgb(235,85,53)" fg:x="3189503670" fg:w="106648508"/><text x="76.6137%" y="783.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (106,648,508 samples, 2.55%)</title><rect x="76.3637%" y="757" width="2.5534%" height="15" fill="rgb(233,133,31)" fg:x="3189503670" fg:w="106648508"/><text x="76.6137%" y="767.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (106,648,508 samples, 2.55%)</title><rect x="76.3637%" y="741" width="2.5534%" height="15" fill="rgb(218,25,20)" fg:x="3189503670" fg:w="106648508"/><text x="76.6137%" y="751.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (106,648,508 samples, 2.55%)</title><rect x="76.3637%" y="725" width="2.5534%" height="15" fill="rgb(252,210,38)" fg:x="3189503670" fg:w="106648508"/><text x="76.6137%" y="735.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (106,648,508 samples, 2.55%)</title><rect x="76.3637%" y="709" width="2.5534%" height="15" fill="rgb(242,134,21)" fg:x="3189503670" fg:w="106648508"/><text x="76.6137%" y="719.50">al..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (106,648,508 samples, 2.55%)</title><rect x="76.3637%" y="693" width="2.5534%" height="15" fill="rgb(213,28,48)" fg:x="3189503670" fg:w="106648508"/><text x="76.6137%" y="703.50">co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (106,648,508 samples, 2.55%)</title><rect x="76.3637%" y="677" width="2.5534%" height="15" fill="rgb(250,196,2)" fg:x="3189503670" fg:w="106648508"/><text x="76.6137%" y="687.50">&lt;c..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (106,648,508 samples, 2.55%)</title><rect x="76.3637%" y="661" width="2.5534%" height="15" fill="rgb(227,5,17)" fg:x="3189503670" fg:w="106648508"/><text x="76.6137%" y="671.50">&lt;c..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (106,648,508 samples, 2.55%)</title><rect x="76.3637%" y="645" width="2.5534%" height="15" fill="rgb(221,226,24)" fg:x="3189503670" fg:w="106648508"/><text x="76.6137%" y="655.50">co..</text></g><g><title>workload_gen::generate_operations::_{{closure}} (66,688,537 samples, 1.60%)</title><rect x="77.3205%" y="629" width="1.5967%" height="15" fill="rgb(211,5,48)" fg:x="3229463641" fg:w="66688537"/><text x="77.5705%" y="639.50"></text></g><g><title>__GI___libc_malloc (4,443,611 samples, 0.11%)</title><rect x="78.8107%" y="613" width="0.1064%" height="15" fill="rgb(219,150,6)" fg:x="3291708567" fg:w="4443611"/><text x="79.0607%" y="623.50"></text></g><g><title>__GI___libc_free (39,508,968 samples, 0.95%)</title><rect x="78.9171%" y="533" width="0.9459%" height="15" fill="rgb(251,46,16)" fg:x="3296152178" fg:w="39508968"/><text x="79.1671%" y="543.50"></text></g><g><title>_int_free (23,691,203 samples, 0.57%)</title><rect x="79.2958%" y="517" width="0.5672%" height="15" fill="rgb(220,204,40)" fg:x="3311969943" fg:w="23691203"/><text x="79.5458%" y="527.50"></text></g><g><title>free_perturb (3,817,448 samples, 0.09%)</title><rect x="79.7717%" y="501" width="0.0914%" height="15" fill="rgb(211,85,2)" fg:x="3331843698" fg:w="3817448"/><text x="80.0217%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (106,771,822 samples, 2.56%)</title><rect x="78.9171%" y="693" width="2.5564%" height="15" fill="rgb(229,17,7)" fg:x="3296152178" fg:w="106771822"/><text x="79.1671%" y="703.50">ha..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (106,771,822 samples, 2.56%)</title><rect x="78.9171%" y="677" width="2.5564%" height="15" fill="rgb(239,72,28)" fg:x="3296152178" fg:w="106771822"/><text x="79.1671%" y="687.50">ha..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (106,771,822 samples, 2.56%)</title><rect x="78.9171%" y="661" width="2.5564%" height="15" fill="rgb(230,47,54)" fg:x="3296152178" fg:w="106771822"/><text x="79.1671%" y="671.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (106,771,822 samples, 2.56%)</title><rect x="78.9171%" y="645" width="2.5564%" height="15" fill="rgb(214,50,8)" fg:x="3296152178" fg:w="106771822"/><text x="79.1671%" y="655.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (106,771,822 samples, 2.56%)</title><rect x="78.9171%" y="629" width="2.5564%" height="15" fill="rgb(216,198,43)" fg:x="3296152178" fg:w="106771822"/><text x="79.1671%" y="639.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (106,771,822 samples, 2.56%)</title><rect x="78.9171%" y="613" width="2.5564%" height="15" fill="rgb(234,20,35)" fg:x="3296152178" fg:w="106771822"/><text x="79.1671%" y="623.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (106,771,822 samples, 2.56%)</title><rect x="78.9171%" y="597" width="2.5564%" height="15" fill="rgb(254,45,19)" fg:x="3296152178" fg:w="106771822"/><text x="79.1671%" y="607.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (106,771,822 samples, 2.56%)</title><rect x="78.9171%" y="581" width="2.5564%" height="15" fill="rgb(219,14,44)" fg:x="3296152178" fg:w="106771822"/><text x="79.1671%" y="591.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (106,771,822 samples, 2.56%)</title><rect x="78.9171%" y="565" width="2.5564%" height="15" fill="rgb(217,220,26)" fg:x="3296152178" fg:w="106771822"/><text x="79.1671%" y="575.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (106,771,822 samples, 2.56%)</title><rect x="78.9171%" y="549" width="2.5564%" height="15" fill="rgb(213,158,28)" fg:x="3296152178" fg:w="106771822"/><text x="79.1671%" y="559.50">al..</text></g><g><title>_int_free (67,262,854 samples, 1.61%)</title><rect x="79.8631%" y="533" width="1.6104%" height="15" fill="rgb(252,51,52)" fg:x="3335661146" fg:w="67262854"/><text x="80.1131%" y="543.50"></text></g><g><title>get_max_fast (3,811,947 samples, 0.09%)</title><rect x="81.3822%" y="517" width="0.0913%" height="15" fill="rgb(246,89,16)" fg:x="3399112053" fg:w="3811947"/><text x="81.6322%" y="527.50"></text></g><g><title>folio_remove_rmap_ptes (4,345,002 samples, 0.10%)</title><rect x="81.5786%" y="405" width="0.1040%" height="15" fill="rgb(216,158,49)" fg:x="3407312677" fg:w="4345002"/><text x="81.8286%" y="415.50"></text></g><g><title>__lruvec_stat_mod_folio (4,345,002 samples, 0.10%)</title><rect x="81.5786%" y="389" width="0.1040%" height="15" fill="rgb(236,107,19)" fg:x="3407312677" fg:w="4345002"/><text x="81.8286%" y="399.50"></text></g><g><title>__mod_lruvec_state (4,345,002 samples, 0.10%)</title><rect x="81.5786%" y="373" width="0.1040%" height="15" fill="rgb(228,185,30)" fg:x="3407312677" fg:w="4345002"/><text x="81.8286%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (119,877,287 samples, 2.87%)</title><rect x="78.9171%" y="789" width="2.8701%" height="15" fill="rgb(246,134,8)" fg:x="3296152178" fg:w="119877287"/><text x="79.1671%" y="799.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (119,877,287 samples, 2.87%)</title><rect x="78.9171%" y="773" width="2.8701%" height="15" fill="rgb(214,143,50)" fg:x="3296152178" fg:w="119877287"/><text x="79.1671%" y="783.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (119,877,287 samples, 2.87%)</title><rect x="78.9171%" y="757" width="2.8701%" height="15" fill="rgb(228,75,8)" fg:x="3296152178" fg:w="119877287"/><text x="79.1671%" y="767.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (119,877,287 samples, 2.87%)</title><rect x="78.9171%" y="741" width="2.8701%" height="15" fill="rgb(207,175,4)" fg:x="3296152178" fg:w="119877287"/><text x="79.1671%" y="751.50">co..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (119,877,287 samples, 2.87%)</title><rect x="78.9171%" y="725" width="2.8701%" height="15" fill="rgb(205,108,24)" fg:x="3296152178" fg:w="119877287"/><text x="79.1671%" y="735.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (119,877,287 samples, 2.87%)</title><rect x="78.9171%" y="709" width="2.8701%" height="15" fill="rgb(244,120,49)" fg:x="3296152178" fg:w="119877287"/><text x="79.1671%" y="719.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (13,105,465 samples, 0.31%)</title><rect x="81.4735%" y="693" width="0.3138%" height="15" fill="rgb(223,47,38)" fg:x="3402924000" fg:w="13105465"/><text x="81.7235%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13,105,465 samples, 0.31%)</title><rect x="81.4735%" y="677" width="0.3138%" height="15" fill="rgb(229,179,11)" fg:x="3402924000" fg:w="13105465"/><text x="81.7235%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (13,105,465 samples, 0.31%)</title><rect x="81.4735%" y="661" width="0.3138%" height="15" fill="rgb(231,122,1)" fg:x="3402924000" fg:w="13105465"/><text x="81.7235%" y="671.50"></text></g><g><title>__GI___libc_free (13,105,465 samples, 0.31%)</title><rect x="81.4735%" y="645" width="0.3138%" height="15" fill="rgb(245,119,9)" fg:x="3402924000" fg:w="13105465"/><text x="81.7235%" y="655.50"></text></g><g><title>__GI_munmap (13,105,465 samples, 0.31%)</title><rect x="81.4735%" y="629" width="0.3138%" height="15" fill="rgb(241,163,25)" fg:x="3402924000" fg:w="13105465"/><text x="81.7235%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13,105,465 samples, 0.31%)</title><rect x="81.4735%" y="613" width="0.3138%" height="15" fill="rgb(217,214,3)" fg:x="3402924000" fg:w="13105465"/><text x="81.7235%" y="623.50"></text></g><g><title>do_syscall_64 (13,105,465 samples, 0.31%)</title><rect x="81.4735%" y="597" width="0.3138%" height="15" fill="rgb(240,86,28)" fg:x="3402924000" fg:w="13105465"/><text x="81.7235%" y="607.50"></text></g><g><title>x64_sys_call (13,105,465 samples, 0.31%)</title><rect x="81.4735%" y="581" width="0.3138%" height="15" fill="rgb(215,47,9)" fg:x="3402924000" fg:w="13105465"/><text x="81.7235%" y="591.50"></text></g><g><title>__x64_sys_munmap (13,105,465 samples, 0.31%)</title><rect x="81.4735%" y="565" width="0.3138%" height="15" fill="rgb(252,25,45)" fg:x="3402924000" fg:w="13105465"/><text x="81.7235%" y="575.50"></text></g><g><title>__vm_munmap (13,105,465 samples, 0.31%)</title><rect x="81.4735%" y="549" width="0.3138%" height="15" fill="rgb(251,164,9)" fg:x="3402924000" fg:w="13105465"/><text x="81.7235%" y="559.50"></text></g><g><title>do_vmi_munmap (13,105,465 samples, 0.31%)</title><rect x="81.4735%" y="533" width="0.3138%" height="15" fill="rgb(233,194,0)" fg:x="3402924000" fg:w="13105465"/><text x="81.7235%" y="543.50"></text></g><g><title>do_vmi_align_munmap (13,105,465 samples, 0.31%)</title><rect x="81.4735%" y="517" width="0.3138%" height="15" fill="rgb(249,111,24)" fg:x="3402924000" fg:w="13105465"/><text x="81.7235%" y="527.50"></text></g><g><title>unmap_region (13,105,465 samples, 0.31%)</title><rect x="81.4735%" y="501" width="0.3138%" height="15" fill="rgb(250,223,3)" fg:x="3402924000" fg:w="13105465"/><text x="81.7235%" y="511.50"></text></g><g><title>unmap_vmas (13,105,465 samples, 0.31%)</title><rect x="81.4735%" y="485" width="0.3138%" height="15" fill="rgb(236,178,37)" fg:x="3402924000" fg:w="13105465"/><text x="81.7235%" y="495.50"></text></g><g><title>unmap_single_vma (13,105,465 samples, 0.31%)</title><rect x="81.4735%" y="469" width="0.3138%" height="15" fill="rgb(241,158,50)" fg:x="3402924000" fg:w="13105465"/><text x="81.7235%" y="479.50"></text></g><g><title>unmap_page_range (13,105,465 samples, 0.31%)</title><rect x="81.4735%" y="453" width="0.3138%" height="15" fill="rgb(213,121,41)" fg:x="3402924000" fg:w="13105465"/><text x="81.7235%" y="463.50"></text></g><g><title>zap_pmd_range.isra.0 (13,105,465 samples, 0.31%)</title><rect x="81.4735%" y="437" width="0.3138%" height="15" fill="rgb(240,92,3)" fg:x="3402924000" fg:w="13105465"/><text x="81.7235%" y="447.50"></text></g><g><title>zap_pte_range (13,105,465 samples, 0.31%)</title><rect x="81.4735%" y="421" width="0.3138%" height="15" fill="rgb(205,123,3)" fg:x="3402924000" fg:w="13105465"/><text x="81.7235%" y="431.50"></text></g><g><title>tlb_flush_mmu (4,371,786 samples, 0.10%)</title><rect x="81.6826%" y="405" width="0.1047%" height="15" fill="rgb(205,97,47)" fg:x="3411657679" fg:w="4371786"/><text x="81.9326%" y="415.50"></text></g><g><title>tlb_batch_pages_flush (4,371,786 samples, 0.10%)</title><rect x="81.6826%" y="389" width="0.1047%" height="15" fill="rgb(247,152,14)" fg:x="3411657679" fg:w="4371786"/><text x="81.9326%" y="399.50"></text></g><g><title>free_pages_and_swap_cache (4,371,786 samples, 0.10%)</title><rect x="81.6826%" y="373" width="0.1047%" height="15" fill="rgb(248,195,53)" fg:x="3411657679" fg:w="4371786"/><text x="81.9326%" y="383.50"></text></g><g><title>release_pages (4,371,786 samples, 0.10%)</title><rect x="81.6826%" y="357" width="0.1047%" height="15" fill="rgb(226,201,16)" fg:x="3411657679" fg:w="4371786"/><text x="81.9326%" y="367.50"></text></g><g><title>free_unref_page_list (4,371,786 samples, 0.10%)</title><rect x="81.6826%" y="341" width="0.1047%" height="15" fill="rgb(205,98,0)" fg:x="3411657679" fg:w="4371786"/><text x="81.9326%" y="351.50"></text></g><g><title>consume_stock (3,809,716 samples, 0.09%)</title><rect x="82.8100%" y="437" width="0.0912%" height="15" fill="rgb(214,191,48)" fg:x="3458745507" fg:w="3809716"/><text x="83.0600%" y="447.50"></text></g><g><title>__mem_cgroup_charge (17,089,950 samples, 0.41%)</title><rect x="82.5984%" y="453" width="0.4092%" height="15" fill="rgb(237,112,39)" fg:x="3449910748" fg:w="17089950"/><text x="82.8484%" y="463.50"></text></g><g><title>try_charge_memcg (4,445,475 samples, 0.11%)</title><rect x="82.9012%" y="437" width="0.1064%" height="15" fill="rgb(247,203,27)" fg:x="3462555223" fg:w="4445475"/><text x="83.1512%" y="447.50"></text></g><g><title>alloc_anon_folio (8,604,331 samples, 0.21%)</title><rect x="83.0076%" y="453" width="0.2060%" height="15" fill="rgb(235,124,28)" fg:x="3467000698" fg:w="8604331"/><text x="83.2576%" y="463.50"></text></g><g><title>vma_alloc_folio (8,604,331 samples, 0.21%)</title><rect x="83.0076%" y="437" width="0.2060%" height="15" fill="rgb(208,207,46)" fg:x="3467000698" fg:w="8604331"/><text x="83.2576%" y="447.50"></text></g><g><title>alloc_pages_mpol (8,604,331 samples, 0.21%)</title><rect x="83.0076%" y="421" width="0.2060%" height="15" fill="rgb(234,176,4)" fg:x="3467000698" fg:w="8604331"/><text x="83.2576%" y="431.50"></text></g><g><title>__alloc_pages (8,604,331 samples, 0.21%)</title><rect x="83.0076%" y="405" width="0.2060%" height="15" fill="rgb(230,133,28)" fg:x="3467000698" fg:w="8604331"/><text x="83.2576%" y="415.50"></text></g><g><title>get_page_from_freelist (8,604,331 samples, 0.21%)</title><rect x="83.0076%" y="389" width="0.2060%" height="15" fill="rgb(211,137,40)" fg:x="3467000698" fg:w="8604331"/><text x="83.2576%" y="399.50"></text></g><g><title>__mod_lruvec_state (8,912,376 samples, 0.21%)</title><rect x="83.2136%" y="373" width="0.2134%" height="15" fill="rgb(254,35,13)" fg:x="3475605029" fg:w="8912376"/><text x="83.4636%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (4,454,712 samples, 0.11%)</title><rect x="83.3203%" y="357" width="0.1067%" height="15" fill="rgb(225,49,51)" fg:x="3480062693" fg:w="4454712"/><text x="83.5703%" y="367.50"></text></g><g><title>folio_add_lru_vma (13,365,282 samples, 0.32%)</title><rect x="83.2136%" y="453" width="0.3200%" height="15" fill="rgb(251,10,15)" fg:x="3475605029" fg:w="13365282"/><text x="83.4636%" y="463.50"></text></g><g><title>folio_add_lru (13,365,282 samples, 0.32%)</title><rect x="83.2136%" y="437" width="0.3200%" height="15" fill="rgb(228,207,15)" fg:x="3475605029" fg:w="13365282"/><text x="83.4636%" y="447.50"></text></g><g><title>folio_batch_move_lru (13,365,282 samples, 0.32%)</title><rect x="83.2136%" y="421" width="0.3200%" height="15" fill="rgb(241,99,19)" fg:x="3475605029" fg:w="13365282"/><text x="83.4636%" y="431.50"></text></g><g><title>lru_add_fn (13,365,282 samples, 0.32%)</title><rect x="83.2136%" y="405" width="0.3200%" height="15" fill="rgb(207,104,49)" fg:x="3475605029" fg:w="13365282"/><text x="83.4636%" y="415.50"></text></g><g><title>lru_gen_add_folio (13,365,282 samples, 0.32%)</title><rect x="83.2136%" y="389" width="0.3200%" height="15" fill="rgb(234,99,18)" fg:x="3475605029" fg:w="13365282"/><text x="83.4636%" y="399.50"></text></g><g><title>__mod_zone_page_state (4,452,906 samples, 0.11%)</title><rect x="83.4270%" y="373" width="0.1066%" height="15" fill="rgb(213,191,49)" fg:x="3484517405" fg:w="4452906"/><text x="83.6770%" y="383.50"></text></g><g><title>do_anonymous_page (52,379,708 samples, 1.25%)</title><rect x="82.3852%" y="469" width="1.2541%" height="15" fill="rgb(210,226,19)" fg:x="3441003420" fg:w="52379708"/><text x="82.6352%" y="479.50"></text></g><g><title>folio_add_new_anon_rmap (4,412,817 samples, 0.11%)</title><rect x="83.5336%" y="453" width="0.1057%" height="15" fill="rgb(229,97,18)" fg:x="3488970311" fg:w="4412817"/><text x="83.7836%" y="463.50"></text></g><g><title>__lruvec_stat_mod_folio (4,412,817 samples, 0.11%)</title><rect x="83.5336%" y="437" width="0.1057%" height="15" fill="rgb(211,167,15)" fg:x="3488970311" fg:w="4412817"/><text x="83.7836%" y="447.50"></text></g><g><title>__handle_mm_fault (64,788,956 samples, 1.55%)</title><rect x="82.1948%" y="501" width="1.5512%" height="15" fill="rgb(210,169,34)" fg:x="3433051728" fg:w="64788956"/><text x="82.4448%" y="511.50"></text></g><g><title>handle_pte_fault (60,556,904 samples, 1.45%)</title><rect x="82.2961%" y="485" width="1.4499%" height="15" fill="rgb(241,121,31)" fg:x="3437283780" fg:w="60556904"/><text x="82.5461%" y="495.50"></text></g><g><title>folio_add_lru_vma (4,457,556 samples, 0.11%)</title><rect x="83.6393%" y="469" width="0.1067%" height="15" fill="rgb(232,40,11)" fg:x="3493383128" fg:w="4457556"/><text x="83.8893%" y="479.50"></text></g><g><title>count_memcg_events.constprop.0 (4,460,081 samples, 0.11%)</title><rect x="83.7460%" y="501" width="0.1068%" height="15" fill="rgb(205,86,26)" fg:x="3497840684" fg:w="4460081"/><text x="83.9960%" y="511.50"></text></g><g><title>__count_memcg_events (4,460,081 samples, 0.11%)</title><rect x="83.7460%" y="485" width="0.1068%" height="15" fill="rgb(231,126,28)" fg:x="3497840684" fg:w="4460081"/><text x="83.9960%" y="495.50"></text></g><g><title>handle_mm_fault (72,971,535 samples, 1.75%)</title><rect x="82.1948%" y="517" width="1.7471%" height="15" fill="rgb(219,221,18)" fg:x="3433051728" fg:w="72971535"/><text x="82.4448%" y="527.50"></text></g><g><title>handle_pte_fault (3,722,498 samples, 0.09%)</title><rect x="83.8528%" y="501" width="0.0891%" height="15" fill="rgb(211,40,0)" fg:x="3502300765" fg:w="3722498"/><text x="84.1028%" y="511.50"></text></g><g><title>do_user_addr_fault (85,781,564 samples, 2.05%)</title><rect x="82.0883%" y="533" width="2.0538%" height="15" fill="rgb(239,85,43)" fg:x="3428602995" fg:w="85781564"/><text x="82.3383%" y="543.50">d..</text></g><g><title>lock_vma_under_rcu (8,361,296 samples, 0.20%)</title><rect x="83.9419%" y="517" width="0.2002%" height="15" fill="rgb(231,55,21)" fg:x="3506023263" fg:w="8361296"/><text x="84.1919%" y="527.50"></text></g><g><title>mas_walk (8,361,296 samples, 0.20%)</title><rect x="83.9419%" y="501" width="0.2002%" height="15" fill="rgb(225,184,43)" fg:x="3506023263" fg:w="8361296"/><text x="84.1919%" y="511.50"></text></g><g><title>fpregs_assert_state_consistent (3,740,649 samples, 0.09%)</title><rect x="84.1421%" y="517" width="0.0896%" height="15" fill="rgb(251,158,41)" fg:x="3514384559" fg:w="3740649"/><text x="84.3921%" y="527.50"></text></g><g><title>asm_exc_page_fault (111,673,394 samples, 2.67%)</title><rect x="81.8782%" y="565" width="2.6737%" height="15" fill="rgb(234,159,37)" fg:x="3419826620" fg:w="111673394"/><text x="82.1282%" y="575.50">as..</text></g><g><title>exc_page_fault (111,673,394 samples, 2.67%)</title><rect x="81.8782%" y="549" width="2.6737%" height="15" fill="rgb(216,204,22)" fg:x="3419826620" fg:w="111673394"/><text x="82.1282%" y="559.50">ex..</text></g><g><title>irqentry_exit (17,115,455 samples, 0.41%)</title><rect x="84.1421%" y="533" width="0.4098%" height="15" fill="rgb(214,17,3)" fg:x="3514384559" fg:w="17115455"/><text x="84.3921%" y="543.50"></text></g><g><title>irqentry_exit_to_user_mode (13,374,806 samples, 0.32%)</title><rect x="84.2316%" y="517" width="0.3202%" height="15" fill="rgb(212,111,17)" fg:x="3518125208" fg:w="13374806"/><text x="84.4816%" y="527.50"></text></g><g><title>fpregs_assert_state_consistent (4,458,832 samples, 0.11%)</title><rect x="84.4451%" y="501" width="0.1068%" height="15" fill="rgb(221,157,24)" fg:x="3527041182" fg:w="4458832"/><text x="84.6951%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (119,923,677 samples, 2.87%)</title><rect x="81.7873%" y="613" width="2.8712%" height="15" fill="rgb(252,16,13)" fg:x="3416029465" fg:w="119923677"/><text x="82.0373%" y="623.50">co..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (119,923,677 samples, 2.87%)</title><rect x="81.7873%" y="597" width="2.8712%" height="15" fill="rgb(221,62,2)" fg:x="3416029465" fg:w="119923677"/><text x="82.0373%" y="607.50">al..</text></g><g><title>core::ptr::write (119,923,677 samples, 2.87%)</title><rect x="81.7873%" y="581" width="2.8712%" height="15" fill="rgb(247,87,22)" fg:x="3416029465" fg:w="119923677"/><text x="82.0373%" y="591.50">co..</text></g><g><title>error_return (4,453,128 samples, 0.11%)</title><rect x="84.5519%" y="565" width="0.1066%" height="15" fill="rgb(215,73,9)" fg:x="3531500014" fg:w="4453128"/><text x="84.8019%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,452,462 samples, 0.11%)</title><rect x="84.6585%" y="421" width="0.1066%" height="15" fill="rgb(207,175,33)" fg:x="3535953142" fg:w="4452462"/><text x="84.9085%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,452,462 samples, 0.11%)</title><rect x="84.6585%" y="405" width="0.1066%" height="15" fill="rgb(243,129,54)" fg:x="3535953142" fg:w="4452462"/><text x="84.9085%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,452,462 samples, 0.11%)</title><rect x="84.6585%" y="389" width="0.1066%" height="15" fill="rgb(227,119,45)" fg:x="3535953142" fg:w="4452462"/><text x="84.9085%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (4,452,462 samples, 0.11%)</title><rect x="84.6585%" y="373" width="0.1066%" height="15" fill="rgb(205,109,36)" fg:x="3535953142" fg:w="4452462"/><text x="84.9085%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,452,462 samples, 0.11%)</title><rect x="84.6585%" y="357" width="0.1066%" height="15" fill="rgb(205,6,39)" fg:x="3535953142" fg:w="4452462"/><text x="84.9085%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,452,462 samples, 0.11%)</title><rect x="84.6585%" y="341" width="0.1066%" height="15" fill="rgb(221,32,16)" fg:x="3535953142" fg:w="4452462"/><text x="84.9085%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,452,462 samples, 0.11%)</title><rect x="84.6585%" y="325" width="0.1066%" height="15" fill="rgb(228,144,50)" fg:x="3535953142" fg:w="4452462"/><text x="84.9085%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4,452,462 samples, 0.11%)</title><rect x="84.6585%" y="309" width="0.1066%" height="15" fill="rgb(229,201,53)" fg:x="3535953142" fg:w="4452462"/><text x="84.9085%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,452,462 samples, 0.11%)</title><rect x="84.6585%" y="293" width="0.1066%" height="15" fill="rgb(249,153,27)" fg:x="3535953142" fg:w="4452462"/><text x="84.9085%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,452,462 samples, 0.11%)</title><rect x="84.6585%" y="277" width="0.1066%" height="15" fill="rgb(227,106,25)" fg:x="3535953142" fg:w="4452462"/><text x="84.9085%" y="287.50"></text></g><g><title>alloc::alloc::alloc (4,452,462 samples, 0.11%)</title><rect x="84.6585%" y="261" width="0.1066%" height="15" fill="rgb(230,65,29)" fg:x="3535953142" fg:w="4452462"/><text x="84.9085%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::_{{closure}} (4,320,214 samples, 0.10%)</title><rect x="84.7651%" y="341" width="0.1034%" height="15" fill="rgb(221,57,46)" fg:x="3540405604" fg:w="4320214"/><text x="85.0151%" y="351.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2::_{{closure}} (4,320,214 samples, 0.10%)</title><rect x="84.7651%" y="325" width="0.1034%" height="15" fill="rgb(229,161,17)" fg:x="3540405604" fg:w="4320214"/><text x="85.0151%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4,320,214 samples, 0.10%)</title><rect x="84.7651%" y="309" width="0.1034%" height="15" fill="rgb(222,213,11)" fg:x="3540405604" fg:w="4320214"/><text x="85.0151%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4,320,214 samples, 0.10%)</title><rect x="84.7651%" y="293" width="0.1034%" height="15" fill="rgb(235,35,13)" fg:x="3540405604" fg:w="4320214"/><text x="85.0151%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::_{{closure}} (4,320,214 samples, 0.10%)</title><rect x="84.7651%" y="277" width="0.1034%" height="15" fill="rgb(233,158,34)" fg:x="3540405604" fg:w="4320214"/><text x="85.0151%" y="287.50"></text></g><g><title>alloc::string::String::push (4,320,214 samples, 0.10%)</title><rect x="84.7651%" y="261" width="0.1034%" height="15" fill="rgb(215,151,48)" fg:x="3540405604" fg:w="4320214"/><text x="85.0151%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4,320,214 samples, 0.10%)</title><rect x="84.7651%" y="245" width="0.1034%" height="15" fill="rgb(229,84,14)" fg:x="3540405604" fg:w="4320214"/><text x="85.0151%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,770,451 samples, 0.21%)</title><rect x="84.7651%" y="421" width="0.2100%" height="15" fill="rgb(229,68,14)" fg:x="3540405604" fg:w="8770451"/><text x="85.0151%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,770,451 samples, 0.21%)</title><rect x="84.7651%" y="405" width="0.2100%" height="15" fill="rgb(243,106,26)" fg:x="3540405604" fg:w="8770451"/><text x="85.0151%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_fold (8,770,451 samples, 0.21%)</title><rect x="84.7651%" y="389" width="0.2100%" height="15" fill="rgb(206,45,38)" fg:x="3540405604" fg:w="8770451"/><text x="85.0151%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8,770,451 samples, 0.21%)</title><rect x="84.7651%" y="373" width="0.2100%" height="15" fill="rgb(226,6,15)" fg:x="3540405604" fg:w="8770451"/><text x="85.0151%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8,770,451 samples, 0.21%)</title><rect x="84.7651%" y="357" width="0.2100%" height="15" fill="rgb(232,22,54)" fg:x="3540405604" fg:w="8770451"/><text x="85.0151%" y="367.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,450,237 samples, 0.11%)</title><rect x="84.8685%" y="341" width="0.1065%" height="15" fill="rgb(229,222,32)" fg:x="3544725818" fg:w="4450237"/><text x="85.1185%" y="351.50"></text></g><g><title>&lt;&amp;D as rand::distributions::distribution::Distribution&lt;T&gt;&gt;::sample (4,450,237 samples, 0.11%)</title><rect x="84.8685%" y="325" width="0.1065%" height="15" fill="rgb(228,62,29)" fg:x="3544725818" fg:w="4450237"/><text x="85.1185%" y="335.50"></text></g><g><title>&lt;rand::distributions::other::Alphanumeric as rand::distributions::distribution::Distribution&lt;u8&gt;&gt;::sample (4,450,237 samples, 0.11%)</title><rect x="84.8685%" y="309" width="0.1065%" height="15" fill="rgb(251,103,34)" fg:x="3544725818" fg:w="4450237"/><text x="85.1185%" y="319.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u32 (4,450,237 samples, 0.11%)</title><rect x="84.8685%" y="293" width="0.1065%" height="15" fill="rgb(233,12,30)" fg:x="3544725818" fg:w="4450237"/><text x="85.1185%" y="303.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (4,450,237 samples, 0.11%)</title><rect x="84.8685%" y="277" width="0.1065%" height="15" fill="rgb(238,52,0)" fg:x="3544725818" fg:w="4450237"/><text x="85.1185%" y="287.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (4,450,237 samples, 0.11%)</title><rect x="84.8685%" y="261" width="0.1065%" height="15" fill="rgb(223,98,5)" fg:x="3544725818" fg:w="4450237"/><text x="85.1185%" y="271.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (4,450,237 samples, 0.11%)</title><rect x="84.8685%" y="245" width="0.1065%" height="15" fill="rgb(228,75,37)" fg:x="3544725818" fg:w="4450237"/><text x="85.1185%" y="255.50"></text></g><g><title>__GI___libc_malloc (4,368,776 samples, 0.10%)</title><rect x="84.9751%" y="405" width="0.1046%" height="15" fill="rgb(205,115,49)" fg:x="3549176055" fg:w="4368776"/><text x="85.2251%" y="415.50"></text></g><g><title>checked_request2size (4,368,776 samples, 0.10%)</title><rect x="84.9751%" y="389" width="0.1046%" height="15" fill="rgb(250,154,43)" fg:x="3549176055" fg:w="4368776"/><text x="85.2251%" y="399.50"></text></g><g><title>__rcu_read_unlock (8,878,568 samples, 0.21%)</title><rect x="86.1783%" y="261" width="0.2126%" height="15" fill="rgb(226,43,29)" fg:x="3599430426" fg:w="8878568"/><text x="86.4283%" y="271.50"></text></g><g><title>get_mem_cgroup_from_mm (4,460,495 samples, 0.11%)</title><rect x="86.3908%" y="261" width="0.1068%" height="15" fill="rgb(249,228,39)" fg:x="3608308994" fg:w="4460495"/><text x="86.6408%" y="271.50"></text></g><g><title>__mem_cgroup_charge (34,959,588 samples, 0.84%)</title><rect x="85.8728%" y="277" width="0.8370%" height="15" fill="rgb(216,79,43)" fg:x="3586673531" fg:w="34959588"/><text x="86.1228%" y="287.50"></text></g><g><title>mem_cgroup_commit_charge (8,863,630 samples, 0.21%)</title><rect x="86.4976%" y="261" width="0.2122%" height="15" fill="rgb(228,95,12)" fg:x="3612769489" fg:w="8863630"/><text x="86.7476%" y="271.50"></text></g><g><title>__count_memcg_events (4,417,220 samples, 0.11%)</title><rect x="86.6041%" y="245" width="0.1058%" height="15" fill="rgb(249,221,15)" fg:x="3617215899" fg:w="4417220"/><text x="86.8541%" y="255.50"></text></g><g><title>__pte_offset_map_lock (4,452,652 samples, 0.11%)</title><rect x="86.7099%" y="277" width="0.1066%" height="15" fill="rgb(233,34,13)" fg:x="3621633119" fg:w="4452652"/><text x="86.9599%" y="287.50"></text></g><g><title>__alloc_pages (11,845,108 samples, 0.28%)</title><rect x="86.9217%" y="229" width="0.2836%" height="15" fill="rgb(214,103,39)" fg:x="3630482454" fg:w="11845108"/><text x="87.1717%" y="239.50"></text></g><g><title>get_page_from_freelist (11,845,108 samples, 0.28%)</title><rect x="86.9217%" y="213" width="0.2836%" height="15" fill="rgb(251,126,39)" fg:x="3630482454" fg:w="11845108"/><text x="87.1717%" y="223.50"></text></g><g><title>rmqueue (11,845,108 samples, 0.28%)</title><rect x="86.9217%" y="197" width="0.2836%" height="15" fill="rgb(214,216,36)" fg:x="3630482454" fg:w="11845108"/><text x="87.1717%" y="207.50"></text></g><g><title>__rmqueue_pcplist (11,845,108 samples, 0.28%)</title><rect x="86.9217%" y="181" width="0.2836%" height="15" fill="rgb(220,221,8)" fg:x="3630482454" fg:w="11845108"/><text x="87.1717%" y="191.50"></text></g><g><title>rmqueue_bulk (7,956,892 samples, 0.19%)</title><rect x="87.0148%" y="165" width="0.1905%" height="15" fill="rgb(240,216,3)" fg:x="3634370670" fg:w="7956892"/><text x="87.2648%" y="175.50"></text></g><g><title>alloc_pages_mpol (20,685,711 samples, 0.50%)</title><rect x="86.8165%" y="245" width="0.4953%" height="15" fill="rgb(232,218,17)" fg:x="3626085771" fg:w="20685711"/><text x="87.0665%" y="255.50"></text></g><g><title>get_page_from_freelist (4,443,920 samples, 0.11%)</title><rect x="87.2053%" y="229" width="0.1064%" height="15" fill="rgb(229,163,45)" fg:x="3642327562" fg:w="4443920"/><text x="87.4553%" y="239.50"></text></g><g><title>alloc_anon_folio (29,597,511 samples, 0.71%)</title><rect x="86.8165%" y="277" width="0.7086%" height="15" fill="rgb(231,110,42)" fg:x="3626085771" fg:w="29597511"/><text x="87.0665%" y="287.50"></text></g><g><title>vma_alloc_folio (29,597,511 samples, 0.71%)</title><rect x="86.8165%" y="261" width="0.7086%" height="15" fill="rgb(208,170,48)" fg:x="3626085771" fg:w="29597511"/><text x="87.0665%" y="271.50"></text></g><g><title>get_vma_policy (8,911,800 samples, 0.21%)</title><rect x="87.3117%" y="245" width="0.2134%" height="15" fill="rgb(239,116,25)" fg:x="3646771482" fg:w="8911800"/><text x="87.5617%" y="255.50"></text></g><g><title>folio_add_lru_vma (8,891,928 samples, 0.21%)</title><rect x="87.5251%" y="277" width="0.2129%" height="15" fill="rgb(219,200,50)" fg:x="3655683282" fg:w="8891928"/><text x="87.7751%" y="287.50"></text></g><g><title>folio_add_lru (8,891,928 samples, 0.21%)</title><rect x="87.5251%" y="261" width="0.2129%" height="15" fill="rgb(245,200,0)" fg:x="3655683282" fg:w="8891928"/><text x="87.7751%" y="271.50"></text></g><g><title>folio_batch_move_lru (8,891,928 samples, 0.21%)</title><rect x="87.5251%" y="245" width="0.2129%" height="15" fill="rgb(245,119,33)" fg:x="3655683282" fg:w="8891928"/><text x="87.7751%" y="255.50"></text></g><g><title>lru_add_fn (8,891,928 samples, 0.21%)</title><rect x="87.5251%" y="229" width="0.2129%" height="15" fill="rgb(231,125,12)" fg:x="3655683282" fg:w="8891928"/><text x="87.7751%" y="239.50"></text></g><g><title>lru_gen_add_folio (8,891,928 samples, 0.21%)</title><rect x="87.5251%" y="213" width="0.2129%" height="15" fill="rgb(216,96,41)" fg:x="3655683282" fg:w="8891928"/><text x="87.7751%" y="223.50"></text></g><g><title>__mod_lruvec_state (4,458,222 samples, 0.11%)</title><rect x="87.6312%" y="197" width="0.1067%" height="15" fill="rgb(248,43,45)" fg:x="3660116988" fg:w="4458222"/><text x="87.8812%" y="207.50"></text></g><g><title>__mod_memcg_lruvec_state (4,458,222 samples, 0.11%)</title><rect x="87.6312%" y="181" width="0.1067%" height="15" fill="rgb(217,222,7)" fg:x="3660116988" fg:w="4458222"/><text x="87.8812%" y="191.50"></text></g><g><title>srso_alias_return_thunk (4,429,284 samples, 0.11%)</title><rect x="87.7380%" y="277" width="0.1060%" height="15" fill="rgb(233,28,6)" fg:x="3664575210" fg:w="4429284"/><text x="87.9880%" y="287.50"></text></g><g><title>do_anonymous_page (91,078,039 samples, 2.18%)</title><rect x="85.7664%" y="293" width="2.1806%" height="15" fill="rgb(231,218,15)" fg:x="3582227648" fg:w="91078039"/><text x="86.0164%" y="303.50">d..</text></g><g><title>srso_alias_safe_ret (4,301,193 samples, 0.10%)</title><rect x="87.8440%" y="277" width="0.1030%" height="15" fill="rgb(226,171,48)" fg:x="3669004494" fg:w="4301193"/><text x="88.0940%" y="287.50"></text></g><g><title>mksaveddirty_shift (4,451,098 samples, 0.11%)</title><rect x="87.9470%" y="293" width="0.1066%" height="15" fill="rgb(235,201,9)" fg:x="3673305687" fg:w="4451098"/><text x="88.1970%" y="303.50"></text></g><g><title>__pte_offset_map (4,456,075 samples, 0.11%)</title><rect x="88.0536%" y="277" width="0.1067%" height="15" fill="rgb(217,80,15)" fg:x="3677756785" fg:w="4456075"/><text x="88.3036%" y="287.50"></text></g><g><title>__handle_mm_fault (112,021,937 samples, 2.68%)</title><rect x="85.5604%" y="325" width="2.6821%" height="15" fill="rgb(219,152,8)" fg:x="3573623553" fg:w="112021937"/><text x="85.8104%" y="335.50">__..</text></g><g><title>handle_pte_fault (103,417,842 samples, 2.48%)</title><rect x="85.7664%" y="309" width="2.4761%" height="15" fill="rgb(243,107,38)" fg:x="3582227648" fg:w="103417842"/><text x="86.0164%" y="319.50">ha..</text></g><g><title>pte_offset_map_nolock (7,888,705 samples, 0.19%)</title><rect x="88.0536%" y="293" width="0.1889%" height="15" fill="rgb(231,17,5)" fg:x="3677756785" fg:w="7888705"/><text x="88.3036%" y="303.50"></text></g><g><title>__rcu_read_lock (3,432,630 samples, 0.08%)</title><rect x="88.1603%" y="277" width="0.0822%" height="15" fill="rgb(209,25,54)" fg:x="3682212860" fg:w="3432630"/><text x="88.4103%" y="287.50"></text></g><g><title>count_memcg_events.constprop.0 (8,794,008 samples, 0.21%)</title><rect x="88.2425%" y="325" width="0.2105%" height="15" fill="rgb(219,0,2)" fg:x="3685645490" fg:w="8794008"/><text x="88.4925%" y="335.50"></text></g><g><title>__count_memcg_events (4,342,178 samples, 0.10%)</title><rect x="88.3490%" y="309" width="0.1040%" height="15" fill="rgb(246,9,5)" fg:x="3690097320" fg:w="4342178"/><text x="88.5990%" y="319.50"></text></g><g><title>asm_exc_page_fault (128,881,085 samples, 3.09%)</title><rect x="85.4737%" y="389" width="3.0857%" height="15" fill="rgb(226,159,4)" fg:x="3570004026" fg:w="128881085"/><text x="85.7237%" y="399.50">asm..</text></g><g><title>exc_page_fault (128,881,085 samples, 3.09%)</title><rect x="85.4737%" y="373" width="3.0857%" height="15" fill="rgb(219,175,34)" fg:x="3570004026" fg:w="128881085"/><text x="85.7237%" y="383.50">exc..</text></g><g><title>do_user_addr_fault (125,261,558 samples, 3.00%)</title><rect x="85.5604%" y="357" width="2.9990%" height="15" fill="rgb(236,10,46)" fg:x="3573623553" fg:w="125261558"/><text x="85.8104%" y="367.50">do_..</text></g><g><title>handle_mm_fault (125,261,558 samples, 3.00%)</title><rect x="85.5604%" y="341" width="2.9990%" height="15" fill="rgb(240,211,16)" fg:x="3573623553" fg:w="125261558"/><text x="85.8104%" y="351.50">han..</text></g><g><title>pmd_val (4,445,613 samples, 0.11%)</title><rect x="88.4530%" y="325" width="0.1064%" height="15" fill="rgb(205,3,43)" fg:x="3694439498" fg:w="4445613"/><text x="88.7030%" y="335.50"></text></g><g><title>__GI___libc_malloc (154,159,858 samples, 3.69%)</title><rect x="84.9751%" y="421" width="3.6909%" height="15" fill="rgb(245,7,22)" fg:x="3549176055" fg:w="154159858"/><text x="85.2251%" y="431.50">__GI..</text></g><g><title>_int_malloc (149,791,082 samples, 3.59%)</title><rect x="85.0797%" y="405" width="3.5863%" height="15" fill="rgb(239,132,32)" fg:x="3553544831" fg:w="149791082"/><text x="85.3297%" y="415.50">_int..</text></g><g><title>sync_regs (4,450,802 samples, 0.11%)</title><rect x="88.5594%" y="389" width="0.1066%" height="15" fill="rgb(228,202,34)" fg:x="3698885111" fg:w="4450802"/><text x="88.8094%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (176,288,195 samples, 4.22%)</title><rect x="84.6585%" y="597" width="4.2207%" height="15" fill="rgb(254,200,22)" fg:x="3535953142" fg:w="176288195"/><text x="84.9085%" y="607.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (176,288,195 samples, 4.22%)</title><rect x="84.6585%" y="581" width="4.2207%" height="15" fill="rgb(219,10,39)" fg:x="3535953142" fg:w="176288195"/><text x="84.9085%" y="591.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (176,288,195 samples, 4.22%)</title><rect x="84.6585%" y="565" width="4.2207%" height="15" fill="rgb(226,210,39)" fg:x="3535953142" fg:w="176288195"/><text x="84.9085%" y="575.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (176,288,195 samples, 4.22%)</title><rect x="84.6585%" y="549" width="4.2207%" height="15" fill="rgb(208,219,16)" fg:x="3535953142" fg:w="176288195"/><text x="84.9085%" y="559.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (176,288,195 samples, 4.22%)</title><rect x="84.6585%" y="533" width="4.2207%" height="15" fill="rgb(216,158,51)" fg:x="3535953142" fg:w="176288195"/><text x="84.9085%" y="543.50">&lt;T as..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (176,288,195 samples, 4.22%)</title><rect x="84.6585%" y="517" width="4.2207%" height="15" fill="rgb(233,14,44)" fg:x="3535953142" fg:w="176288195"/><text x="84.9085%" y="527.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (176,288,195 samples, 4.22%)</title><rect x="84.6585%" y="501" width="4.2207%" height="15" fill="rgb(237,97,39)" fg:x="3535953142" fg:w="176288195"/><text x="84.9085%" y="511.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (176,288,195 samples, 4.22%)</title><rect x="84.6585%" y="485" width="4.2207%" height="15" fill="rgb(218,198,43)" fg:x="3535953142" fg:w="176288195"/><text x="84.9085%" y="495.50">alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (176,288,195 samples, 4.22%)</title><rect x="84.6585%" y="469" width="4.2207%" height="15" fill="rgb(231,104,20)" fg:x="3535953142" fg:w="176288195"/><text x="84.9085%" y="479.50">&lt;allo..</text></g><g><title>alloc::alloc::Global::alloc_impl (176,288,195 samples, 4.22%)</title><rect x="84.6585%" y="453" width="4.2207%" height="15" fill="rgb(254,36,13)" fg:x="3535953142" fg:w="176288195"/><text x="84.9085%" y="463.50">alloc..</text></g><g><title>alloc::alloc::alloc (176,288,195 samples, 4.22%)</title><rect x="84.6585%" y="437" width="4.2207%" height="15" fill="rgb(248,14,50)" fg:x="3535953142" fg:w="176288195"/><text x="84.9085%" y="447.50">alloc..</text></g><g><title>_int_malloc (8,905,424 samples, 0.21%)</title><rect x="88.6660%" y="421" width="0.2132%" height="15" fill="rgb(217,107,29)" fg:x="3703335913" fg:w="8905424"/><text x="88.9160%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (51,123,297 samples, 1.22%)</title><rect x="90.2208%" y="389" width="1.2240%" height="15" fill="rgb(251,169,33)" fg:x="3768273888" fg:w="51123297"/><text x="90.4708%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::_{{closure}} (90,535,678 samples, 2.17%)</title><rect x="89.7983%" y="485" width="2.1676%" height="15" fill="rgb(217,108,32)" fg:x="3750629392" fg:w="90535678"/><text x="90.0483%" y="495.50">&lt;..</text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2::_{{closure}} (86,088,710 samples, 2.06%)</title><rect x="89.9048%" y="469" width="2.0612%" height="15" fill="rgb(219,66,42)" fg:x="3755076360" fg:w="86088710"/><text x="90.1548%" y="479.50">c..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (86,088,710 samples, 2.06%)</title><rect x="89.9048%" y="453" width="2.0612%" height="15" fill="rgb(206,180,7)" fg:x="3755076360" fg:w="86088710"/><text x="90.1548%" y="463.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (86,088,710 samples, 2.06%)</title><rect x="89.9048%" y="437" width="2.0612%" height="15" fill="rgb(208,226,31)" fg:x="3755076360" fg:w="86088710"/><text x="90.1548%" y="447.50">c..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::_{{closure}} (86,088,710 samples, 2.06%)</title><rect x="89.9048%" y="421" width="2.0612%" height="15" fill="rgb(218,26,49)" fg:x="3755076360" fg:w="86088710"/><text x="90.1548%" y="431.50">&lt;..</text></g><g><title>alloc::string::String::push (86,088,710 samples, 2.06%)</title><rect x="89.9048%" y="405" width="2.0612%" height="15" fill="rgb(233,197,48)" fg:x="3755076360" fg:w="86088710"/><text x="90.1548%" y="415.50">a..</text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (21,767,885 samples, 0.52%)</title><rect x="91.4448%" y="389" width="0.5212%" height="15" fill="rgb(252,181,51)" fg:x="3819397185" fg:w="21767885"/><text x="91.6948%" y="399.50"></text></g><g><title>core::char::methods::len_utf8 (21,767,885 samples, 0.52%)</title><rect x="91.4448%" y="373" width="0.5212%" height="15" fill="rgb(253,90,19)" fg:x="3819397185" fg:w="21767885"/><text x="91.6948%" y="383.50"></text></g><g><title>rand::rngs::adapter::reseeding::fork::get_fork_counter (13,350,156 samples, 0.32%)</title><rect x="94.8778%" y="309" width="0.3196%" height="15" fill="rgb(215,171,30)" fg:x="3962785751" fg:w="13350156"/><text x="95.1278%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (8,893,044 samples, 0.21%)</title><rect x="94.9845%" y="293" width="0.2129%" height="15" fill="rgb(214,222,9)" fg:x="3967242863" fg:w="8893044"/><text x="95.2345%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_load (8,893,044 samples, 0.21%)</title><rect x="94.9845%" y="277" width="0.2129%" height="15" fill="rgb(223,3,22)" fg:x="3967242863" fg:w="8893044"/><text x="95.2345%" y="287.50"></text></g><g><title>rand_chacha::guts::diagonalize (4,414,151 samples, 0.11%)</title><rect x="95.1974%" y="261" width="0.1057%" height="15" fill="rgb(225,196,46)" fg:x="3976135907" fg:w="4414151"/><text x="95.4474%" y="271.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (4,414,151 samples, 0.11%)</title><rect x="95.1974%" y="245" width="0.1057%" height="15" fill="rgb(209,110,37)" fg:x="3976135907" fg:w="4414151"/><text x="95.4474%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (4,414,151 samples, 0.11%)</title><rect x="95.1974%" y="229" width="0.1057%" height="15" fill="rgb(249,89,12)" fg:x="3976135907" fg:w="4414151"/><text x="95.4474%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4,414,151 samples, 0.11%)</title><rect x="95.1974%" y="213" width="0.1057%" height="15" fill="rgb(226,27,33)" fg:x="3976135907" fg:w="4414151"/><text x="95.4474%" y="223.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (22,116,341 samples, 0.53%)</title><rect x="95.3031%" y="245" width="0.5295%" height="15" fill="rgb(213,82,22)" fg:x="3980550058" fg:w="22116341"/><text x="95.5531%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (22,116,341 samples, 0.53%)</title><rect x="95.3031%" y="229" width="0.5295%" height="15" fill="rgb(248,140,0)" fg:x="3980550058" fg:w="22116341"/><text x="95.5531%" y="239.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (22,116,341 samples, 0.53%)</title><rect x="95.3031%" y="213" width="0.5295%" height="15" fill="rgb(228,106,3)" fg:x="3980550058" fg:w="22116341"/><text x="95.5531%" y="223.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (22,116,341 samples, 0.53%)</title><rect x="95.3031%" y="197" width="0.5295%" height="15" fill="rgb(209,23,37)" fg:x="3980550058" fg:w="22116341"/><text x="95.5531%" y="207.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (8,910,382 samples, 0.21%)</title><rect x="95.8326%" y="245" width="0.2133%" height="15" fill="rgb(241,93,50)" fg:x="4002666399" fg:w="8910382"/><text x="96.0826%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (8,910,382 samples, 0.21%)</title><rect x="95.8326%" y="229" width="0.2133%" height="15" fill="rgb(253,46,43)" fg:x="4002666399" fg:w="8910382"/><text x="96.0826%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (8,910,382 samples, 0.21%)</title><rect x="95.8326%" y="213" width="0.2133%" height="15" fill="rgb(226,206,43)" fg:x="4002666399" fg:w="8910382"/><text x="96.0826%" y="223.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (8,846,177 samples, 0.21%)</title><rect x="96.0460%" y="245" width="0.2118%" height="15" fill="rgb(217,54,7)" fg:x="4011576781" fg:w="8846177"/><text x="96.2960%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (8,846,177 samples, 0.21%)</title><rect x="96.0460%" y="229" width="0.2118%" height="15" fill="rgb(223,5,52)" fg:x="4011576781" fg:w="8846177"/><text x="96.2960%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (8,846,177 samples, 0.21%)</title><rect x="96.0460%" y="213" width="0.2118%" height="15" fill="rgb(206,52,46)" fg:x="4011576781" fg:w="8846177"/><text x="96.2960%" y="223.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (22,214,886 samples, 0.53%)</title><rect x="96.2578%" y="245" width="0.5319%" height="15" fill="rgb(253,136,11)" fg:x="4020422958" fg:w="22214886"/><text x="96.5078%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (22,214,886 samples, 0.53%)</title><rect x="96.2578%" y="229" width="0.5319%" height="15" fill="rgb(208,106,33)" fg:x="4020422958" fg:w="22214886"/><text x="96.5078%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (22,214,886 samples, 0.53%)</title><rect x="96.2578%" y="213" width="0.5319%" height="15" fill="rgb(206,54,4)" fg:x="4020422958" fg:w="22214886"/><text x="96.5078%" y="223.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (13,311,567 samples, 0.32%)</title><rect x="96.7896%" y="245" width="0.3187%" height="15" fill="rgb(213,3,15)" fg:x="4042637844" fg:w="13311567"/><text x="97.0396%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (13,311,567 samples, 0.32%)</title><rect x="96.7896%" y="229" width="0.3187%" height="15" fill="rgb(252,211,39)" fg:x="4042637844" fg:w="13311567"/><text x="97.0396%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (13,311,567 samples, 0.32%)</title><rect x="96.7896%" y="213" width="0.3187%" height="15" fill="rgb(223,6,36)" fg:x="4042637844" fg:w="13311567"/><text x="97.0396%" y="223.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (97,621,602 samples, 2.34%)</title><rect x="94.8778%" y="341" width="2.3373%" height="15" fill="rgb(252,169,45)" fg:x="3962785751" fg:w="97621602"/><text x="95.1278%" y="351.50">&lt;..</text></g><g><title>rand_chacha::guts::ChaCha::refill4 (97,621,602 samples, 2.34%)</title><rect x="94.8778%" y="325" width="2.3373%" height="15" fill="rgb(212,48,26)" fg:x="3962785751" fg:w="97621602"/><text x="95.1278%" y="335.50">r..</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (84,271,446 samples, 2.02%)</title><rect x="95.1974%" y="309" width="2.0176%" height="15" fill="rgb(251,102,48)" fg:x="3976135907" fg:w="84271446"/><text x="95.4474%" y="319.50">r..</text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (84,271,446 samples, 2.02%)</title><rect x="95.1974%" y="293" width="2.0176%" height="15" fill="rgb(243,208,16)" fg:x="3976135907" fg:w="84271446"/><text x="95.4474%" y="303.50">r..</text></g><g><title>rand_chacha::guts::refill_wide_impl (84,271,446 samples, 2.02%)</title><rect x="95.1974%" y="277" width="2.0176%" height="15" fill="rgb(219,96,24)" fg:x="3976135907" fg:w="84271446"/><text x="95.4474%" y="287.50">r..</text></g><g><title>rand_chacha::guts::round (79,857,295 samples, 1.91%)</title><rect x="95.3031%" y="261" width="1.9120%" height="15" fill="rgb(219,33,29)" fg:x="3980550058" fg:w="79857295"/><text x="95.5531%" y="271.50">r..</text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (4,457,942 samples, 0.11%)</title><rect x="97.1083%" y="245" width="0.1067%" height="15" fill="rgb(223,176,5)" fg:x="4055949411" fg:w="4457942"/><text x="97.3583%" y="255.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (4,457,942 samples, 0.11%)</title><rect x="97.1083%" y="229" width="0.1067%" height="15" fill="rgb(228,140,14)" fg:x="4055949411" fg:w="4457942"/><text x="97.3583%" y="239.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (4,457,942 samples, 0.11%)</title><rect x="97.1083%" y="213" width="0.1067%" height="15" fill="rgb(217,179,31)" fg:x="4055949411" fg:w="4457942"/><text x="97.3583%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (356,956,007 samples, 8.55%)</title><rect x="88.8792%" y="597" width="8.5463%" height="15" fill="rgb(230,9,30)" fg:x="3712241337" fg:w="356956007"/><text x="89.1292%" y="607.50">&lt;alloc::stri..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (356,956,007 samples, 8.55%)</title><rect x="88.8792%" y="581" width="8.5463%" height="15" fill="rgb(230,136,20)" fg:x="3712241337" fg:w="356956007"/><text x="89.1292%" y="591.50">core::iter::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (356,956,007 samples, 8.55%)</title><rect x="88.8792%" y="565" width="8.5463%" height="15" fill="rgb(215,210,22)" fg:x="3712241337" fg:w="356956007"/><text x="89.1292%" y="575.50">&lt;core::iter:..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (356,956,007 samples, 8.55%)</title><rect x="88.8792%" y="549" width="8.5463%" height="15" fill="rgb(218,43,5)" fg:x="3712241337" fg:w="356956007"/><text x="89.1292%" y="559.50">&lt;core::iter:..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_fold (356,956,007 samples, 8.55%)</title><rect x="88.8792%" y="533" width="8.5463%" height="15" fill="rgb(216,11,5)" fg:x="3712241337" fg:w="356956007"/><text x="89.1292%" y="543.50">&lt;core::iter:..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (356,956,007 samples, 8.55%)</title><rect x="88.8792%" y="517" width="8.5463%" height="15" fill="rgb(209,82,29)" fg:x="3712241337" fg:w="356956007"/><text x="89.1292%" y="527.50">&lt;core::iter:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (356,956,007 samples, 8.55%)</title><rect x="88.8792%" y="501" width="8.5463%" height="15" fill="rgb(244,115,12)" fg:x="3712241337" fg:w="356956007"/><text x="89.1292%" y="511.50">core::iter::..</text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (228,032,274 samples, 5.46%)</title><rect x="91.9659%" y="485" width="5.4596%" height="15" fill="rgb(222,82,18)" fg:x="3841165070" fg:w="228032274"/><text x="92.2159%" y="495.50">&lt;rand::..</text></g><g><title>&lt;&amp;D as rand::distributions::distribution::Distribution&lt;T&gt;&gt;::sample (228,032,274 samples, 5.46%)</title><rect x="91.9659%" y="469" width="5.4596%" height="15" fill="rgb(249,227,8)" fg:x="3841165070" fg:w="228032274"/><text x="92.2159%" y="479.50">&lt;&amp;D as ..</text></g><g><title>&lt;rand::distributions::other::Alphanumeric as rand::distributions::distribution::Distribution&lt;u8&gt;&gt;::sample (228,032,274 samples, 5.46%)</title><rect x="91.9659%" y="453" width="5.4596%" height="15" fill="rgb(253,141,45)" fg:x="3841165070" fg:w="228032274"/><text x="92.2159%" y="463.50">&lt;rand::..</text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u32 (219,182,659 samples, 5.25%)</title><rect x="92.1778%" y="437" width="5.2477%" height="15" fill="rgb(234,184,4)" fg:x="3850014685" fg:w="219182659"/><text x="92.4278%" y="447.50">&lt;&amp;mut ..</text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (219,182,659 samples, 5.25%)</title><rect x="92.1778%" y="421" width="5.2477%" height="15" fill="rgb(218,194,23)" fg:x="3850014685" fg:w="219182659"/><text x="92.4278%" y="431.50">&lt;rand:..</text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (219,182,659 samples, 5.25%)</title><rect x="92.1778%" y="405" width="5.2477%" height="15" fill="rgb(235,66,41)" fg:x="3850014685" fg:w="219182659"/><text x="92.4278%" y="415.50">&lt;rand:..</text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (219,182,659 samples, 5.25%)</title><rect x="92.1778%" y="389" width="5.2477%" height="15" fill="rgb(245,217,1)" fg:x="3850014685" fg:w="219182659"/><text x="92.4278%" y="399.50">&lt;rand_..</text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (106,411,593 samples, 2.55%)</title><rect x="94.8778%" y="373" width="2.5477%" height="15" fill="rgb(229,91,1)" fg:x="3962785751" fg:w="106411593"/><text x="95.1278%" y="383.50">ra..</text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (106,411,593 samples, 2.55%)</title><rect x="94.8778%" y="357" width="2.5477%" height="15" fill="rgb(207,101,30)" fg:x="3962785751" fg:w="106411593"/><text x="95.1278%" y="367.50">&lt;r..</text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (8,789,991 samples, 0.21%)</title><rect x="97.2151%" y="341" width="0.2105%" height="15" fill="rgb(223,82,49)" fg:x="4060407353" fg:w="8789991"/><text x="97.4651%" y="351.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed (8,789,991 samples, 0.21%)</title><rect x="97.2151%" y="325" width="0.2105%" height="15" fill="rgb(218,167,17)" fg:x="4060407353" fg:w="8789991"/><text x="97.4651%" y="335.50"></text></g><g><title>rand_core::SeedableRng::from_rng (8,789,991 samples, 0.21%)</title><rect x="97.2151%" y="309" width="0.2105%" height="15" fill="rgb(208,103,14)" fg:x="4060407353" fg:w="8789991"/><text x="97.4651%" y="319.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::try_fill_bytes (8,789,991 samples, 0.21%)</title><rect x="97.2151%" y="293" width="0.2105%" height="15" fill="rgb(238,20,8)" fg:x="4060407353" fg:w="8789991"/><text x="97.4651%" y="303.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (8,789,991 samples, 0.21%)</title><rect x="97.2151%" y="277" width="0.2105%" height="15" fill="rgb(218,80,54)" fg:x="4060407353" fg:w="8789991"/><text x="97.4651%" y="287.50"></text></g><g><title>getrandom::getrandom (8,789,991 samples, 0.21%)</title><rect x="97.2151%" y="261" width="0.2105%" height="15" fill="rgb(240,144,17)" fg:x="4060407353" fg:w="8789991"/><text x="97.4651%" y="271.50"></text></g><g><title>getrandom::getrandom_uninit (8,789,991 samples, 0.21%)</title><rect x="97.2151%" y="245" width="0.2105%" height="15" fill="rgb(245,27,50)" fg:x="4060407353" fg:w="8789991"/><text x="97.4651%" y="255.50"></text></g><g><title>getrandom::imp::getrandom_inner (8,789,991 samples, 0.21%)</title><rect x="97.2151%" y="229" width="0.2105%" height="15" fill="rgb(251,51,7)" fg:x="4060407353" fg:w="8789991"/><text x="97.4651%" y="239.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (8,789,991 samples, 0.21%)</title><rect x="97.2151%" y="213" width="0.2105%" height="15" fill="rgb(245,217,29)" fg:x="4060407353" fg:w="8789991"/><text x="97.4651%" y="223.50"></text></g><g><title>core::ops::function::Fn::call (8,789,991 samples, 0.21%)</title><rect x="97.2151%" y="197" width="0.2105%" height="15" fill="rgb(221,176,29)" fg:x="4060407353" fg:w="8789991"/><text x="97.4651%" y="207.50"></text></g><g><title>getrandom::util_libc::getrandom_syscall (8,789,991 samples, 0.21%)</title><rect x="97.2151%" y="181" width="0.2105%" height="15" fill="rgb(212,180,24)" fg:x="4060407353" fg:w="8789991"/><text x="97.4651%" y="191.50"></text></g><g><title>syscall (8,789,991 samples, 0.21%)</title><rect x="97.2151%" y="165" width="0.2105%" height="15" fill="rgb(254,24,2)" fg:x="4060407353" fg:w="8789991"/><text x="97.4651%" y="175.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8,789,991 samples, 0.21%)</title><rect x="97.2151%" y="149" width="0.2105%" height="15" fill="rgb(230,100,2)" fg:x="4060407353" fg:w="8789991"/><text x="97.4651%" y="159.50"></text></g><g><title>do_syscall_64 (8,789,991 samples, 0.21%)</title><rect x="97.2151%" y="133" width="0.2105%" height="15" fill="rgb(219,142,25)" fg:x="4060407353" fg:w="8789991"/><text x="97.4651%" y="143.50"></text></g><g><title>x64_sys_call (8,789,991 samples, 0.21%)</title><rect x="97.2151%" y="117" width="0.2105%" height="15" fill="rgb(240,73,43)" fg:x="4060407353" fg:w="8789991"/><text x="97.4651%" y="127.50"></text></g><g><title>__x64_sys_getrandom (8,789,991 samples, 0.21%)</title><rect x="97.2151%" y="101" width="0.2105%" height="15" fill="rgb(214,114,15)" fg:x="4060407353" fg:w="8789991"/><text x="97.4651%" y="111.50"></text></g><g><title>get_random_bytes_user (8,789,991 samples, 0.21%)</title><rect x="97.2151%" y="85" width="0.2105%" height="15" fill="rgb(207,130,4)" fg:x="4060407353" fg:w="8789991"/><text x="97.4651%" y="95.50"></text></g><g><title>crng_make_state (8,789,991 samples, 0.21%)</title><rect x="97.2151%" y="69" width="0.2105%" height="15" fill="rgb(221,25,40)" fg:x="4060407353" fg:w="8789991"/><text x="97.4651%" y="79.50"></text></g><g><title>crng_fast_key_erasure (4,449,782 samples, 0.11%)</title><rect x="97.3190%" y="53" width="0.1065%" height="15" fill="rgb(241,184,7)" fg:x="4064747562" fg:w="4449782"/><text x="97.5690%" y="63.50"></text></g><g><title>chacha_block_generic (4,449,782 samples, 0.11%)</title><rect x="97.3190%" y="37" width="0.1065%" height="15" fill="rgb(235,159,4)" fg:x="4064747562" fg:w="4449782"/><text x="97.5690%" y="47.50"></text></g><g><title>__libc_start_main_impl (3,081,203,284 samples, 73.77%)</title><rect x="23.7613%" y="1093" width="73.7708%" height="15" fill="rgb(214,87,48)" fg:x="992445724" fg:w="3081203284"/><text x="24.0113%" y="1103.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (3,081,203,284 samples, 73.77%)</title><rect x="23.7613%" y="1077" width="73.7708%" height="15" fill="rgb(246,198,24)" fg:x="992445724" fg:w="3081203284"/><text x="24.0113%" y="1087.50">__libc_start_call_main</text></g><g><title>main (3,081,203,284 samples, 73.77%)</title><rect x="23.7613%" y="1061" width="73.7708%" height="15" fill="rgb(209,66,40)" fg:x="992445724" fg:w="3081203284"/><text x="24.0113%" y="1071.50">main</text></g><g><title>std::rt::lang_start_internal (3,081,203,284 samples, 73.77%)</title><rect x="23.7613%" y="1045" width="73.7708%" height="15" fill="rgb(233,147,39)" fg:x="992445724" fg:w="3081203284"/><text x="24.0113%" y="1055.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (3,081,203,284 samples, 73.77%)</title><rect x="23.7613%" y="1029" width="73.7708%" height="15" fill="rgb(231,145,52)" fg:x="992445724" fg:w="3081203284"/><text x="24.0113%" y="1039.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,081,203,284 samples, 73.77%)</title><rect x="23.7613%" y="1013" width="73.7708%" height="15" fill="rgb(206,20,26)" fg:x="992445724" fg:w="3081203284"/><text x="24.0113%" y="1023.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,081,203,284 samples, 73.77%)</title><rect x="23.7613%" y="997" width="73.7708%" height="15" fill="rgb(238,220,4)" fg:x="992445724" fg:w="3081203284"/><text x="24.0113%" y="1007.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (3,081,203,284 samples, 73.77%)</title><rect x="23.7613%" y="981" width="73.7708%" height="15" fill="rgb(252,195,42)" fg:x="992445724" fg:w="3081203284"/><text x="24.0113%" y="991.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (3,081,203,284 samples, 73.77%)</title><rect x="23.7613%" y="965" width="73.7708%" height="15" fill="rgb(209,10,6)" fg:x="992445724" fg:w="3081203284"/><text x="24.0113%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,081,203,284 samples, 73.77%)</title><rect x="23.7613%" y="949" width="73.7708%" height="15" fill="rgb(229,3,52)" fg:x="992445724" fg:w="3081203284"/><text x="24.0113%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,081,203,284 samples, 73.77%)</title><rect x="23.7613%" y="933" width="73.7708%" height="15" fill="rgb(253,49,37)" fg:x="992445724" fg:w="3081203284"/><text x="24.0113%" y="943.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3,081,203,284 samples, 73.77%)</title><rect x="23.7613%" y="917" width="73.7708%" height="15" fill="rgb(240,103,49)" fg:x="992445724" fg:w="3081203284"/><text x="24.0113%" y="927.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (3,081,203,284 samples, 73.77%)</title><rect x="23.7613%" y="901" width="73.7708%" height="15" fill="rgb(250,182,30)" fg:x="992445724" fg:w="3081203284"/><text x="24.0113%" y="911.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,081,203,284 samples, 73.77%)</title><rect x="23.7613%" y="885" width="73.7708%" height="15" fill="rgb(248,8,30)" fg:x="992445724" fg:w="3081203284"/><text x="24.0113%" y="895.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (3,081,203,284 samples, 73.77%)</title><rect x="23.7613%" y="869" width="73.7708%" height="15" fill="rgb(237,120,30)" fg:x="992445724" fg:w="3081203284"/><text x="24.0113%" y="879.50">core::ops::function::FnOnce::call_once</text></g><g><title>workload_gen_cli::main (3,081,203,284 samples, 73.77%)</title><rect x="23.7613%" y="853" width="73.7708%" height="15" fill="rgb(221,146,34)" fg:x="992445724" fg:w="3081203284"/><text x="24.0113%" y="863.50">workload_gen_cli::main</text></g><g><title>workload_gen_cli::invoke_generate (3,079,074,072 samples, 73.72%)</title><rect x="23.8123%" y="837" width="73.7198%" height="15" fill="rgb(242,55,13)" fg:x="994574936" fg:w="3079074072"/><text x="24.0623%" y="847.50">workload_gen_cli::invoke_generate</text></g><g><title>workload_gen::generate_workload (3,079,074,072 samples, 73.72%)</title><rect x="23.8123%" y="821" width="73.7198%" height="15" fill="rgb(242,112,31)" fg:x="994574936" fg:w="3079074072"/><text x="24.0623%" y="831.50">workload_gen::generate_workload</text></g><g><title>workload_gen::generate_operations (1,315,288,125 samples, 31.49%)</title><rect x="66.0412%" y="805" width="31.4909%" height="15" fill="rgb(249,192,27)" fg:x="2758360883" fg:w="1315288125"/><text x="66.2912%" y="815.50">workload_gen::generate_operations</text></g><g><title>workload_gen::spec::Inserts::generate_operations (657,619,543 samples, 15.74%)</title><rect x="81.7873%" y="789" width="15.7449%" height="15" fill="rgb(208,204,44)" fg:x="3416029465" fg:w="657619543"/><text x="82.0373%" y="799.50">workload_gen::spec::Inse..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (657,619,543 samples, 15.74%)</title><rect x="81.7873%" y="773" width="15.7449%" height="15" fill="rgb(208,93,54)" fg:x="3416029465" fg:w="657619543"/><text x="82.0373%" y="783.50">core::iter::traits::iter..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (657,619,543 samples, 15.74%)</title><rect x="81.7873%" y="757" width="15.7449%" height="15" fill="rgb(242,1,31)" fg:x="3416029465" fg:w="657619543"/><text x="82.0373%" y="767.50">&lt;alloc::vec::Vec&lt;T&gt; as c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (657,619,543 samples, 15.74%)</title><rect x="81.7873%" y="741" width="15.7449%" height="15" fill="rgb(241,83,25)" fg:x="3416029465" fg:w="657619543"/><text x="82.0373%" y="751.50">&lt;alloc::vec::Vec&lt;T&gt; as a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (657,619,543 samples, 15.74%)</title><rect x="81.7873%" y="725" width="15.7449%" height="15" fill="rgb(205,169,50)" fg:x="3416029465" fg:w="657619543"/><text x="82.0373%" y="735.50">&lt;alloc::vec::Vec&lt;T&gt; as a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (657,619,543 samples, 15.74%)</title><rect x="81.7873%" y="709" width="15.7449%" height="15" fill="rgb(239,186,37)" fg:x="3416029465" fg:w="657619543"/><text x="82.0373%" y="719.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (657,619,543 samples, 15.74%)</title><rect x="81.7873%" y="693" width="15.7449%" height="15" fill="rgb(205,221,10)" fg:x="3416029465" fg:w="657619543"/><text x="82.0373%" y="703.50">alloc::vec::Vec&lt;T,A&gt;::ex..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (657,619,543 samples, 15.74%)</title><rect x="81.7873%" y="677" width="15.7449%" height="15" fill="rgb(218,196,15)" fg:x="3416029465" fg:w="657619543"/><text x="82.0373%" y="687.50">core::iter::traits::iter..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (657,619,543 samples, 15.74%)</title><rect x="81.7873%" y="661" width="15.7449%" height="15" fill="rgb(218,196,35)" fg:x="3416029465" fg:w="657619543"/><text x="82.0373%" y="671.50">&lt;core::iter::adapters::m..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (657,619,543 samples, 15.74%)</title><rect x="81.7873%" y="645" width="15.7449%" height="15" fill="rgb(233,63,24)" fg:x="3416029465" fg:w="657619543"/><text x="82.0373%" y="655.50">core::iter::traits::iter..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (657,619,543 samples, 15.74%)</title><rect x="81.7873%" y="629" width="15.7449%" height="15" fill="rgb(225,8,4)" fg:x="3416029465" fg:w="657619543"/><text x="82.0373%" y="639.50">core::iter::adapters::ma..</text></g><g><title>workload_gen::spec::Inserts::generate_operations::_{{closure}} (537,695,866 samples, 12.87%)</title><rect x="84.6585%" y="613" width="12.8736%" height="15" fill="rgb(234,105,35)" fg:x="3535953142" fg:w="537695866"/><text x="84.9085%" y="623.50">workload_gen::spec:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,451,664 samples, 0.11%)</title><rect x="97.4255%" y="597" width="0.1066%" height="15" fill="rgb(236,21,32)" fg:x="4069197344" fg:w="4451664"/><text x="97.6755%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,451,664 samples, 0.11%)</title><rect x="97.4255%" y="581" width="0.1066%" height="15" fill="rgb(228,109,6)" fg:x="4069197344" fg:w="4451664"/><text x="97.6755%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_fold (4,451,664 samples, 0.11%)</title><rect x="97.4255%" y="565" width="0.1066%" height="15" fill="rgb(229,215,31)" fg:x="4069197344" fg:w="4451664"/><text x="97.6755%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4,451,664 samples, 0.11%)</title><rect x="97.4255%" y="549" width="0.1066%" height="15" fill="rgb(221,52,54)" fg:x="4069197344" fg:w="4451664"/><text x="97.6755%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4,451,664 samples, 0.11%)</title><rect x="97.4255%" y="533" width="0.1066%" height="15" fill="rgb(252,129,43)" fg:x="4069197344" fg:w="4451664"/><text x="97.6755%" y="543.50"></text></g><g><title>&lt;rand::distributions::distribution::DistIter&lt;D,R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,451,664 samples, 0.11%)</title><rect x="97.4255%" y="517" width="0.1066%" height="15" fill="rgb(248,183,27)" fg:x="4069197344" fg:w="4451664"/><text x="97.6755%" y="527.50"></text></g><g><title>&lt;&amp;D as rand::distributions::distribution::Distribution&lt;T&gt;&gt;::sample (4,451,664 samples, 0.11%)</title><rect x="97.4255%" y="501" width="0.1066%" height="15" fill="rgb(250,0,22)" fg:x="4069197344" fg:w="4451664"/><text x="97.6755%" y="511.50"></text></g><g><title>&lt;rand::distributions::other::Alphanumeric as rand::distributions::distribution::Distribution&lt;u8&gt;&gt;::sample (4,451,664 samples, 0.11%)</title><rect x="97.4255%" y="485" width="0.1066%" height="15" fill="rgb(213,166,10)" fg:x="4069197344" fg:w="4451664"/><text x="97.6755%" y="495.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::next_u32 (4,451,664 samples, 0.11%)</title><rect x="97.4255%" y="469" width="0.1066%" height="15" fill="rgb(207,163,36)" fg:x="4069197344" fg:w="4451664"/><text x="97.6755%" y="479.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (4,451,664 samples, 0.11%)</title><rect x="97.4255%" y="453" width="0.1066%" height="15" fill="rgb(208,122,22)" fg:x="4069197344" fg:w="4451664"/><text x="97.6755%" y="463.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (4,451,664 samples, 0.11%)</title><rect x="97.4255%" y="437" width="0.1066%" height="15" fill="rgb(207,104,49)" fg:x="4069197344" fg:w="4451664"/><text x="97.6755%" y="447.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (4,451,664 samples, 0.11%)</title><rect x="97.4255%" y="421" width="0.1066%" height="15" fill="rgb(248,211,50)" fg:x="4069197344" fg:w="4451664"/><text x="97.6755%" y="431.50"></text></g><g><title>_start (3,081,532,671 samples, 73.78%)</title><rect x="23.7613%" y="1109" width="73.7787%" height="15" fill="rgb(217,13,45)" fg:x="992445724" fg:w="3081532671"/><text x="24.0113%" y="1119.50">_start</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4,438,564 samples, 0.11%)</title><rect x="97.5400%" y="1109" width="0.1063%" height="15" fill="rgb(211,216,49)" fg:x="4073978395" fg:w="4438564"/><text x="97.7900%" y="1119.50"></text></g><g><title>asm_exc_page_fault (13,296,721 samples, 0.32%)</title><rect x="97.6463%" y="1109" width="0.3184%" height="15" fill="rgb(221,58,53)" fg:x="4078416959" fg:w="13296721"/><text x="97.8963%" y="1119.50"></text></g><g><title>_compound_head (4,184,933 samples, 0.10%)</title><rect x="97.9652%" y="885" width="0.1002%" height="15" fill="rgb(220,112,41)" fg:x="4091738006" fg:w="4184933"/><text x="98.2152%" y="895.50"></text></g><g><title>folio_remove_rmap_ptes (3,916,708 samples, 0.09%)</title><rect x="98.2577%" y="869" width="0.0938%" height="15" fill="rgb(236,38,28)" fg:x="4103956834" fg:w="3916708"/><text x="98.5077%" y="879.50"></text></g><g><title>free_unref_page_commit (12,976,512 samples, 0.31%)</title><rect x="98.3515%" y="789" width="0.3107%" height="15" fill="rgb(227,195,22)" fg:x="4107873542" fg:w="12976512"/><text x="98.6015%" y="799.50"></text></g><g><title>free_pcppages_bulk (12,976,512 samples, 0.31%)</title><rect x="98.3515%" y="773" width="0.3107%" height="15" fill="rgb(214,55,33)" fg:x="4107873542" fg:w="12976512"/><text x="98.6015%" y="783.50"></text></g><g><title>__free_one_page (8,726,940 samples, 0.21%)</title><rect x="98.4533%" y="757" width="0.2089%" height="15" fill="rgb(248,80,13)" fg:x="4112123114" fg:w="8726940"/><text x="98.7033%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33,203,834 samples, 0.79%)</title><rect x="97.9646%" y="1109" width="0.7950%" height="15" fill="rgb(238,52,6)" fg:x="4091713680" fg:w="33203834"/><text x="98.2146%" y="1119.50"></text></g><g><title>do_syscall_64 (33,203,834 samples, 0.79%)</title><rect x="97.9646%" y="1093" width="0.7950%" height="15" fill="rgb(224,198,47)" fg:x="4091713680" fg:w="33203834"/><text x="98.2146%" y="1103.50"></text></g><g><title>x64_sys_call (33,203,834 samples, 0.79%)</title><rect x="97.9646%" y="1077" width="0.7950%" height="15" fill="rgb(233,171,20)" fg:x="4091713680" fg:w="33203834"/><text x="98.2146%" y="1087.50"></text></g><g><title>__x64_sys_exit_group (33,179,508 samples, 0.79%)</title><rect x="97.9652%" y="1061" width="0.7944%" height="15" fill="rgb(241,30,25)" fg:x="4091738006" fg:w="33179508"/><text x="98.2152%" y="1071.50"></text></g><g><title>do_group_exit (33,179,508 samples, 0.79%)</title><rect x="97.9652%" y="1045" width="0.7944%" height="15" fill="rgb(207,171,38)" fg:x="4091738006" fg:w="33179508"/><text x="98.2152%" y="1055.50"></text></g><g><title>do_exit (33,179,508 samples, 0.79%)</title><rect x="97.9652%" y="1029" width="0.7944%" height="15" fill="rgb(234,70,1)" fg:x="4091738006" fg:w="33179508"/><text x="98.2152%" y="1039.50"></text></g><g><title>exit_mm (33,179,508 samples, 0.79%)</title><rect x="97.9652%" y="1013" width="0.7944%" height="15" fill="rgb(232,178,18)" fg:x="4091738006" fg:w="33179508"/><text x="98.2152%" y="1023.50"></text></g><g><title>mmput (33,179,508 samples, 0.79%)</title><rect x="97.9652%" y="997" width="0.7944%" height="15" fill="rgb(241,78,40)" fg:x="4091738006" fg:w="33179508"/><text x="98.2152%" y="1007.50"></text></g><g><title>__mmput (33,179,508 samples, 0.79%)</title><rect x="97.9652%" y="981" width="0.7944%" height="15" fill="rgb(222,35,25)" fg:x="4091738006" fg:w="33179508"/><text x="98.2152%" y="991.50"></text></g><g><title>exit_mmap (33,179,508 samples, 0.79%)</title><rect x="97.9652%" y="965" width="0.7944%" height="15" fill="rgb(207,92,16)" fg:x="4091738006" fg:w="33179508"/><text x="98.2152%" y="975.50"></text></g><g><title>unmap_vmas (33,179,508 samples, 0.79%)</title><rect x="97.9652%" y="949" width="0.7944%" height="15" fill="rgb(216,59,51)" fg:x="4091738006" fg:w="33179508"/><text x="98.2152%" y="959.50"></text></g><g><title>unmap_single_vma (33,179,508 samples, 0.79%)</title><rect x="97.9652%" y="933" width="0.7944%" height="15" fill="rgb(213,80,28)" fg:x="4091738006" fg:w="33179508"/><text x="98.2152%" y="943.50"></text></g><g><title>unmap_page_range (33,179,508 samples, 0.79%)</title><rect x="97.9652%" y="917" width="0.7944%" height="15" fill="rgb(220,93,7)" fg:x="4091738006" fg:w="33179508"/><text x="98.2152%" y="927.50"></text></g><g><title>zap_pmd_range.isra.0 (33,179,508 samples, 0.79%)</title><rect x="97.9652%" y="901" width="0.7944%" height="15" fill="rgb(225,24,44)" fg:x="4091738006" fg:w="33179508"/><text x="98.2152%" y="911.50"></text></g><g><title>zap_pte_range (28,994,575 samples, 0.69%)</title><rect x="98.0654%" y="885" width="0.6942%" height="15" fill="rgb(243,74,40)" fg:x="4095922939" fg:w="28994575"/><text x="98.3154%" y="895.50"></text></g><g><title>tlb_flush_mmu (17,043,972 samples, 0.41%)</title><rect x="98.3515%" y="869" width="0.4081%" height="15" fill="rgb(228,39,7)" fg:x="4107873542" fg:w="17043972"/><text x="98.6015%" y="879.50"></text></g><g><title>tlb_batch_pages_flush (17,043,972 samples, 0.41%)</title><rect x="98.3515%" y="853" width="0.4081%" height="15" fill="rgb(227,79,8)" fg:x="4107873542" fg:w="17043972"/><text x="98.6015%" y="863.50"></text></g><g><title>free_pages_and_swap_cache (17,043,972 samples, 0.41%)</title><rect x="98.3515%" y="837" width="0.4081%" height="15" fill="rgb(236,58,11)" fg:x="4107873542" fg:w="17043972"/><text x="98.6015%" y="847.50"></text></g><g><title>release_pages (17,043,972 samples, 0.41%)</title><rect x="98.3515%" y="821" width="0.4081%" height="15" fill="rgb(249,63,35)" fg:x="4107873542" fg:w="17043972"/><text x="98.6015%" y="831.50"></text></g><g><title>free_unref_page_list (17,043,972 samples, 0.41%)</title><rect x="98.3515%" y="805" width="0.4081%" height="15" fill="rgb(252,114,16)" fg:x="4107873542" fg:w="17043972"/><text x="98.6015%" y="815.50"></text></g><g><title>get_pfnblock_flags_mask (4,067,460 samples, 0.10%)</title><rect x="98.6622%" y="789" width="0.0974%" height="15" fill="rgb(254,151,24)" fg:x="4120850054" fg:w="4067460"/><text x="98.9122%" y="799.50"></text></g><g><title>all (4,176,726,109 samples, 100%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(253,54,39)" fg:x="0" fg:w="4176726109"/><text x="0.2500%" y="1151.50"></text></g><g><title>workload-gen-cl (4,176,724,120 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(243,25,45)" fg:x="1989" fg:w="4176724120"/><text x="0.2500%" y="1135.50">workload-gen-cl</text></g><g><title>sync_regs (51,808,595 samples, 1.24%)</title><rect x="98.7596%" y="1109" width="1.2404%" height="15" fill="rgb(234,134,9)" fg:x="4124917514" fg:w="51808595"/><text x="99.0096%" y="1119.50"></text></g></svg></svg>